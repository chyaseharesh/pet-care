%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 26.0
%%For:  
%%CreationDate: 4/4/2022
%%BoundingBox: 0 0 1350 400
%%HiResBoundingBox: 0 0 1350 400
%%CropBox: 0 0 1350 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.0.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.0.3 x778 R agm 5.2 ct 6.2%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 40 8%%BeginData: 4970 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFD15FFA8FFA8FD10FFA8FD04FFA8FD0FFF7DA8FD24
%FFA8FFFFA8A8FD0DFFA8FD1DFFA87DA87DA87DA87DFD0CFF7E2E7DFFFF7D
%7DA8FD0AFFA87D7D597D53597DA8A8FD0DFF52A8FD0FFFA87D7D7DFF7DA8
%A8FD0AFFA8527D7D7DA8FD1AFF7DA8A8A87DA87D52A8FD0BFF2E5959FFFF
%A87DA8FD0AFF7DA87D7E7E8453FF7DFD0CFFA97D7E59A8FD0EFF7D7D7DFF
%FFA8A8FD0AFF7D52A8A8A8527DA8FD19FFA8A8FFA8FFA8A852FD0BFFA852
%2E53A8A852A87DFD09FFA8A8FFFFA8A8A8FFFFA8A8FD0BFFA8595A597DFD
%0DFFCA592F7DCFFFA8A8FD09FFA852A8FFFFFFA8527DFD19FF7DA8A8FFA8
%FFA87DFD0CFF537E59A8A8A87DA8FD0AFFA8FD07FFA8FD0DFFA853A8FD0F
%FF7DFF7DFD0DFF7DA8FFFF7DA8FFFF7DFD19FFA8A8FFA8FFFFFF52FD0BFF
%A8597DFD04FFA87DFD0AFFA8FFA8A8FFA8FFFFA8A8FD0DFFA8FD0FFF7DA8
%FFFF7DFD0CFF7D7DFF525953A8A87DFD19FFA8FFA85984FFA87DFD0BFFA8
%A8FFA8FD04FFA8A8FD09FFA8FD07FFA8FD09FFA87D52A8FFFFFD04A87DA8
%FD09FF7DA8FFFFA8A8FD0BFF7D7DFFA8527DA8FF52FD18FFA8A884535A59
%7DA87DFD0BFF7DFFA87DFFFF7DFFA8A8FD09FFA8A8FFA8FFA8FFFFA8A8FD
%08FFA85252277D7DA8A8FFA8A87DFD09FF52A8A8FFA8A8FD0BFFA852A8A8
%CFA8FF7D7DFD19FFA8FF7E597DFFA8A8A8FD09FFA8A8FFA8FFA8A8FFA8FF
%A8FD09FFA8FFFFFFA8FFFFFFA8FD0AFFA8A87D52A8A8FFFFFF7DA8FD08FF
%A8A8FD04FFA8FD0CFF7D7DFFFFFF7D7D7DFD18FFA8A8FFFF7DFFFFA8A8A8
%FD0AFF7DFF7DFF7DA8A87DA8A8A8FD08FFA8FFFFA8FFA8FFFFA8A8FD0AFF
%A87DA8A8FFA8A87D7DA8FD09FFA8FFFFFFA8A8FD0CFFA87D527D52FD047D
%FD18FF7DFFA8FFA8FFA8FF7DFD0AFF7DA8FD06FFA87DFD09FFA8FD07FFA8
%FD0CFFA87DA8A8A87DFD0BFFA8A8FD04FFA8FD0EFFFD04A8FF7DA87DFD16
%FFA87DFD04FFFD04A8FD0AFFA87DA8FFFFFFA8A87DFD09FFA8A8FD07FFA8
%A8FD0DFFA8A8FD0EFF7DA87DFFA8A8FD14FF7DA87DFD16FF7DFD05A87D7D
%A8FD0CFFA87DA87DA8A8FD0BFFFD08A87DFD1EFFA87DA8A8A8FD16FF7DA8
%FD17FFA8FFFFFFA8FD13FFA8FD0FFFA8FFFFFFA8FD23FFA8FDFCFFFDFCFF
%FD17FFA8FD36FFA8FD21FFA8A87DA8A8FD21FF7DA8A87DFD23FFA8A87DFD
%0DFF7DA87DA8FD0BFFA852FD11FFFD04A87DA87DFD11FF527D7DFD0BFF7D
%FF7DA8A87DFD1DFFA8A87EA9FFFF7D7DA8FD0BFFA8A8FFFF7DFD0CFF7D7D
%FD10FFA8A87DA8A87DA8A8FD0FFFA87D52A8FD0AFFA8A8A87E59FFA8FD1C
%FF845953592E84FFFF52A8FD08FFA87E7D7D59A8A8A87DA87DFD09FFA87D
%7DA8FD0EFFA8A87DA87DA8A8FD11FF7D7D7DFD0BFF7D7D53597DA852A8A8
%7D7DFD17FFA87DFFA8A87DFFFFFFA8FD07FFCF7D7E847E7EA8FFA8FFA8A8
%7DFD09FF7DFF7DA8FD0DFFFD07A8FD10FFA87DA8A8FD0BFFA8FF847DFF7D
%FD04FFA87DFD16FF7DFFA8FFA87DA8FFA87D7DFD06FFA82E7D7D7D52A87D
%7D527D7D7DA8FD08FFA87DFFA87DFD0CFFA8A852A87D7D7DFD0FFFA87D52
%7D527DFD0AFFA87DA8A87DA8FD05FFA8A8FD15FF7DA8FFA8A87DFFFF7D7D
%A8FD06FF7D7DA8A8A87D7ECF7DA8A8A87DFD0AFFA8A8A87DA8FD0BFFA8A8
%FFA8FFA8A8CAFD0EFF7E7DA87DA852FD0BFFA8A8A87DFFA8A8FF7DFFA8FD
%16FF52FD04FFA8A8FFA8A8FD06FFCA7E7DA8A8A8597EA8FFA8FFA8A87DFD
%0AFF7D53597DA8FD0AFFA8A87DA17DA87D847D7E7DA9FD0AFF527DA8FF7D
%597DFD0AFFA8FFFFA8FFA8FFA8A8FFA8A8FD14FFA8A8FD04FFA8A8FD0AFF
%7E847D7D7D84597DFD04A87DA8FD0AFFA8A7537D7DA8FD09FFA8A8A87D59
%53595359535984FD09FF7D597DFFFFA85959FD0AFF7DA8A8FD07FF7DFD16
%FFA8FD04FFA8A8FD0AFF8453A77DA1597EA8FD04FFA8A8FD0BFFA8FD047D
%A8FD08FF7DA8A8A87DFD05A87DFD09FFA8537DA8FFFFFFA1527EFD0AFF7D
%7D7DA87DA8A8FF7DA8FD15FFA8A8FFFFA8FFA8FD0BFF7E597DA87D7D84FD
%05FF7DFD0DFFFD04A87DFD08FFA87D7D7DA8FD05FFA8A8FD08FF8459A8A8
%FFFFFFA8A852FD0DFFA8FFA87D7DA8FD17FF7DFD04A87DFD0CFF535A537E
%527DFD04A87DA8FD0EFF7D7D52A8FD08FFA87D7DA852A8A8FFA8FF7DFD09
%FF7D7D7DFD04FFA87D7DFD11FF527DFD18FFFD05A8FD0DFFFD06A87DA8A8
%A8FD10FF7DFD0BFFA8FFFD08A8FD0AFF7DFD06FFA8A8FD11FFA8A8FDFCFF
%FDFCFFFD92FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.a8731b9, 2021/09/09-00:37:38        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:MetadataDate="2022-04-04T14:23:38+09:00"
   xmp:ModifyDate="2022-04-04T14:23:38+09:00"
   xmp:CreateDate="2022-04-04T14:23:38+09:00"
   xmp:CreatorTool="Adobe Illustrator 26.0 (Windows)"
   xmpMM:InstanceID="xmp.iid:9787d770-24c1-7b40-aa67-91cf2abf707d"
   xmpMM:DocumentID="xmp.did:9787d770-24c1-7b40-aa67-91cf2abf707d"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 16.03">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">2204.w039.n003.180B.p1.180</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="76"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgATAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUu8y3k9l5c&#xA;1W8gk9Ke2s7iaKWgbi8cTMrUaoNCK74qxGSDzDIqf7k4oHUUcJrQNT789Pb8KYqoWOr+YrDzh5f0&#xA;ia/Fxaaq928xF5FegrbWxb0/947VkYu6MKSHZW+Hvir0bFXYqxf8ztWv9K8j6ld2DcLs+hbxyBxE&#xA;UF1cR27OsjFQrIspYGooRkoCyGMzQYp+U3naD6tqdlrd+YOEsd3YvqEyoWguAycYWluLl5IxLA7B&#xA;y9Dyqvw8cszRAOzDDIkbpj5L8wXl5rVvdSzu9prUU80UbzySfbkd7cCF/gg9KOCWP4Kc6cjvlLa9&#xA;CxV2KsV1o+cL691S10S+jsjZx25tuSIS8jHm6s7pMEDKvHl6ZpWtDhFXug8tmH/4S/MQXct7p899&#xA;Y61cGRZNSlk0t4yH+z6pEMskkaELwT0/hGy8d63E462tpAyXvT0PS5dTTWb2xvLoXUcVtbTxN6ax&#xA;sGmedXB4ncfuVplDem+KuxVKvMer3ulWKXFnYPqMjyiNoo/U+FSrHmfSjnelVA2TvhiLKJGgxX8t&#xA;fM/mC/mk03UpJNXiWIXCa+EEaVMNswgYR29tDyYzs6cSx4D4qHLMsBE7FrxTMhuGf5U2uxV2KvK/&#xA;P/mjVIvM9xp0cF2ltax2hSWCe6hI5szzSIltxE3qrSJBI4AdD88nGAIu2BnRqmR6x5WvZ20i3uJr&#xA;rUILdWilvC1vIVlJBilntJ42hkVOnqL+8X/KqWWDNl0CSRwRpJIZpEUK8pAUuwFCxCgAV67YqvxV&#xA;ivnDzJqlteWmh6FGJdXvqFnJAEMbByrEsGCl/SkIYqwUI3ws3FHVSu98ved7GzmuoPMDXupwqZfR&#xA;jjlSWVdvhCyT3FsvQ/Etr8lriqd+SfM1zrVhKl/F6Gp2bmO5jClARyZOXEl+JEkckbDkRzRuJZeL&#xA;FVkeKuxV2KuxV2KpN5xIPlq+t60N8q2CmtDyvXW2Whqu9Zdt8VYjrPnwaTqiWOlWJsbKwmcX1q8M&#xA;MZuQbqGItaKJF7SMasBUsnjl0MVgm2meWjVIma6iv/NvlrUord7W1tLeGaOGRFjlQaxFcqUdegIe&#xA;2j5ANscpbmfYq7FWL+erKPVYtO0UzfVzcXK3c1wBGTDb2VJHlCzK6H94Y4xUfCXDdslGVGwiUbFF&#xA;EeWrDRdMivre3sHsQkxSW7u2R5L0LGh+sGUvI8ifvOALkUpSgWmCUiTZURAFBLbmKzt5oNfh06TT&#xA;5otSCX9tMQrSW8b3FitxHGjvGqVu/X5UBZPtb0wJZlirsVSOKMS6prkZWRwwtgVhcxSH92fsuGjK&#xA;/wDBDFVf0f8Alzvv+kr/ALOMVatRTzTqA/5cLH/k9d4qm2KqN9NNBZXE8EJuZ4o3eK3UhTI6qSqA&#xA;nYcjtXFXmml/nBqUF3HF5i0gpDdhXsptPDylldgoHpt8UnFiFbjR+RVOHMlVVZRoj3VvaLH5Z8s2&#xA;2maQzFljuWOlu5I/vFtYreZlDUA/e8H8V6VVR1lrGqSeYf0XdwW0QW0a5lEEskzKfUVI6s0cI+P4&#xA;9uP7Pviqd4q7FWG+UYrvVPLbXd7paMdejS7vjdTCswuYlYIFRJOMcaMIlVqEBe5qSqnXlWS7/RRt&#xA;ruRpriynntTLI3N2SKVhCWfYu3pcOTEVJqcVTjFXYqwHW9RTRfzJtby8FLS+svqsc4rzUySKKqKE&#xA;FYnjXlXvMvc0ZVKdP/LfzDaeZP0teTwRafHcyXMlw14XnEAKyorxNaLa0WYPNxA4ozHgQfiyfEOG&#xA;q3YcJ4rtPvy/nj1DW/Mes229jdywxwtv1jMrilT9mSGaKYe7kda5BmzbFXYq7FXYq7FUk85P6ehG&#xA;b4gtvdWU8jqrvxSG8hkdyqUYqiqWanYYqlN3f+UdUubLULjXNIuJ7IlrOYSAceTI5+zcgMOcSNRq&#xA;7qD1GEEhBFpZda7pV5rt3bpqNpeanLcaKLSO1dGaS2hvRI7oitK37syS899huaAjAl6JirsVSPXr&#xA;S8S/s9XtoGvVtYLm1urKMhZXgujEzPEWKgujW6/CWFVJoeQAKqR26fl6bLS7a5v4YzpFyb6KHUSt&#xA;vcrKwkIMkdwI5VoZKior8I3OKrntLDVby8g0NHmt9UIGq6nRltFt+VZUhb4UmlmBKhkB47szbKrK&#xA;s2xV2KscOq6Haa9q0Gp3ltb+stuViuZI05rwIqFcioriq/8AS3kD/lt0n/kbbf1xV2i6ppuoeZ9V&#xA;awuIrmKGzsY2eF1kSvqXTbFCR0bFWQYq7FWOax5Ksr6d7i3McbySCea0uoEvLGWZRRZnt5OPGQD9&#xA;uJ0Y/tFsVUtP8vavbF47K20ry/E9Fnm06H1ZpQvRl5JBHEfZllxVNNM8u2On3L3gknub+ZeM93cS&#xA;s7PXjX4AViT7C/YRRtiqaYq7FWE+XPO2lWuk6Xp1yvoS29vBb3Dy3NjH6boio/ON7hZl4EHkpTl7&#xA;VxVPfK9xBc299c28izW817O0MyEMjgMFJVhsRyUjbFU5xV2KpZ5g8uaTr9l9U1KESIpLRSCnONip&#xA;UspII3VirAgqwJVgQSMVY8/5ZQTwx2t7rWo3VlGam3km5iSh2EivzioO3CNSpoV40xVBXugP5Rvj&#xA;f6RIbTTpal7iTnNFG3JpHXUGLNI8EjOzLcfbhcmpMbFQqzbSL86hpdpfGJoDdQpKYW3KF1B41oK0&#xA;8e+KovFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FUk1Dzv5Q066e0vdXtYbmM0lhMilkPWjAV4n2OERKDILrzzVpa6Hdavp&#xA;s8Op29oyrO9vKrpHupkaR4xJxEcb+o/wk8e2AhIKt5f12DWbJriONoZYZDDcwOCCkgUOOoWqvG6u&#xA;jU3VgdumKpnirsVSnUdVvxqcel6ZBHNdGL6xdTTsyRQRFuEdeKsWeVlbgu2ysSdgCqu0bVru6nu7&#xA;HULZbXUbIoZEjcyxSRSgmKaNisbcW4spDKKMrDcUYqppirsVY95i83foHVdOt7uykk03UBIpvoeT&#xA;mGWMcyJIgv2PT5OWDVAVjxoCQqn1vcQXEEdxbyLNBKoeKWNgyMrCoZWFQQR3xVfirsVdirB9R856&#xA;kl/JBDd2toHe4itYZbKa5YG3eWJWllS5t0HqvbScUC9KVOKonQ/OFzdasunyXFtf/v2tJ5IIJLRo&#xA;5FjmdZAkktyHikNrIo+IHYH4lIOKsvxV2KuxVZPMkEEk0n2IlLvTc0UVOKsK8nfmTL5g1yfSp9Pj&#xA;tGijZw0dwJ2DB2AWReCceUYB6nev7Bjd1WcYq7FUg80axLaT2lml2unRzpLcXeosquYoIGijKxKw&#xA;ZfVeS4jC8lYUrsTTEC1JYzpnnK6eK5votQupjpvOa50vUI7ZWn0+IRmW7ga3hgZWRZagGoJHCg5B&#xA;hOcDHmwhMS5PQYLq2uATBMkwXZjGwYA+9MgzVMVdirsVdirsVdirzjy9pmj61pkmu/Ub+/fVJ3ui&#xA;tleNbwx+rQ8I1+txLt+237Tljt0FkcsgKBYSxRO5CeeTbT9H6prNhFa3FpayG2vo4byUTzB5ka3f&#xA;94JrmqUtFK1aoJbtTIykSbLKMQBQS/ydq6y63PYaBplvZ6FHK/1r0o91aPnD+8dXVYpQ8SKLf0yU&#xA;jpUr9gRSzvFXmn5h3d3qfmvT9BgjWa1gWJ7mORPXiaW5cqpeL1IgzwhFK8moBJXqBlsDwjiq2qY4&#xA;jVsQksbXTNY0m8vNJsI7Yj61NKlpFHWJJ/SuVlUSTB41gLSb/tgHtXLOPjBFBhwcBBssma21S2uH&#xA;SXyjYT/V/wC/kh03aYW8wEqxHj/uyGZXjJ/aVgA24GM5DIPIM2p2M0+h6lEYCqtPaRhXSIGOT0rl&#xA;LYPU+gC0Uib0X1Ci/CoGKs0xVA63pSapp0loZDBLVZLa5UVaGeMh4pVB2JRwDQ7HodicVYLceZ7H&#xA;y/FDexSpp+ozzyQar5ect9Va5j4mZ45KcbUt6iusrUjcODIBy9RSASgkBn+m6la6jZpdWxPBqhkc&#xA;cXR1NHjkU7q6NsynocCUTirsVea3xvkvIpk+pJaxPrTPJP6P1kILi79cR8v332eBHp7bHltTFUTp&#xA;r3dlrqfpQ6fapNrM00YtzDG7MbO7V3k9OnKqhKNJ8deQboMVZ5Bd2lxy+rzRzcacvTYNSvStCfDF&#xA;VXFXYqx7zn5nbQ7WxS3Ctf6pe29haB1aREM8gVpXRCjFEB7MKsVWu4wgWgmnl9l5i17y3JpOq3Fp&#xA;Bc22m6cLNruMu8tzpv6QjtEEXFU9Z1MazRuFA4ShSvIhmQLUmnt8UscsaSxOJI5AGR1IKspFQQR1&#xA;BwJXYqxrzrp0cltFqZtoL76oj29xp92oaC4trl4/UjbksgU84o3U8T9mneoVYlZ+WNN0+6XRo9Hl&#xA;05/MUktrJfXqWsk6WIjVprC0exVwkDRwfCJpF41LDkRQSMieaBEBkbp+XL2jSnSrcQtenSiRp7K3&#xA;1kyelxFIgQOe3qfZr3rkUph5f0+DSdX1DSbFfS0uO3tLm2tqkrE8pmikVK14oRbq1P5ix6nFU/xV&#xA;2KuxV2KuxVjnkzU7IeUdFSKOdUisbeMKLacAcIlUgfBQgU6jbFV9lOJ/Ot48TSemum26zRukkdG9&#xA;eYoSHC1qOVPpxVkGKuxV5R54SWz87qWD/V7p7e8eQR+oVTh6ErIvpXFfSa2h5fAaeoK5dEGUKHQt&#xA;JPDOz1DHPq/1iaCytJJLk3trLpkU5hESCW6uggZWFtaFuMZaQirHip6ZLEDGyR0Y5CJUAer16y8p&#xA;W0Fssdxf6hdzD7U7312hP+xSVQMx3IQmlafbf4uuJrV7h4dLtTaSyT3M9wrT3TRzOi+u8nExRwxk&#xA;8evP2xVk+KuxViXnvyemr2r3dtGz3ioBNBGVV50TkV9Nn/drPHyb02f4SC0b/A7YYyINhBAIosR8&#xA;pXr6DLYm1lSWG7u7fTBHVvVuI2Zo+dxDt6E9qoVfiUNxVomUrGkuJNqBT1vAl2KvIvMItpHmP6Ju&#xA;buRV1oPqMTN6MJSe+4iQcCvwcyaF1+0DRiFGKpjo/wCVmn3lnK6azfQQrdXlukEUWmMipBdSwqOU&#xA;tnLIx4p8RZiSa1y4Z5BqOCJWQflfZaL5n0WZb57q2kuwUjkgsIpQ8EMtwvxW1rA3HnCtaMP5TtkZ&#xA;ZZEUUjEAben5W2OxV5Bd2l15y88zzXIlt9NtryTR7E7ox+q+obuRDRWp+5Yc1JHJ4TUPDkyaFBgB&#xA;Ztm3nvy9YXXll3WAqdJiaW3SAcX9GNf3sMfEbFo1olPsuEYbqMiDTIi0t/Ky8v7eLUvK98paTQ3j&#xA;a1uVXjFLa3RkMLRUAXgfSZkCVVEKpUsrZKdHdjCxszvIM0Nqmnwalp1zYTsyRXUbRM8Z4uvIU5Ia&#xA;GjL1U+OKpRax+erQyrM9hq6s4aOVmksGRSaFeCR3YNBuN+v4KrrvzFf6U8MuuWUNrpkrenJqEFw0&#xA;6QOxAjM4eGDhGxPHmKhTTlQbhV3lJbq7s18wXrhrzWILeURIGWOCAIXigUNuxUyuWcgFiegAChVP&#xA;sVdirsVdirsVSpvK3l8u7iyRC7F2EZaNSzGrNxQqtSdztucVRen6TpunLItlbpB6zc5io+J2oF5O&#xA;x3Y0AG/bFUVirsVQWqaJpGqoiajZxXQiPKIyKCyE9SjfaUmnY4QSOSCAeaWSfl/5MkZHk0mCR46+&#xA;mz8mK8utCTtXCZE8ygRA5O/5V/5M/wCrTB9x/rkWSc2VhY2FslrY28VrbR14QQIsca8jU0VQAKk1&#xA;xVXxV2KuxVAx6FoserSaxHYW6arKnpS3yxoJ2QU+EyU5EbD7hiqOxV2Kpdc+WvLl1cyXVzpVnPdS&#xA;09WeS3ieRuIovJmUk0HTFUNB5M8r26FLbT44ELFmWItGCzGpYhSKk+OKoi08uaHa3iXsFmi3cStH&#xA;FO1XdFkpzCsxJXlxFadaYqmWKuxVBQ6Jo8GpzarDZQx6lcLwnvFRRK6/DszAVNfTWv8AqjwGKo3F&#xA;UFpOiaRpFu1vpdnDZQO3qPFAixqWoFqQoH7KgD2AHTFUbirsVdiqyeCC4gkgnjWWCVSksTgMjowo&#xA;ysp2II2IOKrLKytLGzgsrOFbe0tkWKCCMcUREFFVQOwAxVWxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:4a223b72-559b-c14d-bd81-2dea202e01bc"
    stRef:documentID="xmp.did:4a223b72-559b-c14d-bd81-2dea202e01bc"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:6eeade72-cf12-a347-b31a-85118ae3f1e8"
      stEvt:when="2021-10-28T14:45:37+09:00"
      stEvt:softwareAgent="Adobe Illustrator 26.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:4a223b72-559b-c14d-bd81-2dea202e01bc"
      stEvt:when="2022-04-04T14:23:31+09:00"
      stEvt:softwareAgent="Adobe Illustrator 26.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:9787d770-24c1-7b40-aa67-91cf2abf707d"
      stEvt:when="2022-04-04T14:23:38+09:00"
      stEvt:softwareAgent="Adobe Illustrator 26.0 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="1350.000000"
    stDim:h="400.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                 
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
1350 400 li
1350 0 li
cp
clp
1350 400 mo
0 400 li
0 0 li
1350 0 li
1350 400 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
407.373 101.334 mo
406.749 95.8398 406.951 92.1644 406.951 87.632 cv
406.951 80.7758 406.324 48.0916 393.553 48.9176 cv
385.634 49.4299 382.071 83.5319 381.431 84.4576 cv
372.895 82.1794 363.07 82.2662 354.314 84.7969 cv
353.587 83.6573 352.924 48.7866 342.806 48.7866 cv
328.305 48.7866 330.048 90.8517 329.462 99.5977 cv
327.341 103.917 317.295 122.95 318.244 136.375 cv
318.849 144.937 325.866 151.862 333.352 156.622 cv
350.29 167.393 370.374 168.45 390.002 163.301 cv
402.969 159.9 417.664 145.506 417.664 132.679 cv
417.664 114.922 408.954 104.577 407.373 101.334 cv
cp
f
342.806 49.5615 mo
331.195 49.5615 330.641 80.5923 330.403 93.8433 cv
330.358 96.3594 330.322 98.3467 330.235 99.6494 cv
330.228 99.75 330.202 99.8486 330.157 99.939 cv
329.641 100.979 li
326.797 106.67 318.145 123.988 319.018 136.32 cv
319.645 145.207 327.386 151.91 333.769 155.969 cv
349.269 165.825 368.645 168.102 389.806 162.551 cv
402.072 159.333 416.888 145.291 416.888 132.679 cv
416.888 118.118 410.909 108.564 408.036 103.973 cv
407.435 103.012 406.96 102.253 406.678 101.673 cv
406.639 101.594 406.614 101.509 406.603 101.421 cv
406.099 96.9751 406.128 93.7104 406.16 90.2539 cv
406.168 89.3999 406.176 88.5327 406.176 87.6318 cv
406.176 82.8223 405.8 58.4761 398.36 51.5029 cv
396.937 50.1689 395.399 49.5757 393.603 49.6909 cv
387.885 50.061 384.165 73.0273 382.943 80.5742 cv
382.362 84.1582 382.272 84.603 382.068 84.8984 cv
381.882 85.167 381.547 85.29 381.23 85.2065 cv
372.79 82.9531 363.059 83.0767 354.528 85.5415 cv
354.196 85.6367 353.845 85.5029 353.66 85.2129 cv
353.433 84.8564 353.358 84.209 353.042 80.7319 cv
352.267 72.207 350.206 49.5615 342.806 49.5615 cv
cp
367.937 167.066 mo
355.021 167.066 343.165 163.781 332.936 157.276 cv
326.253 153.027 318.145 145.96 317.471 136.43 cv
316.569 123.675 325.364 106.071 328.254 100.287 cv
328.698 99.3926 li
328.776 98.124 328.81 96.2114 328.853 93.8154 cv
329.119 78.9482 329.673 48.0117 342.806 48.0117 cv
351.621 48.0117 353.623 70.0166 354.586 80.5913 cv
354.701 81.8662 354.813 83.0918 354.905 83.8267 cv
363.245 81.5752 372.616 81.4609 380.875 83.5142 cv
381.012 82.8018 381.208 81.5884 381.413 80.3262 cv
383.954 64.6348 387.379 48.5405 393.504 48.144 cv
395.688 48.0039 397.692 48.7515 399.421 50.3721 cv
407.127 57.5962 407.727 80.7173 407.727 87.6318 cv
407.727 88.5376 407.718 89.4092 407.71 90.2681 cv
407.679 93.6401 407.649 96.8267 408.129 101.11 cv
408.385 101.609 408.815 102.296 409.35 103.15 cv
412.3 107.864 418.438 117.673 418.438 132.679 cv
418.438 146.175 403.258 160.625 390.198 164.05 cv
382.521 166.064 375.067 167.066 367.937 167.066 cv
cp
0 0 0 rgb
f
350.004 110.367 mo
348.912 110.194 347.811 110.828 347.264 111.674 cv
346.716 112.52 346.619 113.531 346.633 114.503 cv
346.646 115.461 346.77 116.46 347.356 117.269 cv
347.941 118.078 349.102 118.635 350.145 118.348 cv
351.516 117.97 351.957 116.491 352.179 115.245 cv
352.334 114.38 352.489 113.493 352.291 112.634 cv
352.094 111.776 351.581 110.615 350.004 110.367 cv
cp
f
331.095 65.4318 mo
331.197 62.5756 331.344 59.6955 332.075 56.9323 cv
332.805 54.1692 334.169 51.4997 336.353 49.6566 cv
338.538 47.8134 341.619 46.9099 344.35 47.7532 cv
346.304 48.3564 347.939 49.7966 349.003 51.5427 cv
350.067 53.2888 350.592 55.3236 350.765 57.361 cv
350.803 57.8178 350.822 58.2945 350.644 58.7167 cv
350.489 59.0823 350.201 59.3725 349.917 59.6491 cv
347.478 62.0171 344.731 64.1317 341.589 65.4274 cv
338.446 66.7231 334.869 67.1511 331.095 65.4318 cv
cp
.67451 .831373 .968627 rgb
f
331.889 64.9307 mo
334.886 66.1548 337.966 66.0815 341.293 64.7109 cv
343.979 63.6035 346.624 61.7661 349.377 59.0928 cv
349.624 58.8525 349.837 58.6353 349.93 58.4155 cv
350.043 58.1479 350.021 57.7651 349.992 57.4268 cv
349.811 55.2896 349.256 53.4458 348.341 51.9458 cv
347.316 50.2637 345.778 49.0054 344.122 48.4932 cv
341.812 47.7832 338.961 48.4712 336.853 50.249 cv
334.503 52.2319 333.365 55.0854 332.824 57.1304 cv
332.166 59.6162 331.993 62.2383 331.889 64.9307 cv
cp
336.203 67.3374 mo
334.344 67.3374 332.53 66.937 330.773 66.1367 cv
330.488 66.0068 330.309 65.7173 330.32 65.4038 cv
330.427 62.4346 330.584 59.5371 331.326 56.7339 cv
332.183 53.4922 333.749 50.8403 335.853 49.0645 cv
338.394 46.9214 341.738 46.1367 344.579 47.0122 cv
346.622 47.6436 348.429 49.1094 349.665 51.1392 cv
350.705 52.8457 351.335 54.917 351.537 57.2954 cv
351.582 57.8179 351.608 58.4258 351.357 59.0186 cv
351.152 59.5049 350.814 59.8569 350.457 60.2046 cv
347.56 63.0176 344.756 64.9604 341.884 66.1436 cv
339.955 66.9395 338.057 67.3374 336.203 67.3374 cv
cp
0 0 0 rgb
f
351.384 55.89 mo
352.331 58.4839 352.738 64.5829 353.973 69.5265 cv
350.547 74.2747 342.565 76.4686 331.166 80.2011 cv
330.887 79.6705 330.079 64.4236 329.856 64.4426 cv
334.157 64.0331 343.459 63.3647 351.384 55.89 cv
cp
.67451 .831373 .968627 rgb
f
330.75 65.1372 mo
330.859 66.1479 330.99 68.0635 331.247 71.8257 cv
331.421 74.374 331.646 77.6704 331.797 79.1797 cv
332.596 78.9194 333.378 78.6665 334.142 78.4194 cv
343.36 75.4346 350.081 73.2588 353.133 69.3545 cv
352.575 67.0225 352.186 64.4609 351.842 62.188 cv
351.563 60.3535 351.297 58.5952 350.986 57.2959 cv
343.562 63.7432 335.16 64.7173 330.75 65.1372 cv
cp
331.166 80.9761 mo
330.885 80.9761 330.617 80.8223 330.48 80.562 cv
330.306 80.2305 330.206 79.3394 329.7 71.9312 cv
329.501 69.0083 329.254 65.3945 329.143 64.7441 cv
329.112 64.6724 329.092 64.5952 329.085 64.5137 cv
329.046 64.0884 329.358 63.7119 329.783 63.6714 cv
330.177 63.6343 li
334.454 63.2329 343.354 62.3979 350.853 55.3262 cv
351.042 55.147 351.309 55.0781 351.563 55.1357 cv
351.817 55.1958 352.023 55.3794 352.113 55.6245 cv
352.628 57.0371 352.974 59.3164 353.374 61.9556 cv
353.731 64.3125 354.137 66.9839 354.725 69.3384 cv
354.78 69.5601 354.734 69.7949 354.602 69.98 cv
351.358 74.4741 344.337 76.7476 334.619 79.894 cv
333.581 80.23 332.51 80.5767 331.407 80.9375 cv
331.327 80.9639 331.246 80.9761 331.166 80.9761 cv
cp
0 0 0 rgb
f
388.154 110.367 mo
387.063 110.194 385.962 110.828 385.414 111.674 cv
384.867 112.52 384.77 113.531 384.783 114.503 cv
384.797 115.461 384.921 116.46 385.506 117.269 cv
386.092 118.078 387.253 118.635 388.296 118.348 cv
389.667 117.97 390.107 116.491 390.33 115.245 cv
390.485 114.38 390.639 113.493 390.442 112.634 cv
390.244 111.776 389.731 110.615 388.154 110.367 cv
cp
f
368.25 142.993 mo
367.822 142.993 367.475 142.646 367.475 142.218 cv
367.475 140.81 367.541 138.891 367.611 136.859 cv
367.682 134.84 367.753 132.752 367.753 131.24 cv
367.753 130.811 368.101 130.465 368.528 130.465 cv
368.956 130.465 369.304 130.811 369.304 131.24 cv
369.304 132.779 369.23 134.88 369.16 136.913 cv
369.091 138.931 369.025 140.837 369.025 142.218 cv
369.025 142.646 368.678 142.993 368.25 142.993 cv
cp
f
386.782 130.918 mo
386.682 130.918 386.586 130.858 386.546 130.759 cv
386.493 130.629 386.556 130.48 386.685 130.427 cv
392.195 128.183 398.002 126.682 403.946 125.967 cv
404.076 125.953 404.213 126.05 404.229 126.19 cv
404.246 126.33 404.146 126.456 404.007 126.473 cv
398.108 127.183 392.346 128.672 386.879 130.899 cv
386.847 130.912 386.814 130.918 386.782 130.918 cv
cp
f
388.777 135.519 mo
388.665 135.519 388.562 135.444 388.531 135.331 cv
388.494 135.195 388.574 135.055 388.71 135.018 cv
393.136 133.81 397.888 133.456 402.462 133.993 cv
402.602 134.01 402.701 134.137 402.685 134.276 cv
402.669 134.417 402.56 134.517 402.401 134.5 cv
397.9 133.969 393.209 134.318 388.845 135.51 cv
388.822 135.516 388.8 135.519 388.777 135.519 cv
cp
f
397.81 142.908 mo
397.78 142.908 397.749 142.903 397.719 142.891 cv
395.029 141.854 392.194 141.305 389.293 141.26 cv
389.152 141.258 389.04 141.142 389.042 141.001 cv
389.044 140.86 389.182 140.727 389.301 140.75 cv
392.263 140.795 395.157 141.356 397.902 142.415 cv
398.034 142.466 398.1 142.614 398.049 142.745 cv
398.01 142.846 397.913 142.908 397.81 142.908 cv
cp
f
349.577 130.482 mo
349.545 130.482 349.513 130.477 349.481 130.464 cv
344.012 128.236 338.249 126.747 332.352 126.038 cv
332.212 126.021 332.112 125.894 332.129 125.754 cv
332.145 125.615 332.281 125.518 332.412 125.531 cv
338.355 126.246 344.162 127.747 349.674 129.991 cv
349.804 130.044 349.866 130.193 349.813 130.324 cv
349.773 130.423 349.678 130.482 349.577 130.482 cv
cp
f
347.582 135.083 mo
347.56 135.083 347.537 135.08 347.515 135.074 cv
343.15 133.883 338.46 133.532 333.958 134.065 cv
333.797 134.077 333.69 133.981 333.675 133.841 cv
333.658 133.702 333.758 133.575 333.897 133.558 cv
338.47 133.02 343.224 133.374 347.649 134.582 cv
347.785 134.619 347.865 134.759 347.828 134.895 cv
347.797 135.009 347.694 135.083 347.582 135.083 cv
cp
f
338.549 142.473 mo
338.446 142.473 338.35 142.411 338.31 142.31 cv
338.26 142.178 338.325 142.031 338.457 141.98 cv
341.203 140.92 344.097 140.36 347.059 140.314 cv
347.06 140.314 347.061 140.314 347.062 140.314 cv
347.201 140.314 347.315 140.426 347.317 140.565 cv
347.319 140.706 347.207 140.822 347.066 140.824 cv
344.165 140.869 341.33 141.418 338.641 142.456 cv
338.61 142.467 338.579 142.473 338.549 142.473 cv
cp
f
368.661 131.004 mo
368.612 131.004 368.563 131.003 368.515 131.002 cv
364.773 130.938 361.797 129.183 360.554 126.307 cv
360.384 125.914 360.564 125.457 360.957 125.288 cv
361.349 125.119 361.806 125.298 361.976 125.691 cv
362.972 127.993 365.426 129.399 368.542 129.453 cv
368.581 129.453 368.621 129.454 368.661 129.454 cv
371.136 129.454 373.899 128.149 374.478 125.612 cv
374.574 125.194 374.988 124.934 375.407 125.029 cv
375.824 125.124 376.085 125.54 375.99 125.957 cv
375.195 129.44 371.665 131.004 368.661 131.004 cv
cp
f
387.328 86.0342 mo
391.225 87.9976 396.003 90.5757 399.198 93.4155 cv
399.66 86.1787 398.472 68.5273 397.485 65.3936 cv
397.064 64.0601 396.479 63.2759 395.695 62.9961 cv
394.746 62.6553 393.7 63.1733 393.087 63.8374 cv
392.412 64.5688 392.038 65.5488 391.685 66.5728 cv
389.512 72.8657 388.047 79.4121 387.328 86.0342 cv
cp
399.415 94.2124 mo
399.352 94.2124 399.289 94.189 399.241 94.1436 cv
396.06 91.1699 390.997 88.4487 386.941 86.4106 cv
386.847 86.3628 386.791 86.2612 386.802 86.1558 cv
387.518 79.4355 388.998 72.791 391.202 66.4063 cv
391.574 65.3291 391.97 64.2954 392.712 63.4917 cv
393.438 62.7036 394.692 62.0981 395.867 62.5156 cv
396.811 62.8525 397.5 63.7437 397.972 65.2402 cv
398.992 68.4829 400.23 87.0728 399.669 93.978 cv
399.661 94.0757 399.599 94.1602 399.507 94.1953 cv
399.477 94.207 399.446 94.2124 399.415 94.2124 cv
cp
f
329.416 88.7554 mo
328.304 82.2192 328.245 75.5047 329.249 68.4035 cv
332.92 70.2584 345.78 72.3835 354.03 69.348 cv
353.429 72.7852 352.828 76.2225 352.227 79.6598 cv
352.121 80.2648 352 80.9025 351.597 81.3656 cv
351.22 81.7982 350.656 82.0092 350.116 82.2039 cv
344.162 84.3522 338.209 86.5005 332.256 88.6488 cv
331.353 88.9746 330.357 89.3833 329.416 88.7554 cv
cp
.67451 .831373 .968627 rgb
f
330.116 88.2456 mo
330.584 88.4058 331.113 88.2388 331.864 87.9663 cv
349.853 81.4751 li
350.277 81.3218 350.759 81.1479 351.013 80.8564 cv
351.266 80.5654 351.362 80.1021 351.463 79.5264 cv
353.043 70.4888 li
345.361 72.7505 334.507 71.2993 329.88 69.5234 cv
329.046 76.0474 329.124 82.186 330.116 88.2456 cv
cp
330.5 89.8579 mo
330.007 89.8579 329.493 89.7383 328.986 89.3999 cv
328.809 89.2817 328.687 89.0957 328.652 88.8853 cv
327.519 82.2305 327.464 75.4951 328.481 68.2949 cv
328.517 68.0474 328.669 67.832 328.891 67.7163 cv
329.111 67.6001 329.374 67.5991 329.599 67.7114 cv
333.026 69.4434 345.712 71.5845 353.762 68.6206 cv
354.02 68.5244 354.313 68.5752 354.526 68.7534 cv
354.738 68.9307 354.841 69.2085 354.793 69.4814 cv
352.99 79.7935 li
352.884 80.4009 352.739 81.2339 352.182 81.8745 cv
351.663 82.4692 350.951 82.7261 350.38 82.9331 cv
332.394 89.4233 li
331.853 89.6191 331.197 89.8579 330.5 89.8579 cv
cp
0 0 0 rgb
f
354.655 68.4035 mo
355.359 72.1256 355.47 79.1707 355.24 82.9519 cv
351.814 87.7001 338.411 96.6067 327.012 100.339 cv
326.732 99.8086 327.732 85.6438 327.509 85.6629 cv
334.421 84.7535 346.228 78.5207 354.655 68.4035 cv
cp
.67451 .831373 .968627 rgb
f
328.312 86.3247 mo
328.306 87.2085 328.222 88.8354 328.059 91.96 cv
327.928 94.4727 327.759 97.7124 327.736 99.2754 cv
338.344 95.5601 350.984 87.2852 354.479 82.6763 cv
354.649 79.5845 354.603 74.0015 354.142 70.1885 cv
345.993 79.3613 335.307 85.126 328.312 86.3247 cv
cp
327.012 101.114 mo
326.73 101.114 326.463 100.96 326.326 100.7 cv
326.136 100.339 326.096 99.8447 326.511 91.8794 cv
326.644 89.3364 326.793 86.4683 326.765 85.8804 cv
326.752 85.8374 326.743 85.793 326.738 85.7476 cv
326.692 85.3286 326.99 84.9497 327.407 84.8945 cv
334.214 83.999 345.868 77.7407 354.06 67.9072 cv
354.251 67.6768 354.558 67.5752 354.85 67.6533 cv
355.141 67.7285 355.361 67.9644 355.417 68.2593 cv
356.154 72.1606 356.237 79.3262 356.014 82.999 cv
356.005 83.1455 355.954 83.2861 355.869 83.4053 cv
352.315 88.3286 338.759 97.3086 327.253 101.076 cv
327.173 101.102 327.092 101.114 327.012 101.114 cv
cp
0 0 0 rgb
f
356.522 262.603 mo
356.145 262.603 355.814 262.327 355.757 261.943 cv
354.554 253.917 356.812 244.351 361.251 238.678 cv
365.031 233.847 370.148 231.186 375.661 231.186 cv
389.028 231.186 398.14 236.321 399.163 261.382 cv
399.181 261.81 398.848 262.17 398.42 262.188 cv
397.979 262.185 397.631 261.872 397.614 261.444 cv
396.642 237.618 388.135 232.736 375.661 232.736 cv
372.106 232.736 366.932 233.933 362.472 239.633 cv
359.039 244.02 355.953 252.801 357.29 261.713 cv
357.353 262.137 357.061 262.531 356.639 262.595 cv
356.6 262.601 356.56 262.603 356.522 262.603 cv
cp
f
343.916 341.963 mo
369.38 342.018 394.844 342.073 420.309 342.127 cv
424.828 342.137 429.539 341.335 430.757 339.64 cv
437.179 330.71 446.112 312.962 446.112 301.789 cv
437.426 298.71 436.268 283.294 430.745 283.071 cv
409.255 282.205 387.697 282.951 366.324 285.302 cv
363.078 285.659 359.749 286.079 356.872 287.587 cv
353.254 289.483 350.747 292.894 348.707 296.369 cv
341.074 309.375 338.297 325.02 343.916 341.963 cv
cp
1 1 1 rgb
f
344.478 341.19 mo
420.31 341.352 li
425.142 341.363 429.22 340.452 430.128 339.189 cv
436.164 330.793 445.051 313.432 445.33 302.317 cv
440.717 300.385 438.273 295.297 436.107 290.789 cv
434.34 287.108 432.813 283.931 430.714 283.846 cv
409.316 282.982 387.683 283.732 366.409 286.072 cv
362.96 286.452 359.89 286.88 357.232 288.273 cv
353.552 290.202 351.101 293.822 349.375 296.762 cv
341.263 310.585 339.574 325.936 344.478 341.19 cv
cp
420.391 342.902 mo
420.362 342.902 420.335 342.902 420.307 342.902 cv
343.914 342.738 li
343.581 342.737 343.285 342.523 343.181 342.207 cv
337.919 326.343 339.6 310.357 348.039 295.977 cv
349.868 292.86 352.484 289.012 356.513 286.9 cv
359.409 285.381 362.632 284.929 366.239 284.531 cv
387.591 282.183 409.304 281.429 430.776 282.297 cv
433.807 282.419 435.52 285.987 437.505 290.118 cv
439.621 294.523 442.019 299.517 446.37 301.059 cv
446.68 301.168 446.887 301.461 446.887 301.789 cv
446.887 313.341 437.822 331.143 431.386 340.093 cv
429.896 342.165 424.746 342.902 420.391 342.902 cv
cp
0 0 0 rgb
f
363.193 301.789 mo
374.035 301.618 437.161 302.042 446.112 301.789 cv
444.078 284.138 438.454 269.519 431.487 261.828 cv
427.155 257.046 424.46 255.689 415.957 255.744 cv
392.777 255.893 368.051 256.142 344.04 256.142 cv
341.922 261.509 341.945 268.635 343.096 274.274 cv
343.414 275.833 343.98 277.336 344.299 278.895 cv
344.683 280.772 344.704 282.701 344.937 284.602 cv
346.045 293.651 351.68 301.969 363.193 301.789 cv
cp
1 1 1 rgb
f
373.291 300.972 mo
380.631 300.972 390.637 301.002 400.995 301.032 cv
419.796 301.088 439.201 301.146 445.241 301.033 cv
443.211 284.457 437.879 270.039 430.913 262.349 cv
426.857 257.872 424.409 256.517 416.439 256.517 cv
416.282 256.517 416.124 256.518 415.962 256.519 cv
409.809 256.558 403.546 256.604 397.217 256.651 cv
379.923 256.78 362.044 256.914 344.575 256.917 cv
342.583 262.407 342.884 269.355 343.856 274.118 cv
344.009 274.87 344.22 275.601 344.443 276.375 cv
344.665 277.141 344.894 277.932 345.059 278.739 cv
345.31 279.973 345.412 281.225 345.51 282.435 cv
345.566 283.127 345.622 283.819 345.706 284.508 cv
346.183 288.402 348.824 301.017 362.812 301.017 cv
362.934 301.017 363.057 301.016 363.18 301.014 cv
363.18 301.014 li
365.109 300.983 368.673 300.972 373.291 300.972 cv
cp
363.192 301.789 mo
363.202 301.789 li
363.192 301.789 li
cp
431.633 302.647 mo
423.035 302.647 411.911 302.614 400.991 302.582 cv
384.118 302.532 368.185 302.482 363.205 302.565 cv
363.204 302.565 363.204 302.565 363.204 302.565 cv
350.816 302.731 345.24 293.46 344.167 284.695 cv
344.08 283.986 344.022 283.273 343.965 282.56 cv
343.866 281.342 343.773 280.191 343.54 279.05 cv
343.387 278.303 343.177 277.575 342.954 276.805 cv
342.732 276.035 342.503 275.24 342.337 274.428 cv
341.291 269.305 340.999 261.734 343.319 255.857 cv
343.435 255.561 343.722 255.366 344.04 255.366 cv
361.674 255.366 379.736 255.232 397.205 255.102 cv
403.535 255.055 409.798 255.008 415.952 254.968 cv
424.833 254.9 427.637 256.423 432.061 261.308 cv
439.355 269.36 444.895 284.46 446.881 301.7 cv
446.906 301.916 446.839 302.133 446.697 302.297 cv
446.555 302.461 446.351 302.558 446.133 302.564 cv
443.959 302.625 438.633 302.647 431.633 302.647 cv
cp
0 0 0 rgb
f
357.718 256.117 mo
343.294 255.674 333.572 255.175 327.654 257.04 cv
321.648 258.933 319.537 263.245 317.216 270.392 cv
314.567 278.547 311.072 289.126 309.855 297.593 cv
308.618 306.201 313.864 335.957 323.148 341.194 cv
326.205 342.918 329.931 342.986 333.47 342.978 cv
342.666 342.956 349.006 342.802 358.191 342.384 cv
361.597 342.229 366.038 340.798 370.022 331.612 cv
373.884 322.707 377.297 309.38 377.297 303.217 cv
377.297 295.034 373.978 282.941 369.574 268.238 cv
366.554 258.157 361.668 256.239 357.718 256.117 cv
cp
.67451 .831373 .968627 rgb
f
341.043 256.483 mo
335.434 256.483 331.04 256.785 327.888 257.779 cv
322.431 259.499 320.336 263.293 317.953 270.631 cv
317.668 271.509 li
315.048 279.571 311.787 289.603 310.623 297.703 cv
309.372 306.405 314.666 335.52 323.528 340.519 cv
326.318 342.091 329.71 342.23 333.469 342.202 cv
342.679 342.181 348.908 342.031 358.156 341.609 cv
361.331 341.465 365.469 340.162 369.311 331.303 cv
373.152 322.447 376.521 309.323 376.521 303.217 cv
376.521 294.827 372.885 281.988 368.832 268.46 cv
365.789 258.306 361.019 256.994 357.693 256.892 cv
354.154 256.78 li
349.228 256.623 344.854 256.483 341.043 256.483 cv
cp
332.857 343.754 mo
329.832 343.754 325.921 343.647 322.767 341.868 cv
313.235 336.492 307.761 306.72 309.088 297.482 cv
310.271 289.252 313.555 279.148 316.193 271.03 cv
316.478 270.152 li
318.611 263.586 320.771 258.397 327.421 256.301 cv
332.968 254.553 341.414 254.822 354.204 255.231 cv
357.741 255.343 li
357.741 255.343 357.741 255.343 357.742 255.343 cv
363.703 255.526 367.816 259.672 370.316 268.015 cv
374.403 281.658 378.072 294.617 378.072 303.217 cv
378.072 309.494 374.643 322.907 370.733 331.92 cv
366.503 341.675 361.569 343.006 358.227 343.158 cv
348.953 343.581 342.707 343.731 333.473 343.753 cv
333.272 343.753 333.066 343.754 332.857 343.754 cv
cp
0 0 0 rgb
f
326.752 329.716 mo
325.071 327.67 324.498 325.147 324.028 322.699 cv
321.104 307.466 320.657 291.905 322.704 276.574 cv
322.877 275.272 323.116 273.883 324.168 272.909 cv
325.588 271.594 327.972 271.474 330.096 271.448 cv
336.601 271.366 352.96 271.064 356.207 271.418 cv
362.489 272.104 363.265 275.513 363.188 284.911 cv
363.084 297.492 362.98 310.073 362.877 322.654 cv
362.856 325.181 362.647 328.055 359.833 330 cv
357.518 331.49 351.474 331.299 348.553 331.455 cv
342.459 331.783 328.434 331.763 326.752 329.716 cv
cp
1 1 1 rgb
f
327.351 329.225 mo
328.501 330.623 339.671 331.154 348.512 330.682 cv
349.084 330.65 349.774 330.633 350.533 330.614 cv
353.399 330.542 357.729 330.433 359.414 329.35 cv
361.858 327.657 362.081 325.214 362.102 322.648 cv
362.412 284.904 li
362.49 275.447 361.716 272.799 356.123 272.189 cv
353.4 271.89 340.966 272.068 333.538 272.175 cv
330.105 272.223 li
328.024 272.249 325.893 272.368 324.694 273.478 cv
323.855 274.254 323.644 275.386 323.473 276.676 cv
321.434 291.947 321.877 307.383 324.789 322.553 cv
325.258 324.996 325.807 327.345 327.351 329.225 cv
327.351 329.225 li
cp
341.692 332.374 mo
335.661 332.374 327.643 332.021 326.153 330.209 cv
326.153 330.209 li
324.378 328.047 323.775 325.492 323.268 322.846 cv
320.323 307.511 319.875 291.908 321.935 276.471 cv
322.133 274.997 322.427 273.465 323.642 272.341 cv
325.243 270.857 327.703 270.703 330.086 270.672 cv
333.516 270.625 li
341.463 270.513 353.474 270.34 356.291 270.647 cv
363.337 271.416 364.039 275.586 363.963 284.918 cv
363.652 322.661 li
363.63 325.405 363.349 328.512 360.273 330.639 cv
358.203 331.971 353.972 332.078 350.572 332.163 cv
349.83 332.183 349.154 332.199 348.595 332.228 cv
348.519 332.233 345.502 332.374 341.692 332.374 cv
cp
0 0 0 rgb
f
384.032 268.609 mo
383.26 268.31 382.26 268.088 381.82 268.844 cv
381.492 269.408 381.688 270.2 381.903 270.869 cv
383.804 276.79 386.45 282.421 389.724 287.511 cv
390.324 288.444 391.212 289.474 392.122 289.15 cv
392.664 288.957 392.998 288.302 393.065 287.632 cv
393.132 286.963 392.979 286.277 392.806 285.618 cv
391.398 280.241 388.647 275.435 385.936 270.727 cv
385.421 269.833 384.829 268.918 384.032 268.609 cv
cp
1 1 1 rgb
f
382.818 268.587 mo
382.45 268.587 382.19 268.716 382.041 268.973 cv
381.769 269.44 381.941 270.154 382.146 270.791 cv
384.045 276.706 386.666 282.285 389.938 287.374 cv
390.483 288.221 391.3 289.18 392.036 288.909 cv
392.436 288.767 392.748 288.243 392.811 287.606 cv
392.875 286.966 392.722 286.305 392.56 285.683 cv
391.146 280.288 388.385 275.492 385.715 270.854 cv
385.241 270.033 384.676 269.132 383.94 268.848 cv
383.94 268.847 383.94 268.847 383.939 268.847 cv
383.494 268.674 383.12 268.587 382.818 268.587 cv
cp
391.766 289.468 mo
391.045 289.468 390.287 288.858 389.509 287.649 cv
386.213 282.523 383.572 276.904 381.66 270.947 cv
381.422 270.203 381.227 269.356 381.6 268.717 cv
382.015 267.998 382.865 267.882 384.124 268.371 cv
384.124 268.371 li
385.015 268.717 385.641 269.703 386.156 270.601 cv
388.844 275.268 391.622 280.093 393.054 285.554 cv
393.22 286.191 393.391 286.933 393.319 287.657 cv
393.234 288.499 392.798 289.179 392.208 289.39 cv
392.062 289.441 391.915 289.468 391.766 289.468 cv
cp
0 0 0 rgb
f
397.413 268.609 mo
396.641 268.31 395.641 268.088 395.201 268.844 cv
394.873 269.408 395.069 270.2 395.284 270.869 cv
397.185 276.79 399.832 282.421 403.105 287.511 cv
403.705 288.444 404.593 289.474 405.503 289.15 cv
406.045 288.957 406.379 288.302 406.446 287.632 cv
406.513 286.963 406.36 286.277 406.187 285.618 cv
404.779 280.241 402.028 275.435 399.317 270.727 cv
398.802 269.833 398.21 268.918 397.413 268.609 cv
cp
1 1 1 rgb
f
396.199 268.587 mo
395.831 268.587 395.571 268.716 395.422 268.973 cv
395.149 269.44 395.322 270.154 395.527 270.791 cv
397.427 276.707 400.049 282.286 403.32 287.374 cv
403.865 288.221 404.668 289.181 405.417 288.909 cv
405.817 288.767 406.129 288.243 406.192 287.606 cv
406.256 286.966 406.102 286.305 405.94 285.683 cv
404.53 280.294 401.768 275.495 399.097 270.854 cv
398.622 270.032 398.056 269.132 397.321 268.848 cv
397.321 268.847 397.321 268.847 397.32 268.847 cv
396.875 268.674 396.501 268.587 396.199 268.587 cv
cp
405.146 289.468 mo
404.425 289.468 403.668 288.858 402.891 287.649 cv
399.596 282.524 396.955 276.905 395.041 270.947 cv
394.803 270.203 394.608 269.356 394.98 268.717 cv
395.396 267.998 396.245 267.882 397.505 268.371 cv
397.505 268.371 li
398.394 268.716 399.02 269.702 399.538 270.601 cv
402.227 275.271 405.006 280.099 406.435 285.554 cv
406.601 286.191 406.771 286.933 406.7 287.657 cv
406.615 288.499 406.179 289.179 405.589 289.39 cv
405.442 289.441 405.295 289.468 405.146 289.468 cv
cp
0 0 0 rgb
f
411.287 268.609 mo
410.516 268.31 409.515 268.088 409.075 268.844 cv
408.747 269.408 408.943 270.2 409.158 270.869 cv
411.059 276.79 413.706 282.421 416.979 287.511 cv
417.579 288.444 418.467 289.474 419.377 289.15 cv
419.919 288.957 420.253 288.302 420.32 287.632 cv
420.387 286.963 420.234 286.277 420.061 285.618 cv
418.653 280.241 415.902 275.435 413.191 270.727 cv
412.676 269.833 412.085 268.918 411.287 268.609 cv
cp
1 1 1 rgb
f
410.073 268.588 mo
409.705 268.588 409.445 268.716 409.296 268.973 cv
409.023 269.44 409.196 270.154 409.401 270.791 cv
411.301 276.707 413.923 282.286 417.194 287.374 cv
417.739 288.222 418.553 289.177 419.291 288.909 cv
419.692 288.767 420.004 288.243 420.066 287.606 cv
420.131 286.964 419.971 286.276 419.814 285.683 cv
418.402 280.288 415.641 275.492 412.971 270.854 cv
412.496 270.032 411.929 269.131 411.195 268.848 cv
411.195 268.847 411.195 268.847 411.194 268.847 cv
410.75 268.674 410.375 268.588 410.073 268.588 cv
cp
419.02 289.468 mo
418.299 289.468 417.542 288.858 416.765 287.649 cv
413.47 282.524 410.829 276.905 408.915 270.947 cv
408.677 270.203 408.482 269.356 408.854 268.717 cv
409.272 267.998 410.122 267.884 411.379 268.371 cv
411.379 268.371 li
412.268 268.716 412.894 269.702 413.412 270.601 cv
416.1 275.268 418.878 280.093 420.309 285.554 cv
420.476 286.19 420.647 286.931 420.574 287.657 cv
420.49 288.499 420.055 289.179 419.463 289.39 cv
419.316 289.441 419.169 289.468 419.02 289.468 cv
cp
0 0 0 rgb
f
424.874 268.609 mo
424.102 268.31 423.102 268.088 422.662 268.844 cv
422.334 269.408 422.53 270.2 422.745 270.869 cv
424.646 276.79 427.292 282.421 430.566 287.511 cv
431.166 288.444 432.054 289.474 432.964 289.15 cv
433.506 288.957 433.84 288.302 433.907 287.632 cv
433.974 286.963 433.821 286.277 433.648 285.618 cv
432.24 280.241 429.489 275.435 426.778 270.727 cv
426.263 269.833 425.671 268.918 424.874 268.609 cv
cp
1 1 1 rgb
f
423.66 268.587 mo
423.292 268.587 423.032 268.716 422.883 268.973 cv
422.61 269.44 422.783 270.154 422.988 270.791 cv
424.888 276.707 427.51 282.286 430.781 287.374 cv
431.326 288.221 432.128 289.181 432.878 288.909 cv
433.278 288.767 433.59 288.243 433.653 287.606 cv
433.717 286.966 433.563 286.305 433.401 285.683 cv
431.991 280.294 429.228 275.495 426.558 270.854 cv
426.083 270.032 425.517 269.132 424.782 268.848 cv
424.782 268.847 424.782 268.847 424.781 268.847 cv
424.336 268.674 423.962 268.587 423.66 268.587 cv
cp
432.607 289.468 mo
431.886 289.468 431.129 288.858 430.352 287.649 cv
427.057 282.524 424.416 276.905 422.502 270.947 cv
422.264 270.203 422.069 269.356 422.441 268.717 cv
422.857 267.998 423.706 267.882 424.966 268.371 cv
424.966 268.371 li
425.855 268.716 426.481 269.702 426.999 270.601 cv
429.687 275.271 432.467 280.099 433.895 285.554 cv
434.061 286.191 434.232 286.933 434.161 287.657 cv
434.076 288.499 433.64 289.179 433.05 289.39 cv
432.903 289.441 432.756 289.468 432.607 289.468 cv
cp
0 0 0 rgb
f
331.672 328.276 mo
331.532 328.276 331.418 328.164 331.417 328.023 cv
330.968 274.351 li
330.967 274.21 331.08 274.095 331.221 274.094 cv
331.222 274.094 331.222 274.094 331.223 274.094 cv
331.362 274.094 331.477 274.206 331.477 274.347 cv
331.927 328.02 li
331.928 328.16 331.814 328.275 331.674 328.276 cv
331.673 328.276 331.673 328.276 331.672 328.276 cv
cp
f
343.273 329.54 mo
343.136 329.54 343.022 329.431 343.019 329.293 cv
342.485 311.058 342.303 292.552 342.476 274.29 cv
342.477 274.149 342.591 274.037 342.73 274.037 cv
342.731 274.037 342.732 274.037 342.732 274.037 cv
342.874 274.038 342.986 274.153 342.985 274.294 cv
342.812 292.55 342.995 311.049 343.528 329.277 cv
343.532 329.419 343.422 329.536 343.281 329.54 cv
343.278 329.54 343.275 329.54 343.273 329.54 cv
cp
f
353.818 328.279 mo
353.817 328.279 li
353.677 328.279 353.562 328.164 353.563 328.023 cv
353.626 310.169 353.856 292.1 354.248 274.318 cv
354.251 274.178 354.398 274.066 354.509 274.069 cv
354.649 274.072 354.761 274.19 354.758 274.33 cv
354.366 292.108 354.136 310.174 354.073 328.025 cv
354.073 328.166 353.959 328.279 353.818 328.279 cv
cp
f
324.462 284.853 mo
324.322 284.853 324.209 284.741 324.207 284.601 cv
324.205 284.46 324.317 284.345 324.459 284.343 cv
360.716 283.857 li
360.717 283.857 360.718 283.857 360.719 283.857 cv
360.858 283.857 360.972 283.969 360.974 284.109 cv
360.976 284.25 360.863 284.365 360.723 284.367 cv
360.249 284.374 li
324.465 284.853 li
324.464 284.853 324.463 284.853 324.462 284.853 cv
cp
f
324.462 297.848 mo
324.321 297.848 324.207 297.734 324.207 297.594 cv
324.206 297.453 324.32 297.338 324.461 297.338 cv
360.718 297.186 li
360.719 297.186 li
360.859 297.186 360.974 297.3 360.974 297.44 cv
360.975 297.581 360.86 297.696 360.72 297.696 cv
360.568 297.697 li
324.463 297.848 li
324.462 297.848 li
cp
f
325.226 310.524 mo
325.208 310.015 li
337.001 309.618 348.953 309.521 360.727 309.721 cv
360.72 310.23 li
348.951 310.029 337.009 310.129 325.226 310.524 cv
cp
f
326.801 321.44 mo
326.789 320.93 li
337.781 320.689 348.948 320.587 359.964 320.636 cv
359.962 321.146 li
348.946 321.103 337.788 321.199 326.801 321.44 cv
cp
f
389.295 306.738 mo
386.476 306.738 383.644 306.667 380.835 306.525 cv
380.694 306.519 380.586 306.398 380.593 306.258 cv
380.6 306.117 380.71 306.013 380.86 306.016 cv
384.86 306.218 388.91 306.278 392.895 306.19 cv
393.062 306.191 393.153 306.298 393.156 306.439 cv
393.159 306.579 393.048 306.696 392.907 306.699 cv
391.708 306.726 390.502 306.738 389.295 306.738 cv
cp
f
386.875 311.391 mo
386.871 311.391 386.867 311.391 386.862 311.391 cv
384.672 311.284 382.435 311.199 380.214 311.138 cv
380.073 311.134 379.962 311.017 379.966 310.876 cv
379.97 310.735 380.105 310.61 380.227 310.628 cv
382.453 310.69 384.693 310.774 386.888 310.881 cv
387.028 310.888 387.137 311.008 387.13 311.148 cv
387.123 311.284 387.011 311.391 386.875 311.391 cv
cp
f
554.173 63.0659 mo
553.793 63.0659 553.461 62.7866 553.406 62.3999 cv
552.747 57.7471 553.988 52.1938 556.425 48.8955 cv
558.529 46.0454 561.391 44.4761 564.481 44.4761 cv
570.889 44.4761 576.9 46.6021 577.496 62.0239 cv
577.513 62.4517 577.18 62.8115 576.752 62.8281 cv
576.31 62.8335 575.963 62.5117 575.947 62.0835 cv
575.375 47.2656 569.969 46.0259 564.481 46.0259 cv
562.651 46.0259 559.985 46.6836 557.671 49.8164 cv
555.859 52.2686 554.232 57.1846 554.941 62.1821 cv
555.001 62.606 554.706 62.998 554.282 63.0581 cv
554.246 63.0635 554.209 63.0659 554.173 63.0659 cv
cp
f
521.828 166.29 mo
521.828 58.1977 li
610.411 58.1977 li
610.411 166.29 li
521.828 166.29 li
cp
1 1 1 rgb
f
522.602 165.515 mo
609.636 165.515 li
609.636 58.9727 li
522.602 58.9727 li
522.602 165.515 li
cp
610.411 167.065 mo
521.827 167.065 li
521.399 167.065 521.052 166.718 521.052 166.29 cv
521.052 58.1978 li
521.052 57.7695 521.399 57.4229 521.827 57.4229 cv
610.411 57.4229 li
610.839 57.4229 611.187 57.7695 611.187 58.1978 cv
611.187 166.29 li
611.187 166.718 610.839 167.065 610.411 167.065 cv
cp
0 0 0 rgb
f
589.563 54.7539 mo
586.433 54.5742 544.648 54.4874 541.257 54.5884 cv
541.257 66.768 545.396 68.8446 555.321 69.21 cv
570.761 69.7783 580.281 69.7077 584.206 67.775 cv
589.16 65.3354 590.427 60.5022 589.563 54.7539 cv
cp
.67451 .831373 .968627 rgb
f
542.037 55.3501 mo
542.185 66.1069 545.583 68.0762 555.35 68.4355 cv
570.53 68.9932 580.06 68.9512 583.863 67.0796 cv
587.896 65.0938 589.584 61.2012 588.884 55.5044 cv
583.089 55.3506 548.264 55.2773 542.037 55.3501 cv
cp
568.81 70.2925 mo
564.934 70.2925 560.429 70.1733 555.293 69.9844 cv
545.051 69.6074 540.481 67.2954 540.481 54.5884 cv
540.481 54.1694 540.815 53.8262 541.233 53.814 cv
544.461 53.7168 586.486 53.8018 589.607 53.98 cv
589.974 54.001 590.275 54.2759 590.33 54.6387 cv
591.349 61.4258 589.404 66.0791 584.549 68.4702 cv
581.816 69.8154 576.575 70.2925 568.81 70.2925 cv
cp
0 0 0 rgb
f
571.554 91.7056 mo
561.296 91.7056 551.019 91.583 540.825 91.3389 cv
540.685 91.3354 540.573 91.2188 540.576 91.0776 cv
540.579 90.9365 540.701 90.8037 540.837 90.8291 cv
557.349 91.2256 574.089 91.3008 590.588 91.0542 cv
590.589 91.0542 590.591 91.0542 590.592 91.0542 cv
590.731 91.0542 590.845 91.1655 590.847 91.3052 cv
590.849 91.4463 590.736 91.562 590.596 91.564 cv
584.275 91.6582 577.917 91.7056 571.554 91.7056 cv
cp
f
571.191 111.73 mo
560.935 111.73 550.659 111.608 540.476 111.363 cv
540.335 111.36 540.223 111.243 540.227 111.102 cv
540.229 110.961 540.352 110.843 540.487 110.854 cv
556.986 111.25 573.726 111.326 590.238 111.079 cv
590.239 111.079 590.241 111.079 590.242 111.079 cv
590.381 111.079 590.495 111.19 590.497 111.33 cv
590.499 111.471 590.387 111.586 590.246 111.588 cv
583.919 111.683 577.559 111.73 571.191 111.73 cv
cp
f
571.585 131.773 mo
561.33 131.773 551.056 131.651 540.865 131.406 cv
540.725 131.403 540.613 131.286 540.616 131.145 cv
540.619 131.006 540.733 130.896 540.871 130.896 cv
540.873 130.896 540.875 130.896 540.877 130.896 cv
557.388 131.292 574.128 131.369 590.628 131.122 cv
590.629 131.122 590.631 131.122 590.632 131.122 cv
590.771 131.122 590.885 131.233 590.887 131.373 cv
590.889 131.514 590.776 131.629 590.636 131.631 cv
584.313 131.726 577.951 131.773 571.585 131.773 cv
cp
f
527.008 71.6807 mo
526.867 71.6807 526.753 71.5674 526.753 71.4268 cv
526.715 62.0664 li
526.714 61.9258 526.828 61.811 526.969 61.8105 cv
526.97 61.8105 li
527.11 61.8105 527.225 61.9238 527.225 62.0645 cv
527.263 71.4248 li
527.264 71.5654 527.149 71.6802 527.009 71.6807 cv
527.008 71.6807 li
cp
f
530.884 65.6499 mo
530.883 65.6499 530.882 65.6499 530.881 65.6499 cv
530.74 65.6484 530.627 65.5332 530.629 65.3921 cv
530.667 61.8823 li
530.668 61.7427 530.782 61.6304 530.922 61.6304 cv
530.923 61.6304 530.924 61.6304 530.925 61.6304 cv
531.065 61.6318 531.179 61.7471 531.177 61.8882 cv
531.139 65.3979 li
531.138 65.5376 531.023 65.6499 530.884 65.6499 cv
cp
f
605.635 161.899 mo
605.471 161.9 605.379 161.785 605.38 161.643 cv
605.42 154.655 li
605.421 154.515 605.534 154.402 605.675 154.402 cv
605.675 154.402 605.676 154.402 605.677 154.402 cv
605.817 154.402 605.931 154.518 605.93 154.658 cv
605.89 161.646 li
605.889 161.786 605.775 161.899 605.635 161.899 cv
cp
f
525.558 233.287 mo
521.5 237.172 532.533 247.02 534.677 249.942 cv
543.674 262.199 554.221 284.311 566.026 298.474 cv
577.513 312.255 584.754 319.961 595.606 331.543 cv
599.867 336.09 606.484 345.613 611.755 342.288 cv
618.376 338.112 620.742 335.257 625.114 331.007 cv
628.893 327.332 627.335 323.84 626.268 322.181 cv
624.022 318.69 610.117 303.381 585.922 278.299 cv
578.403 270.504 550.798 252.836 540.624 243.637 cv
534.957 238.512 528.454 230.155 525.558 233.287 cv
cp
1 1 1 rgb
f
525.559 233.287 mo
525.568 233.287 li
525.559 233.287 li
cp
527.102 233.379 mo
527.091 233.379 527.08 233.379 527.069 233.379 cv
526.694 233.386 526.396 233.524 526.128 233.814 cv
526.117 233.825 526.106 233.836 526.095 233.847 cv
523.432 236.395 529.63 243.163 532.96 246.798 cv
534.005 247.939 534.829 248.839 535.303 249.482 cv
539.081 254.63 543.121 261.489 547.399 268.75 cv
553.488 279.086 559.784 289.773 566.622 297.978 cv
577.94 311.557 585.021 319.112 595.737 330.55 cv
596.172 331.013 li
596.892 331.78 597.672 332.682 598.497 333.636 cv
602.303 338.03 607.51 344.047 611.343 341.633 cv
616.757 338.217 619.276 335.708 622.467 332.53 cv
623.131 331.869 623.822 331.181 624.573 330.451 cv
627.06 328.033 627.412 325.392 625.617 322.601 cv
623.718 319.647 612.146 306.601 585.365 278.837 cv
581.435 274.763 571.666 267.754 562.218 260.977 cv
553.718 254.878 544.927 248.572 540.104 244.212 cv
538.768 243.003 537.377 241.608 536.031 240.259 cv
532.815 237.033 529.171 233.379 527.102 233.379 cv
cp
609.435 343.754 mo
605.206 343.754 600.747 338.603 597.325 334.65 cv
596.51 333.708 595.739 332.818 595.041 332.073 cv
594.606 331.609 li
583.871 320.152 576.779 312.584 565.431 298.97 cv
558.513 290.669 552.184 279.927 546.063 269.537 cv
541.806 262.31 537.785 255.484 534.053 250.4 cv
533.63 249.823 532.79 248.906 531.817 247.845 cv
527.621 243.265 521.283 236.346 525.006 232.743 cv
525.56 232.151 526.245 231.844 527.04 231.829 cv
529.762 231.813 533.341 235.365 537.129 239.164 cv
538.46 240.5 539.837 241.88 541.144 243.061 cv
545.901 247.363 554.656 253.644 563.122 259.717 cv
573.063 266.849 582.452 273.585 586.481 277.761 cv
608.95 301.055 624.446 317.916 626.92 321.763 cv
629.107 325.162 628.657 328.643 625.653 331.563 cv
624.908 332.287 624.221 332.972 623.56 333.629 cv
620.303 336.874 617.729 339.436 612.169 342.943 cv
611.278 343.506 610.361 343.754 609.435 343.754 cv
cp
0 0 0 rgb
f
600.982 315.274 mo
600.138 315.61 599.441 316.961 599.195 317.832 cv
599.063 318.297 599.049 318.786 599.094 319.263 cv
599.328 321.722 601.349 323.921 603.816 324.144 cv
606.283 324.367 608.866 322.398 609.113 319.928 cv
609.236 318.701 608.824 317.466 608.096 316.492 cv
606.543 314.414 603.34 313.05 600.982 315.274 cv
cp
1 1 1 rgb
f
600.981 315.274 mo
600.991 315.274 li
600.981 315.274 li
cp
603.758 314.908 mo
602.923 314.908 602.169 315.22 601.514 315.838 cv
601.442 315.905 601.359 315.958 601.269 315.994 cv
600.771 316.192 600.169 317.233 599.94 318.043 cv
599.848 318.369 599.823 318.744 599.865 319.19 cv
600.07 321.35 601.837 323.186 603.887 323.373 cv
605.952 323.541 608.143 321.85 608.342 319.851 cv
608.44 318.877 608.123 317.822 607.476 316.956 cv
606.618 315.81 605.309 315.029 604.059 314.921 cv
603.957 314.912 603.856 314.908 603.758 314.908 cv
cp
604.201 324.936 mo
604.05 324.936 603.898 324.93 603.747 324.916 cv
600.977 324.665 598.596 322.214 598.322 319.336 cv
598.262 318.694 598.303 318.134 598.449 317.62 cv
598.678 316.809 599.403 315.182 600.549 314.619 cv
601.585 313.689 602.847 313.263 604.192 313.377 cv
605.869 313.522 607.604 314.538 608.717 316.028 cv
609.594 317.2 610.019 318.649 609.885 320.005 cv
609.615 322.692 606.972 324.936 604.201 324.936 cv
cp
0 0 0 rgb
f
571.741 290.416 mo
578.325 284.383 li
598.905 306.193 li
592.207 312.308 li
571.741 290.416 li
cp
.67451 .831373 .968627 rgb
f
572.842 290.459 mo
592.25 311.219 li
597.801 306.152 li
578.286 285.47 li
572.842 290.459 li
cp
592.207 313.083 mo
592 313.083 591.793 313 591.641 312.837 cv
571.175 290.945 li
571.034 290.794 570.959 290.593 570.967 290.386 cv
570.975 290.18 571.065 289.984 571.218 289.845 cv
577.802 283.811 li
578.113 283.524 578.598 283.543 578.889 283.851 cv
599.469 305.661 li
599.611 305.813 599.688 306.015 599.68 306.223 cv
599.672 306.43 599.581 306.626 599.428 306.766 cv
592.729 312.88 li
592.581 313.016 592.394 313.083 592.207 313.083 cv
cp
0 0 0 rgb
f
535.006 247.146 mo
534.938 247.146 534.869 247.119 534.818 247.064 cv
534.723 246.961 534.729 246.8 534.833 246.704 cv
535.157 246.404 535.442 246.151 535.708 245.916 cv
536.352 245.346 536.86 244.895 537.55 244.112 cv
537.644 244.008 537.803 243.996 537.91 244.09 cv
538.016 244.183 538.025 244.344 537.933 244.45 cv
537.222 245.257 536.677 245.739 536.047 246.298 cv
535.783 246.531 535.501 246.781 535.179 247.079 cv
535.13 247.124 535.067 247.146 535.006 247.146 cv
cp
f
607.162 338.826 mo
607.096 338.826 607.03 338.801 606.981 338.75 cv
606.882 338.649 606.883 338.487 606.983 338.39 cv
612.081 333.392 617.385 328.464 622.745 323.743 cv
622.852 323.649 623.012 323.661 623.106 323.766 cv
623.198 323.872 623.188 324.033 623.083 324.126 cv
617.729 328.841 612.432 333.762 607.341 338.753 cv
607.291 338.802 607.227 338.826 607.162 338.826 cv
cp
f
738.047 341.138 mo
735.601 341.057 731.638 340.603 729.091 338.286 cv
725.117 334.674 725.296 332.297 725.296 321.033 cv
725.296 296.344 725.31 266.916 725.317 241.921 cv
725.318 238.207 725.622 233.916 728.917 231.72 cv
730.955 230.362 733.64 230.192 736.164 230.102 cv
750.523 229.59 764.855 230.137 779.206 230.812 cv
783.442 231.011 786.172 232.707 787.138 235.051 cv
788.045 237.251 788.225 241.218 788.234 242.653 cv
788.427 272.591 788.102 298.06 787.638 327.996 cv
787.567 332.579 787.039 337.936 782.784 340.394 cv
780.506 341.711 777.664 341.839 774.966 341.929 cv
761.159 342.387 751.596 341.591 738.047 341.138 cv
cp
1 1 1 rgb
f
738.072 340.364 mo
741.657 340.483 744.964 340.627 748.144 340.766 cv
757.09 341.154 764.815 341.49 774.94 341.154 cv
777.417 341.071 780.225 340.978 782.396 339.724 cv
786.196 337.527 786.789 332.783 786.863 327.984 cv
787.307 299.434 787.656 273.308 787.459 242.658 cv
787.448 240.851 787.218 237.277 786.422 235.347 cv
785.508 233.13 782.864 231.76 779.17 231.587 cv
765.444 230.94 750.818 230.355 736.191 230.876 cv
733.624 230.969 731.168 231.151 729.347 232.365 cv
726.487 234.27 726.093 238.084 726.092 241.921 cv
726.084 265.893 li
726.077 284.513 726.071 303.912 726.071 321.033 cv
726.07 322.427 li
726.063 332.408 726.062 334.485 729.612 337.713 cv
731.381 339.321 734.307 340.237 738.072 340.364 cv
738.072 340.364 li
cp
766.688 342.842 mo
760.226 342.842 754.461 342.592 748.076 342.315 cv
744.901 342.176 741.601 342.032 738.021 341.913 cv
738.021 341.913 738.021 341.913 738.021 341.913 cv
733.823 341.772 730.644 340.745 728.569 338.859 cv
724.512 335.171 724.514 332.471 724.521 322.426 cv
724.521 321.033 li
724.521 303.912 724.527 284.512 724.534 265.892 cv
724.541 241.921 li
724.543 237.653 725.021 233.385 728.487 231.075 cv
730.646 229.638 733.337 229.428 736.136 229.327 cv
750.829 228.803 765.486 229.392 779.242 230.038 cv
783.563 230.24 786.702 231.96 787.856 234.756 cv
788.946 237.404 789.006 242.119 789.01 242.648 cv
789.206 273.314 788.856 299.448 788.414 328.008 cv
788.336 333.012 787.652 338.477 783.172 341.065 cv
780.664 342.515 777.519 342.619 774.991 342.703 cv
772.051 342.801 769.312 342.842 766.688 342.842 cv
cp
0 0 0 rgb
f
749.856 248.389 mo
749.857 245.273 747.86 242.268 745.101 241.234 cv
742.342 240.199 739.019 241.209 737.187 243.638 cv
735.356 246.067 735.147 249.742 736.69 252.388 cv
737.143 253.165 737.734 253.857 738.447 254.367 cv
739.694 255.258 741.249 255.546 742.75 255.494 cv
744.14 255.447 745.56 255.108 746.695 254.251 cv
748.247 253.078 749.855 251.226 749.856 248.389 cv
cp
1 1 1 rgb
f
749.856 248.389 mo
749.866 248.389 li
749.856 248.389 li
cp
742.834 241.604 mo
740.928 241.604 739.007 242.513 737.807 244.105 cv
736.156 246.293 735.968 249.613 737.359 251.998 cv
737.779 252.716 738.31 253.317 738.896 253.735 cv
740.128 254.615 741.653 254.752 742.724 254.72 cv
744.158 254.671 745.337 254.306 746.227 253.633 cv
748.12 252.202 749.081 250.438 749.081 248.389 cv
749.081 245.587 747.293 242.883 744.829 241.959 cv
744.188 241.719 743.512 241.604 742.834 241.604 cv
cp
742.418 256.275 mo
740.692 256.275 739.169 255.836 737.995 254.997 cv
737.222 254.444 736.558 253.698 736.021 252.779 cv
734.328 249.878 734.559 245.837 736.568 243.171 cv
738.6 240.477 742.299 239.356 745.373 240.508 cv
748.42 241.649 750.632 244.964 750.632 248.389 cv
750.632 248.389 li
750.631 250.949 749.463 253.13 747.162 254.869 cv
746.011 255.738 744.535 256.209 742.776 256.269 cv
742.656 256.272 742.536 256.275 742.418 256.275 cv
cp
0 0 0 rgb
f
778.088 273.935 mo
778.089 270.819 776.092 267.815 773.333 266.78 cv
770.574 265.745 767.251 266.755 765.419 269.184 cv
763.587 271.613 763.379 275.288 764.922 277.935 cv
765.375 278.712 765.966 279.404 766.679 279.913 cv
767.926 280.804 769.481 281.092 770.982 281.041 cv
772.372 280.993 773.792 280.654 774.927 279.797 cv
776.479 278.625 778.087 276.772 778.088 273.935 cv
cp
1 1 1 rgb
f
778.088 273.935 mo
778.098 273.935 li
778.088 273.935 li
cp
771.065 267.15 mo
769.159 267.15 767.238 268.059 766.038 269.651 cv
764.388 271.839 764.201 275.159 765.592 277.544 cv
766.009 278.261 766.54 278.861 767.13 279.282 cv
768.36 280.162 769.901 280.299 770.955 280.267 cv
772.391 280.217 773.569 279.851 774.46 279.179 cv
776.352 277.749 777.313 275.985 777.313 273.935 cv
777.313 271.134 775.525 268.43 773.06 267.506 cv
772.42 267.266 771.743 267.15 771.065 267.15 cv
cp
770.655 281.821 mo
768.928 281.821 767.403 281.383 766.229 280.544 cv
765.462 279.995 764.778 279.228 764.253 278.324 cv
762.56 275.424 762.791 271.384 764.8 268.718 cv
766.832 266.023 770.536 264.902 773.606 266.055 cv
776.652 267.197 778.864 270.512 778.863 273.935 cv
778.863 273.935 li
778.862 276.498 777.695 278.678 775.394 280.415 cv
774.244 281.284 772.769 281.755 771.008 281.815 cv
770.89 281.819 770.773 281.821 770.655 281.821 cv
cp
0 0 0 rgb
f
749.695 273.935 mo
749.695 270.819 747.698 267.815 744.94 266.78 cv
742.181 265.745 738.857 266.755 737.026 269.184 cv
735.194 271.613 734.985 275.288 736.529 277.935 cv
736.982 278.712 737.572 279.404 738.285 279.913 cv
739.532 280.804 741.088 281.092 742.588 281.041 cv
743.979 280.993 745.398 280.654 746.533 279.797 cv
748.085 278.625 749.694 276.772 749.695 273.935 cv
cp
1 1 1 rgb
f
749.694 273.935 mo
749.704 273.935 li
749.694 273.935 li
cp
742.672 267.15 mo
740.766 267.15 738.845 268.059 737.644 269.651 cv
735.994 271.839 735.808 275.159 737.198 277.544 cv
737.617 278.262 738.148 278.862 738.736 279.282 cv
739.968 280.162 741.508 280.299 742.562 280.267 cv
743.997 280.217 745.176 279.851 746.066 279.179 cv
747.959 277.749 748.919 275.985 748.919 273.935 cv
748.92 271.134 747.132 268.43 744.667 267.506 cv
744.026 267.266 743.35 267.15 742.672 267.15 cv
cp
742.262 281.821 mo
740.534 281.821 739.01 281.383 737.835 280.544 cv
737.06 279.989 736.394 279.243 735.859 278.325 cv
734.167 275.424 734.398 271.384 736.406 268.718 cv
738.44 266.023 742.143 264.902 745.212 266.055 cv
748.259 267.197 750.471 270.512 750.47 273.935 cv
750.47 273.935 li
750.469 276.498 749.302 278.678 747 280.415 cv
745.851 281.284 744.375 281.755 742.614 281.815 cv
742.496 281.819 742.379 281.821 742.262 281.821 cv
cp
0 0 0 rgb
f
749.695 299.962 mo
749.695 296.847 747.698 293.842 744.94 292.807 cv
742.181 291.773 738.857 292.782 737.026 295.212 cv
735.194 297.641 734.985 301.316 736.529 303.962 cv
736.982 304.739 737.572 305.431 738.285 305.94 cv
739.532 306.832 741.088 307.119 742.588 307.068 cv
743.979 307.021 745.398 306.682 746.533 305.824 cv
748.085 304.652 749.694 302.8 749.695 299.962 cv
cp
1 1 1 rgb
f
749.694 299.962 mo
749.704 299.962 li
749.694 299.962 li
cp
742.672 293.178 mo
740.766 293.178 738.845 294.086 737.644 295.679 cv
735.994 297.866 735.808 301.186 737.198 303.571 cv
737.617 304.289 738.148 304.89 738.736 305.31 cv
739.968 306.19 741.508 306.328 742.562 306.294 cv
743.997 306.244 745.176 305.878 746.066 305.206 cv
747.959 303.775 748.919 302.011 748.919 299.962 cv
748.92 297.161 747.132 294.457 744.667 293.533 cv
744.026 293.293 743.35 293.178 742.672 293.178 cv
cp
742.262 307.849 mo
740.534 307.849 739.01 307.41 737.835 306.571 cv
737.06 306.017 736.394 305.271 735.859 304.353 cv
734.167 301.451 734.398 297.411 736.406 294.745 cv
738.44 292.051 742.143 290.93 745.212 292.082 cv
748.259 293.225 750.471 296.538 750.47 299.962 cv
750.47 299.962 li
750.469 302.523 749.302 304.703 747.001 306.442 cv
745.851 307.311 744.375 307.782 742.614 307.843 cv
742.496 307.847 742.379 307.849 742.262 307.849 cv
cp
0 0 0 rgb
f
749.856 324.57 mo
749.857 321.454 747.86 318.449 745.101 317.415 cv
742.342 316.38 739.019 317.39 737.187 319.819 cv
735.356 322.248 735.147 325.923 736.69 328.57 cv
737.143 329.347 737.734 330.039 738.447 330.548 cv
739.694 331.439 741.249 331.727 742.75 331.676 cv
744.14 331.628 745.56 331.289 746.695 330.432 cv
748.247 329.259 749.855 327.407 749.856 324.57 cv
cp
1 1 1 rgb
f
749.856 324.57 mo
749.866 324.57 li
749.856 324.57 li
cp
742.833 317.785 mo
740.927 317.785 739.006 318.693 737.807 320.286 cv
736.156 322.474 735.969 325.794 737.36 328.18 cv
737.779 328.898 738.31 329.499 738.896 329.917 cv
740.126 330.796 741.655 330.938 742.724 330.901 cv
744.158 330.852 745.337 330.485 746.227 329.814 cv
748.12 328.384 749.081 326.619 749.081 324.57 cv
749.081 321.769 747.293 319.065 744.829 318.141 cv
744.188 317.9 743.511 317.785 742.833 317.785 cv
cp
742.424 332.456 mo
740.694 332.456 739.169 332.018 737.995 331.179 cv
737.222 330.626 736.558 329.88 736.021 328.961 cv
734.328 326.059 734.559 322.018 736.568 319.353 cv
738.6 316.658 742.299 315.534 745.373 316.69 cv
748.42 317.831 750.632 321.146 750.632 324.57 cv
750.632 324.57 li
750.631 327.132 749.463 329.311 747.161 331.05 cv
746.012 331.919 744.537 332.39 742.776 332.45 cv
742.658 332.454 742.54 332.456 742.424 332.456 cv
cp
0 0 0 rgb
f
778.249 248.389 mo
778.25 245.273 776.253 242.268 773.495 241.234 cv
770.736 240.199 767.412 241.209 765.581 243.638 cv
763.749 246.067 763.54 249.742 765.084 252.388 cv
765.537 253.165 766.127 253.857 766.84 254.367 cv
768.087 255.258 769.643 255.546 771.143 255.494 cv
772.534 255.447 773.953 255.108 775.088 254.251 cv
776.64 253.078 778.249 251.226 778.249 248.389 cv
cp
1 1 1 rgb
f
771.227 241.604 mo
769.321 241.604 767.399 242.513 766.199 244.105 cv
764.55 246.293 764.362 249.613 765.753 251.998 cv
766.173 252.716 766.704 253.317 767.29 253.735 cv
768.521 254.615 770.048 254.752 771.117 254.72 cv
772.552 254.671 773.731 254.306 774.621 253.633 cv
776.514 252.201 777.474 250.438 777.474 248.389 cv
777.474 248.389 li
777.475 245.587 775.687 242.883 773.222 241.959 cv
772.581 241.719 771.905 241.604 771.227 241.604 cv
cp
770.812 256.275 mo
769.086 256.275 767.563 255.836 766.389 254.997 cv
765.615 254.444 764.951 253.698 764.415 252.779 cv
762.722 249.878 762.952 245.837 764.961 243.171 cv
766.993 240.477 770.691 239.356 773.767 240.508 cv
776.813 241.65 779.024 244.965 779.024 248.389 cv
779.024 248.389 li
779.024 248.389 li
779.023 250.949 777.856 253.13 775.556 254.869 cv
774.404 255.738 772.93 256.209 771.17 256.269 cv
771.05 256.272 770.93 256.275 770.812 256.275 cv
cp
0 0 0 rgb
f
773.7 251.23 mo
773.64 251.23 773.579 251.208 773.531 251.165 cv
768.163 246.401 li
768.058 246.309 768.048 246.148 768.142 246.042 cv
768.233 245.936 768.396 245.928 768.501 246.02 cv
773.869 250.784 li
773.975 250.877 773.984 251.038 773.891 251.144 cv
773.841 251.2 773.771 251.23 773.7 251.23 cv
cp
f
768.137 275.565 mo
768.045 275.565 767.956 275.515 767.91 275.427 cv
767.846 275.302 767.894 275.148 768.019 275.083 cv
773.674 272.147 li
773.798 272.083 773.952 272.131 774.018 272.256 cv
774.082 272.381 774.033 272.534 773.908 272.6 cv
768.254 275.536 li
768.217 275.556 768.177 275.565 768.137 275.565 cv
cp
f
745.508 250.158 mo
745.456 250.158 745.404 250.143 745.359 250.11 cv
743.223 248.575 740.992 247.128 738.729 245.809 cv
738.606 245.737 738.565 245.581 738.636 245.46 cv
738.707 245.336 738.863 245.296 738.984 245.367 cv
741.263 246.695 743.508 248.151 745.656 249.696 cv
745.771 249.778 745.797 249.938 745.715 250.052 cv
745.665 250.121 745.587 250.158 745.508 250.158 cv
cp
f
738.982 276.043 mo
738.896 276.043 738.81 275.998 738.763 275.917 cv
738.691 275.796 738.731 275.64 738.854 275.568 cv
745.472 271.686 li
745.592 271.613 745.749 271.655 745.82 271.777 cv
745.892 271.898 745.852 272.055 745.729 272.126 cv
739.111 276.008 li
739.071 276.032 739.026 276.043 738.982 276.043 cv
cp
f
766.321 307.055 mo
766.299 315.215 766.278 323.375 766.256 331.535 cv
766.248 334.735 766.402 338.329 768.745 340.508 cv
770.769 342.389 773.786 342.593 776.547 342.695 cv
792.359 343.281 807.597 342.776 823.261 342.776 cv
828.461 342.776 829.63 335.964 829.63 334.66 cv
829.63 324.357 830.115 316.853 829.307 306.768 cv
766.321 307.055 li
cp
1 1 1 rgb
f
767.095 307.826 mo
767.032 331.537 li
767.023 334.727 767.188 338.002 769.273 339.94 cv
771.042 341.585 773.736 341.815 776.575 341.921 cv
787.356 342.319 798.077 342.209 808.448 342.103 cv
813.286 342.053 818.29 342.001 823.261 342.001 cv
827.823 342.001 828.854 335.801 828.854 334.66 cv
828.854 331.737 828.894 329.04 828.932 326.444 cv
829.024 320.002 829.106 314.407 828.591 307.546 cv
767.095 307.826 li
cp
793.834 343.753 mo
788.111 343.753 782.326 343.685 776.519 343.47 cv
773.376 343.353 770.376 343.082 768.218 341.075 cv
765.676 338.712 765.473 334.91 765.481 331.533 cv
765.546 307.053 li
765.548 306.627 765.892 306.281 766.317 306.279 cv
829.304 305.992 li
829.306 305.992 829.307 305.992 829.308 305.992 cv
829.712 305.992 830.048 306.303 830.08 306.706 cv
830.662 313.971 830.578 319.762 830.481 326.467 cv
830.443 329.055 830.405 331.745 830.405 334.66 cv
830.405 336.123 829.163 343.552 823.261 343.552 cv
818.298 343.552 813.299 343.603 808.464 343.652 cv
803.654 343.702 798.768 343.753 793.834 343.753 cv
cp
0 0 0 rgb
f
765.413 295.999 mo
762.758 296.202 762.218 298.383 762.097 301.043 cv
761.792 307.773 764.658 307.767 767.773 307.776 cv
788.61 307.838 809.446 307.962 830.283 307.962 cv
836.823 307.962 835.562 303.656 835.562 299.968 cv
835.562 295.943 831.102 296.131 829.518 296.131 cv
815.786 296.131 774.142 295.331 765.413 295.999 cv
cp
.67451 .831373 .968627 rgb
f
765.413 295.999 mo
765.423 295.999 li
765.413 295.999 li
cp
765.473 296.772 mo
763.69 296.908 763.009 298.035 762.872 301.079 cv
762.757 303.617 763.092 305.262 763.896 306.106 cv
764.74 306.992 766.138 306.996 767.755 307.001 cv
774.758 307.022 781.739 307.05 788.722 307.077 cv
802.344 307.131 816.43 307.186 830.282 307.186 cv
832.133 307.186 833.368 306.835 834.06 306.111 cv
835.003 305.123 834.923 303.397 834.837 301.57 cv
834.813 301.032 834.787 300.494 834.787 299.968 cv
834.787 299.105 834.555 298.454 834.075 297.977 cv
832.984 296.892 830.79 296.907 829.727 296.906 cv
829.519 296.907 li
825.281 296.907 818.495 296.832 810.638 296.745 cv
793.19 296.552 771.477 296.311 765.473 296.772 cv
765.473 296.772 li
cp
830.282 308.737 mo
816.427 308.737 802.339 308.682 788.715 308.627 cv
781.733 308.6 774.752 308.572 767.771 308.552 cv
765.943 308.546 764.074 308.54 762.774 307.175 cv
761.648 305.992 761.187 304.032 761.323 301.009 cv
761.398 299.365 761.572 295.516 765.354 295.227 cv
765.354 295.227 li
771.427 294.763 793.178 295.001 810.654 295.195 cv
818.508 295.282 825.29 295.356 829.519 295.356 cv
829.72 295.356 li
830.973 295.341 833.622 295.338 835.169 296.878 cv
835.944 297.65 836.338 298.69 836.338 299.968 cv
836.338 300.471 836.361 300.984 836.386 301.498 cv
836.482 303.57 836.582 305.713 835.181 307.182 cv
834.182 308.228 832.579 308.737 830.282 308.737 cv
cp
0 0 0 rgb
f
825.42 314.414 mo
825.419 314.414 825.418 314.414 825.417 314.414 cv
814.521 314.277 li
814.38 314.275 814.268 314.16 814.269 314.02 cv
814.273 313.879 814.367 313.743 814.527 313.768 cv
825.423 313.904 li
825.563 313.906 825.677 314.022 825.675 314.162 cv
825.673 314.302 825.56 314.414 825.42 314.414 cv
cp
f
820.323 320.473 mo
820.184 320.473 820.069 320.36 820.068 320.22 cv
820.067 320.079 820.181 319.964 820.321 319.963 cv
824.514 319.927 li
824.641 319.938 824.769 320.037 824.771 320.18 cv
824.771 320.32 824.658 320.435 824.518 320.436 cv
820.325 320.473 li
820.324 320.473 820.324 320.473 820.323 320.473 cv
cp
f
745.966 302.861 mo
745.909 302.861 745.852 302.843 745.805 302.804 cv
739.752 297.87 li
739.643 297.781 739.626 297.621 739.716 297.512 cv
739.804 297.403 739.966 297.386 740.074 297.476 cv
746.127 302.409 li
746.236 302.498 746.253 302.658 746.163 302.768 cv
746.113 302.829 746.04 302.861 745.966 302.861 cv
cp
f
739.547 326.406 mo
739.453 326.406 739.363 326.354 739.318 326.265 cv
739.256 326.139 739.308 325.985 739.434 325.923 cv
745.751 322.786 li
745.875 322.725 746.029 322.774 746.093 322.901 cv
746.155 323.027 746.104 323.181 745.977 323.243 cv
739.66 326.38 li
739.624 326.397 739.585 326.406 739.547 326.406 cv
cp
f
756.793 336.534 mo
756.652 336.534 756.538 336.42 756.538 336.279 cv
756.538 321.224 756.637 305.169 756.742 288.17 cv
756.849 270.813 756.96 252.864 756.96 235.686 cv
756.96 235.546 757.074 235.432 757.215 235.432 cv
757.356 235.432 757.47 235.546 757.47 235.686 cv
757.47 252.865 757.359 270.815 757.252 288.174 cv
757.148 305.171 757.048 321.226 757.048 336.279 cv
757.048 336.42 756.934 336.534 756.793 336.534 cv
cp
f
195.394 65.355 mo
189.325 98.2748 188.028 131.944 191.496 165.338 cv
171.919 166.957 150.72 166.168 131.079 165.477 cv
112.578 164.826 116.356 149.524 119.427 123.934 cv
122.637 97.1832 124.414 81.2152 126.452 64.2347 cv
195.394 65.355 li
cp
1 1 1 rgb
f
127.139 65.021 mo
126.264 72.3237 125.433 79.4683 124.511 87.3975 cv
123.324 97.5991 121.979 109.162 120.196 124.026 cv
119.92 126.325 119.639 128.54 119.368 130.67 cv
117.528 145.145 116.199 155.604 120.615 160.796 cv
122.701 163.25 126.133 164.528 131.106 164.703 cv
132.161 164.74 li
151.601 165.426 171.691 166.133 190.644 164.629 cv
187.294 131.657 188.58 98.5249 194.467 66.1152 cv
127.139 65.021 li
cp
165.355 167.07 mo
154.273 167.07 143.087 166.676 132.106 166.289 cv
131.052 166.252 li
125.618 166.061 121.818 164.605 119.434 161.8 cv
114.576 156.086 115.941 145.344 117.83 130.475 cv
118.101 128.349 118.382 126.136 118.657 123.841 cv
120.44 108.98 121.785 97.4185 122.971 87.2183 cv
123.923 79.0361 124.777 71.6895 125.683 64.1426 cv
125.73 63.7485 126.079 63.4727 126.465 63.46 cv
195.406 64.5801 li
195.634 64.584 195.849 64.6875 195.993 64.8638 cv
196.138 65.0405 196.197 65.2715 196.155 65.4956 cv
190.108 98.3037 188.8 131.869 192.267 165.258 cv
192.288 165.465 192.226 165.672 192.093 165.833 cv
191.96 165.993 191.768 166.093 191.56 166.11 cv
183 166.818 174.211 167.07 165.355 167.07 cv
cp
0 0 0 rgb
f
204.036 151.074 mo
205.104 158.149 202.382 163.38 199.069 164.648 cv
195.755 165.916 192.326 165.331 188.741 165.407 cv
185.98 165.464 183.086 158.448 183.667 153.118 cv
185.585 135.526 195.394 59.7377 195.394 59.7377 cv
195.394 59.7377 199.432 120.56 204.036 151.074 cv
cp
1 1 1 rgb
f
189.435 164.625 mo
190.16 164.625 190.875 164.645 191.572 164.665 cv
194.11 164.735 196.5 164.803 198.792 163.924 cv
201.726 162.802 204.292 157.957 203.269 151.19 cv
203.269 151.19 li
199.691 127.467 196.422 84.9854 195.165 67.5635 cv
192.618 87.3335 185.969 139.155 184.437 153.202 cv
184.004 157.179 185.586 161.896 187.335 163.806 cv
187.824 164.339 188.31 164.632 188.707 164.632 cv
188.713 164.632 188.719 164.632 188.724 164.632 cv
188.962 164.627 189.199 164.625 189.435 164.625 cv
cp
193.57 166.252 mo
192.886 166.252 192.205 166.232 191.529 166.214 cv
190.622 166.188 189.684 166.162 188.757 166.182 cv
187.852 166.223 187.016 165.752 186.192 164.853 cv
183.934 162.387 182.455 157.085 182.896 153.034 cv
184.793 135.636 194.527 60.3965 194.625 59.6382 cv
194.676 59.2427 194.977 58.9224 195.418 58.9634 cv
195.816 58.9756 196.141 59.2886 196.167 59.6865 cv
196.207 60.2944 200.257 120.823 204.803 150.958 cv
204.803 150.958 li
205.958 158.608 202.932 163.999 199.347 165.372 cv
197.441 166.101 195.494 166.252 193.57 166.252 cv
cp
0 0 0 rgb
f
128.151 53.2265 mo
151.362 53.2265 171.111 53.5216 192.645 53.5216 cv
194.266 53.5216 196.01 53.7978 197.136 54.531 cv
198.338 55.313 198.482 56.5026 198.503 57.5873 cv
198.54 59.4764 198.398 61.4797 198.252 63.3763 cv
198.053 65.9699 194.935 65.7315 193.107 65.775 cv
172.541 66.2645 152.812 66.3847 132.236 66.0891 cv
129.554 66.0506 126.441 65.8631 124.971 64.459 cv
124.221 63.7419 124.081 62.8489 123.961 61.995 cv
123.537 58.9655 122.709 53.2265 128.151 53.2265 cv
cp
1 1 1 rgb
f
128.151 54.0015 mo
126.884 54.0015 125.977 54.3369 125.377 55.0269 cv
123.991 56.6191 124.449 59.8911 124.723 61.8457 cv
124.852 62.772 124.975 63.3896 125.507 63.8984 cv
126.742 65.0786 129.607 65.2764 132.247 65.3145 cv
152.245 65.6021 172.148 65.4995 193.089 65 cv
193.641 64.9927 li
196.102 64.9707 197.372 64.7056 197.479 63.3169 cv
197.631 61.3525 197.764 59.437 197.728 57.6025 cv
197.706 56.4722 197.532 55.7134 196.714 55.1807 cv
195.851 54.6187 194.367 54.2964 192.645 54.2964 cv
182.077 54.2964 172.138 54.2271 161.613 54.1533 cv
150.974 54.0786 139.972 54.0015 128.151 54.0015 cv
cp
154.294 67.0229 mo
146.913 67.0229 139.576 66.9697 132.226 66.8643 cv
129.136 66.8198 126.055 66.5654 124.436 65.0195 cv
123.475 64.1006 123.312 62.9463 123.193 62.103 cv
122.877 59.8442 122.358 56.1348 124.207 54.0093 cv
125.106 52.9756 126.434 52.4517 128.151 52.4517 cv
139.977 52.4517 150.982 52.5288 161.625 52.603 cv
172.145 52.6768 182.083 52.7466 192.645 52.7466 cv
193.829 52.7466 196.042 52.894 197.56 53.8818 cv
199.227 54.9663 199.261 56.7261 199.277 57.5723 cv
199.315 59.4761 199.18 61.4321 199.024 63.436 cv
198.789 66.4971 195.449 66.5269 193.654 66.5425 cv
193.126 66.5498 li
179.862 66.8657 167.014 67.0229 154.294 67.0229 cv
cp
0 0 0 rgb
f
149.202 111.828 mo
149.077 100.287 li
159.865 100.365 li
159.951 112.167 li
172.221 112.612 li
172.346 121.827 li
159.951 121.566 li
159.951 133.282 li
149.827 133.395 li
149.452 121.793 li
136.144 121.679 li
136.144 111.95 li
149.202 111.828 li
cp
.67451 .831373 .968627 rgb
f
136.919 120.911 mo
149.459 121.018 li
149.874 121.021 150.213 121.352 150.227 121.768 cv
150.576 132.612 li
159.176 132.516 li
159.176 121.566 li
159.176 121.357 159.26 121.158 159.409 121.012 cv
159.558 120.866 159.771 120.799 159.968 120.791 cv
171.56 121.036 li
171.456 113.36 li
159.923 112.942 li
159.509 112.927 159.18 112.588 159.176 112.173 cv
159.096 101.135 li
149.86 101.067 li
149.977 111.819 li
149.979 112.025 149.899 112.223 149.756 112.37 cv
149.611 112.517 149.415 112.601 149.209 112.603 cv
136.919 112.717 li
136.919 120.911 li
cp
149.826 134.17 mo
149.408 134.17 149.065 133.839 149.052 133.42 cv
148.701 122.561 li
136.137 122.454 li
135.712 122.451 135.368 122.104 135.368 121.679 cv
135.368 111.95 li
135.368 111.524 135.711 111.179 136.137 111.175 cv
148.419 111.06 li
148.302 100.295 li
148.3 100.087 148.382 99.8867 148.528 99.7397 cv
148.676 99.5928 148.852 99.5132 149.083 99.5117 cv
159.871 99.5903 li
160.295 99.5933 160.637 99.936 160.641 100.359 cv
160.721 111.42 li
172.249 111.837 li
172.661 111.852 172.99 112.188 172.996 112.601 cv
173.121 121.817 li
173.123 122.027 173.041 122.229 172.892 122.378 cv
172.742 122.526 172.542 122.605 172.329 122.603 cv
160.727 122.357 li
160.727 133.282 li
160.727 133.707 160.385 134.052 159.96 134.057 cv
149.835 134.17 li
149.832 134.17 149.829 134.17 149.826 134.17 cv
cp
0 0 0 rgb
f
175.495 84.3857 mo
169.385 84.3857 163.299 84.3389 157.34 84.2925 cv
147.798 84.2188 137.932 84.1421 128.161 84.2607 cv
128.16 84.2607 128.159 84.2607 128.158 84.2607 cv
128.019 84.2607 127.905 84.1489 127.903 84.0088 cv
127.901 83.8682 128.015 83.7524 128.155 83.751 cv
137.93 83.6313 147.8 83.708 157.344 83.7827 cv
166.879 83.8564 176.74 83.9336 186.504 83.8145 cv
186.505 83.8145 186.506 83.8145 186.507 83.8145 cv
186.646 83.8145 186.76 83.9263 186.762 84.0664 cv
186.764 84.207 186.65 84.3228 186.51 84.3242 cv
182.844 84.3687 179.165 84.3857 175.495 84.3857 cv
cp
f
180.189 144.946 mo
170.227 144.946 160.419 144.825 150.926 144.708 cv
141.185 144.587 131.116 144.475 120.887 144.469 cv
120.887 144.469 li
120.746 144.469 120.632 144.355 120.632 144.214 cv
120.632 144.074 120.746 143.96 120.887 143.96 cv
131.126 143.948 141.191 144.077 150.932 144.198 cv
160.671 144.318 170.77 144.437 180.971 144.436 cv
180.971 144.436 li
181.111 144.436 181.226 144.55 181.226 144.691 cv
181.226 144.831 181.111 144.946 180.971 144.946 cv
180.711 144.946 180.449 144.946 180.189 144.946 cv
cp
f
137.194 88.3857 mo
137.194 88.3857 li
128.164 88.3833 li
128.023 88.3833 127.906 88.269 127.906 88.1284 cv
127.906 87.9873 128.018 87.8735 128.158 87.8735 cv
128.158 87.8735 li
137.194 87.876 li
137.335 87.876 137.449 87.9902 137.449 88.1309 cv
137.449 88.2715 137.335 88.3857 137.194 88.3857 cv
cp
f
977.202 278.759 mo
978.459 276.26 980.089 272.57 982.57 272.093 cv
985.052 271.615 987.591 271.979 990.087 272.341 cv
990.624 272.419 991.224 272.479 991.655 272.104 cv
992.05 271.76 992.181 271.157 992.286 270.601 cv
993.7 263.123 995.114 255.645 996.527 248.167 cv
996.887 246.262 997.247 244.277 996.833 242.387 cv
996.371 240.279 995.018 238.602 993.708 237.029 cv
991.943 234.911 989.983 232.687 987.459 232.226 cv
986.577 235.066 985.694 237.907 984.958 240.739 cv
986.96 241.507 988.602 243.576 988.839 245.98 cv
989.076 248.384 987.737 250.949 985.704 251.601 cv
983.597 252.277 980.325 255.409 978.364 254.108 cv
974.638 263.043 971.913 267.471 967.971 276.283 cv
969.243 277.284 970.561 278.306 972.073 278.655 cv
973.585 279.004 976.2 280.75 977.202 278.759 cv
cp
1 1 1 rgb
f
977.202 278.759 mo
977.212 278.759 li
977.202 278.759 li
cp
968.928 276.047 mo
969.975 276.859 971.062 277.627 972.247 277.9 cv
972.66 277.995 973.107 278.167 973.581 278.349 cv
975.332 279.022 976.125 279.176 976.51 278.41 cv
976.825 277.778 li
978.137 275.134 979.769 271.843 982.424 271.332 cv
985.042 270.826 987.664 271.207 990.198 271.574 cv
990.583 271.63 990.971 271.672 991.148 271.519 cv
991.357 271.336 991.462 270.785 991.524 270.456 cv
995.766 248.023 li
996.094 246.291 996.465 244.328 996.076 242.553 cv
995.639 240.556 994.238 238.876 993.112 237.525 cv
991.495 235.584 989.881 233.795 987.981 233.159 cv
987.252 235.507 986.513 237.915 985.874 240.304 cv
987.906 241.36 989.376 243.528 989.61 245.904 cv
989.893 248.762 988.28 251.588 985.941 252.339 cv
985.338 252.532 984.569 252.988 983.756 253.471 cv
982.138 254.431 980.342 255.494 978.777 255.123 cv
976.8 259.809 975.106 263.236 973.316 266.854 cv
971.949 269.62 970.537 272.476 968.928 276.047 cv
cp
975.695 280.461 mo
974.758 280.461 973.763 280.079 973.025 279.796 cv
972.604 279.634 972.206 279.481 971.899 279.41 cv
970.195 279.018 968.759 277.889 967.492 276.893 cv
967.213 276.673 967.119 276.291 967.265 275.967 cv
968.99 272.107 970.483 269.088 971.927 266.168 cv
973.794 262.39 975.559 258.821 977.648 253.81 cv
977.737 253.596 977.917 253.434 978.138 253.366 cv
978.359 253.299 978.599 253.332 978.792 253.462 cv
979.711 254.069 981.44 253.043 982.965 252.138 cv
983.856 251.609 984.697 251.109 985.468 250.862 cv
987.083 250.344 988.273 248.144 988.067 246.057 cv
987.868 244.04 986.476 242.151 984.681 241.463 cv
984.313 241.321 984.108 240.926 984.208 240.544 cv
984.954 237.676 985.852 234.788 986.719 231.995 cv
986.836 231.621 987.218 231.398 987.599 231.463 cv
990.302 231.958 992.313 234.144 994.304 236.533 cv
995.537 238.013 997.071 239.855 997.59 242.221 cv
998.047 244.306 997.644 246.434 997.289 248.311 cv
993.048 270.744 li
992.941 271.307 992.78 272.154 992.163 272.69 cv
991.435 273.319 990.486 273.184 989.976 273.107 cv
987.567 272.76 985.079 272.4 982.717 272.853 cv
980.816 273.22 979.312 276.253 978.213 278.467 cv
977.894 279.107 li
977.894 279.107 li
977.376 280.136 976.56 280.461 975.695 280.461 cv
cp
0 0 0 rgb
f
989.987 277.632 mo
988.73 275.133 986.836 272.57 984.354 272.093 cv
981.608 271.564 974.871 266.922 974.438 266.545 cv
973.968 266.137 972.313 258.299 970.397 248.167 cv
970.037 246.262 969.678 244.277 970.091 242.387 cv
970.553 240.279 971.906 238.602 973.216 237.029 cv
974.981 234.911 976.942 232.687 979.465 232.226 cv
980.348 235.066 981.23 237.907 981.967 240.739 cv
979.965 241.507 978.323 243.576 978.086 245.98 cv
977.848 248.384 979.188 250.949 981.22 251.601 cv
983.328 252.277 985.338 251.873 987.3 250.572 cv
991.025 259.507 995.012 267.471 998.953 276.283 cv
997.681 277.284 996.364 278.306 994.852 278.655 cv
993.339 279.004 990.99 279.623 989.987 277.632 cv
cp
1 1 1 rgb
f
990.68 277.283 mo
991.323 278.56 992.804 278.336 994.528 277.935 cv
994.678 277.9 li
995.857 277.628 996.981 276.835 997.998 276.047 cv
996.575 272.88 995.132 269.785 993.733 266.786 cv
991.473 261.939 989.139 256.935 986.932 251.698 cv
984.972 252.761 982.974 252.976 980.984 252.339 cv
978.644 251.588 977.032 248.762 977.315 245.904 cv
977.549 243.528 979.019 241.36 981.051 240.304 cv
980.415 237.928 979.675 235.514 978.944 233.159 cv
977.045 233.795 975.429 235.585 973.812 237.525 cv
972.685 238.877 971.285 240.559 970.849 242.552 cv
970.46 244.328 970.831 246.291 971.159 248.023 cv
973.434 260.06 974.648 265.199 975.021 266.019 cv
975.877 266.668 982.097 270.868 984.501 271.332 cv
987.415 271.893 989.47 274.878 990.68 277.283 cv
990.68 277.283 li
cp
992.485 279.795 mo
991.267 279.795 990.017 279.412 989.295 277.98 cv
989.295 277.98 li
988.241 275.886 986.503 273.296 984.208 272.853 cv
981.283 272.29 974.415 267.552 973.93 267.131 cv
973.622 266.862 973.048 266.364 969.636 248.311 cv
969.28 246.434 968.878 244.306 969.335 242.221 cv
969.852 239.857 971.387 238.015 972.62 236.533 cv
974.612 234.144 976.624 231.958 979.326 231.463 cv
979.706 231.398 980.089 231.621 980.206 231.996 cv
981.088 234.836 981.981 237.714 982.717 240.544 cv
982.816 240.926 982.612 241.321 982.244 241.463 cv
980.449 242.151 979.057 244.04 978.857 246.057 cv
978.651 248.144 979.842 250.345 981.457 250.862 cv
983.274 251.445 985.045 251.137 986.871 249.927 cv
987.063 249.798 987.303 249.763 987.525 249.831 cv
987.746 249.898 987.926 250.061 988.015 250.274 cv
990.312 255.782 992.656 260.809 995.138 266.131 cv
996.62 269.31 998.153 272.597 999.66 275.967 cv
999.806 276.291 999.712 276.673 999.433 276.893 cv
998.166 277.889 996.731 279.018 995.025 279.41 cv
994.879 279.444 li
994.241 279.593 993.372 279.795 992.485 279.795 cv
cp
0 0 0 rgb
f
979.561 278.743 mo
979.561 278.743 977.159 288.302 972.644 295.678 cv
968.13 303.055 962.364 309.808 959.567 318.006 cv
957.297 324.661 957.049 332.1 953.406 338.101 cv
952.252 340.003 950.69 341.771 948.608 342.553 cv
945.798 343.609 942.468 342.61 940.262 340.539 cv
938.056 338.468 936.866 335.491 936.429 332.503 cv
935.183 323.99 942.445 317.681 947.471 310.764 cv
952.497 303.847 957.624 295.832 960.414 287.732 cv
961.594 284.305 960.085 280.243 961.358 276.851 cv
962.631 273.458 964.943 271.159 964.943 271.159 cv
979.561 278.743 li
cp
1 1 1 rgb
f
965.113 272.12 mo
964.43 272.902 962.977 274.74 962.084 277.123 cv
961.491 278.702 961.559 280.472 961.629 282.345 cv
961.7 284.222 961.773 286.163 961.146 287.983 cv
958.79 294.827 954.644 302.211 948.099 311.219 cv
947.033 312.685 945.857 314.139 944.719 315.545 cv
940.369 320.92 936.26 325.997 937.195 332.391 cv
937.521 334.615 938.409 337.737 940.792 339.974 cv
942.927 341.978 945.956 342.721 948.335 341.827 cv
949.971 341.213 951.454 339.824 952.744 337.699 cv
954.966 334.039 955.875 329.878 956.839 325.472 cv
957.398 322.915 957.976 320.271 958.834 317.756 cv
960.832 311.898 964.35 306.724 967.751 301.719 cv
969.176 299.622 970.649 297.454 971.983 295.274 cv
975.747 289.125 978.051 281.327 978.652 279.145 cv
965.113 272.12 li
cp
946.218 343.746 mo
943.94 343.746 941.551 342.811 939.731 341.104 cv
937.023 338.561 936.023 335.084 935.662 332.615 cv
934.628 325.55 939.146 319.968 943.514 314.569 cv
944.64 313.179 945.804 311.741 946.845 310.308 cv
953.297 301.428 957.376 294.174 959.682 287.479 cv
960.214 285.932 960.149 284.218 960.08 282.403 cv
960.007 280.459 959.931 278.449 960.633 276.578 cv
961.949 273.068 964.298 270.708 964.398 270.609 cv
964.637 270.372 965.003 270.316 965.3 270.472 cv
979.918 278.056 li
980.237 278.221 980.4 278.584 980.313 278.932 cv
980.214 279.327 977.83 288.69 973.306 296.083 cv
971.952 298.295 970.468 300.478 969.033 302.59 cv
965.69 307.51 962.231 312.597 960.301 318.256 cv
959.472 320.688 958.902 323.288 958.352 325.803 cv
957.405 330.139 956.425 334.623 954.068 338.504 cv
952.595 340.933 950.849 342.539 948.88 343.278 cv
948.041 343.594 947.139 343.746 946.218 343.746 cv
cp
0 0 0 rgb
f
960.271 277.726 mo
963.466 280.168 964.745 284.531 964.338 288.532 cv
963.932 292.533 962.078 296.24 959.978 299.669 cv
955.677 306.691 950.184 313.036 946.917 320.595 cv
945.769 323.253 944.9 326.051 943.384 328.517 cv
941.867 330.983 939.537 333.15 936.677 333.6 cv
936.265 333.665 935.825 333.689 935.448 333.51 cv
934.504 333.063 934.049 331.475 934.758 330.709 cv
938.86 326.283 935.514 326.266 936.449 322.53 cv
936.78 321.205 938.998 319.759 940.147 319.021 cv
940.78 318.615 941.528 318.102 941.201 316.833 cv
940.292 313.301 941.182 309.936 944.126 308.431 cv
944.976 307.996 945.994 307.658 946.404 306.796 cv
946.792 305.983 946.35 303.806 946.656 302.959 cv
948.086 298.992 951.407 298.669 952.268 297.085 cv
952.831 296.047 951.632 291.335 956.172 288.615 cv
956.912 288.172 957.803 287.804 958.137 287.009 cv
958.415 286.345 958.209 285.589 958.029 284.892 cv
957.453 282.658 957.309 279.937 960.271 277.726 cv
cp
.67451 .831373 .968627 rgb
f
960.267 278.727 mo
958.104 280.622 958.29 282.798 958.779 284.699 cv
958.984 285.492 959.225 286.419 958.852 287.309 cv
958.474 288.208 957.667 288.66 956.955 289.06 cv
956.825 289.133 956.695 289.205 956.57 289.28 cv
953.529 291.102 953.362 293.888 953.252 295.73 cv
953.206 296.491 953.174 297.04 952.948 297.454 cv
952.536 298.215 951.765 298.704 950.948 299.222 cv
949.659 300.039 948.198 300.966 947.386 303.222 cv
947.291 303.483 947.313 304.182 947.332 304.743 cv
947.361 305.663 947.39 306.531 947.104 307.13 cv
946.648 308.086 945.731 308.521 944.924 308.904 cv
944.773 308.976 944.623 309.047 944.479 309.121 cv
942.047 310.364 941.078 313.246 941.952 316.641 cv
942.425 318.479 941.169 319.286 940.565 319.674 cv
939.798 320.166 937.464 321.664 937.201 322.718 cv
936.896 323.935 937.111 324.649 937.339 325.406 cv
937.839 327.076 937.97 328.384 935.326 331.235 cv
935.198 331.374 935.154 331.645 935.212 331.94 cv
935.287 332.33 935.521 332.688 935.779 332.81 cv
935.988 332.909 936.323 332.87 936.557 332.834 cv
938.852 332.474 941.1 330.752 942.724 328.111 cv
943.748 326.446 944.49 324.56 945.209 322.738 cv
945.532 321.917 945.856 321.097 946.206 320.288 cv
948.356 315.313 951.488 310.81 954.517 306.457 cv
956.14 304.124 957.818 301.711 959.317 299.264 cv
961.076 296.392 963.149 292.567 963.567 288.454 cv
963.964 284.555 962.706 280.892 960.267 278.727 cv
cp
936.135 334.424 mo
935.809 334.424 935.457 334.373 935.116 334.211 cv
934.406 333.875 933.86 333.118 933.69 332.234 cv
933.536 331.44 933.718 330.691 934.188 330.183 cv
936.428 327.767 936.199 327.005 935.854 325.852 cv
935.602 325.014 935.29 323.972 935.697 322.342 cv
936.06 320.893 937.849 319.576 939.727 318.369 cv
940.394 317.942 940.628 317.716 940.45 317.027 cv
939.387 312.891 940.659 309.333 943.773 307.74 cv
943.931 307.66 944.095 307.582 944.259 307.504 cv
944.89 307.205 945.485 306.922 945.705 306.462 cv
945.828 306.204 945.801 305.354 945.782 304.793 cv
945.757 303.992 945.732 303.236 945.927 302.696 cv
946.92 299.94 948.769 298.769 950.118 297.913 cv
950.787 297.488 951.365 297.121 951.586 296.715 cv
951.648 296.578 951.68 296.057 951.704 295.638 cv
951.818 293.734 952.03 290.192 955.773 287.95 cv
955.911 287.868 956.054 287.788 956.197 287.707 cv
956.739 287.403 957.251 287.117 957.422 286.709 cv
957.593 286.302 957.44 285.709 957.292 285.135 cv
956.713 282.893 956.36 279.678 959.808 277.105 cv
960.085 276.898 960.467 276.901 960.742 277.11 cv
963.91 279.532 965.584 283.939 965.11 288.61 cv
964.659 293.036 962.484 297.061 960.64 300.073 cv
959.116 302.56 957.425 304.991 955.789 307.342 cv
952.805 311.633 949.718 316.07 947.628 320.903 cv
947.286 321.695 946.969 322.501 946.651 323.307 cv
945.908 325.191 945.14 327.142 944.044 328.924 cv
942.95 330.702 940.554 333.775 936.798 334.365 cv
936.599 334.397 936.373 334.424 936.135 334.424 cv
cp
0 0 0 rgb
f
987.363 278.743 mo
987.363 278.743 989.765 288.302 994.28 295.678 cv
998.795 303.055 1004.56 309.808 1007.36 318.006 cv
1009.63 324.661 1009.88 332.1 1013.52 338.101 cv
1014.67 340.003 1016.23 341.771 1018.32 342.553 cv
1021.13 343.609 1024.46 342.61 1026.66 340.539 cv
1028.87 338.468 1030.06 335.491 1030.5 332.503 cv
1031.74 323.99 1024.48 317.681 1019.45 310.764 cv
1014.43 303.847 1009.3 295.832 1006.51 287.732 cv
1005.33 284.305 1006.84 280.243 1005.57 276.851 cv
1004.29 273.458 1001.98 271.159 1001.98 271.159 cv
987.363 278.743 li
cp
1 1 1 rgb
f
988.273 279.145 mo
988.874 281.327 991.178 289.125 994.941 295.274 cv
996.275 297.454 997.749 299.622 999.174 301.719 cv
1002.58 306.724 1006.09 311.898 1008.09 317.756 cv
1008.95 320.271 1009.53 322.915 1010.09 325.472 cv
1011.05 329.877 1011.96 334.039 1014.18 337.699 cv
1015.47 339.824 1016.95 341.213 1018.59 341.827 cv
1020.97 342.722 1024 341.977 1026.13 339.974 cv
1028.52 337.737 1029.4 334.615 1029.73 332.391 cv
1030.66 325.997 1026.56 320.92 1022.21 315.544 cv
1021.07 314.139 1019.89 312.685 1018.83 311.22 cv
1012.28 302.214 1008.14 294.831 1005.78 287.983 cv
1005.15 286.163 1005.22 284.222 1005.3 282.345 cv
1005.37 280.472 1005.43 278.702 1004.84 277.123 cv
1003.95 274.74 1002.49 272.903 1001.81 272.12 cv
988.273 279.145 li
cp
1020.71 343.746 mo
1019.79 343.746 1018.88 343.594 1018.04 343.278 cv
1016.08 342.539 1014.33 340.933 1012.86 338.504 cv
1010.5 334.623 1009.52 330.139 1008.57 325.803 cv
1008.02 323.288 1007.45 320.688 1006.62 318.256 cv
1004.69 312.597 1001.24 307.51 997.892 302.59 cv
996.457 300.478 994.973 298.295 993.619 296.083 cv
989.095 288.69 986.711 279.327 986.611 278.932 cv
986.524 278.584 986.688 278.221 987.007 278.056 cv
1001.63 270.472 li
1001.92 270.316 1002.29 270.372 1002.53 270.609 cv
1002.63 270.708 1004.97 273.068 1006.29 276.578 cv
1006.99 278.449 1006.92 280.459 1006.84 282.403 cv
1006.78 284.218 1006.71 285.932 1007.24 287.479 cv
1009.55 294.177 1013.63 301.431 1020.08 310.308 cv
1021.12 311.741 1022.29 313.179 1023.41 314.569 cv
1027.78 319.968 1032.3 325.55 1031.26 332.615 cv
1030.9 335.084 1029.9 338.561 1027.19 341.104 cv
1025.37 342.811 1022.98 343.746 1020.71 343.746 cv
cp
0 0 0 rgb
f
1006.65 277.726 mo
1003.46 280.168 1002.18 284.531 1002.59 288.532 cv
1002.99 292.533 1004.85 296.24 1006.95 299.669 cv
1011.25 306.691 1016.74 313.036 1020.01 320.595 cv
1021.16 323.253 1022.02 326.051 1023.54 328.517 cv
1025.06 330.983 1027.39 333.15 1030.25 333.6 cv
1030.66 333.665 1031.1 333.689 1031.48 333.51 cv
1032.42 333.063 1032.88 331.475 1032.17 330.709 cv
1028.06 326.283 1031.41 326.266 1030.48 322.53 cv
1030.14 321.205 1027.93 319.759 1026.78 319.021 cv
1026.14 318.615 1025.4 318.102 1025.72 316.833 cv
1026.63 313.301 1025.74 309.936 1022.8 308.431 cv
1021.95 307.996 1020.93 307.658 1020.52 306.796 cv
1020.13 305.983 1020.57 303.806 1020.27 302.959 cv
1018.84 298.992 1015.52 298.669 1014.66 297.085 cv
1014.09 296.047 1015.29 291.335 1010.75 288.615 cv
1010.01 288.172 1009.12 287.804 1008.79 287.009 cv
1008.51 286.345 1008.72 285.589 1008.9 284.892 cv
1009.47 282.658 1009.62 279.937 1006.65 277.726 cv
cp
.67451 .831373 .968627 rgb
f
1006.66 278.727 mo
1004.22 280.892 1002.96 284.555 1003.36 288.454 cv
1003.77 292.568 1005.85 296.393 1007.61 299.264 cv
1009.11 301.711 1010.78 304.123 1012.41 306.456 cv
1015.44 310.81 1018.57 315.311 1020.72 320.288 cv
1021.07 321.096 1021.39 321.915 1021.71 322.735 cv
1022.43 324.559 1023.18 326.445 1024.2 328.111 cv
1025.83 330.752 1028.07 332.474 1030.37 332.834 cv
1030.6 332.871 1030.94 332.909 1031.14 332.81 cv
1031.4 332.688 1031.64 332.33 1031.71 331.94 cv
1031.77 331.645 1031.73 331.374 1031.6 331.235 cv
1028.96 328.384 1029.08 327.076 1029.59 325.406 cv
1029.81 324.649 1030.03 323.935 1029.72 322.719 cv
1029.46 321.663 1027.13 320.166 1026.36 319.674 cv
1025.75 319.286 1024.5 318.479 1024.97 316.641 cv
1025.85 313.245 1024.88 310.364 1022.45 309.121 cv
1022.3 309.047 1022.15 308.976 1022 308.904 cv
1021.19 308.521 1020.28 308.086 1019.82 307.129 cv
1019.54 306.531 1019.56 305.663 1019.59 304.743 cv
1019.61 304.182 1019.63 303.483 1019.54 303.222 cv
1018.73 300.966 1017.27 300.039 1015.98 299.222 cv
1015.16 298.704 1014.39 298.215 1013.98 297.453 cv
1013.75 297.04 1013.72 296.49 1013.67 295.729 cv
1013.56 293.887 1013.39 291.102 1010.35 289.28 cv
1010.23 289.205 1010.1 289.133 1009.97 289.06 cv
1009.26 288.66 1008.45 288.208 1008.07 287.309 cv
1007.7 286.416 1007.94 285.485 1008.13 284.737 cv
1008.63 282.801 1008.82 280.623 1006.66 278.727 cv
cp
1030.79 334.424 mo
1030.55 334.424 1030.33 334.397 1030.13 334.365 cv
1026.37 333.775 1023.97 330.702 1022.88 328.924 cv
1021.79 327.141 1021.02 325.19 1020.27 323.304 cv
1019.96 322.499 1019.64 321.695 1019.3 320.903 cv
1017.21 316.069 1014.12 311.632 1011.13 307.341 cv
1009.5 304.99 1007.81 302.559 1006.29 300.074 cv
1004.44 297.061 1002.26 293.037 1001.81 288.61 cv
1001.34 283.939 1003.01 279.532 1006.18 277.11 cv
1006.46 276.901 1006.84 276.898 1007.12 277.105 cv
1010.56 279.678 1010.21 282.893 1009.65 285.086 cv
1009.49 285.703 1009.33 286.299 1009.5 286.709 cv
1009.67 287.117 1010.19 287.404 1010.73 287.707 cv
1010.87 287.788 1011.01 287.868 1011.15 287.95 cv
1014.89 290.192 1015.11 293.733 1015.22 295.637 cv
1015.25 296.056 1015.28 296.578 1015.34 296.718 cv
1015.56 297.121 1016.14 297.488 1016.81 297.913 cv
1018.16 298.769 1020 299.94 1021 302.696 cv
1021.19 303.236 1021.17 303.992 1021.14 304.793 cv
1021.12 305.354 1021.1 306.204 1021.22 306.462 cv
1021.44 306.922 1022.03 307.204 1022.66 307.504 cv
1022.83 307.582 1022.99 307.66 1023.15 307.74 cv
1026.26 309.332 1027.54 312.891 1026.47 317.027 cv
1026.3 317.716 1026.53 317.942 1027.2 318.369 cv
1029.08 319.575 1030.87 320.891 1031.23 322.343 cv
1031.63 323.972 1031.32 325.015 1031.07 325.852 cv
1030.72 327.005 1030.5 327.767 1032.73 330.183 cv
1033.21 330.691 1033.39 331.44 1033.23 332.234 cv
1033.06 333.118 1032.52 333.875 1031.81 334.211 cv
1031.47 334.373 1031.12 334.424 1030.79 334.424 cv
cp
0 0 0 rgb
f
991.643 281.199 mo
991.541 281.199 991.444 281.138 991.405 281.037 cv
991.354 280.906 991.418 280.759 991.55 280.707 cv
994.572 279.521 997.549 278.138 1000.4 276.598 cv
1000.52 276.531 1000.67 276.576 1000.74 276.701 cv
1000.81 276.825 1000.76 276.979 1000.64 277.047 cv
997.773 278.597 994.778 279.987 991.735 281.182 cv
991.705 281.193 991.674 281.199 991.643 281.199 cv
cp
f
992.668 284.996 mo
992.568 284.996 992.475 284.939 992.434 284.841 cv
992.378 284.711 992.438 284.561 992.568 284.507 cv
993.866 283.955 995.15 283.332 996.388 282.655 cv
996.507 282.588 996.666 282.632 996.733 282.757 cv
996.801 282.88 996.756 283.035 996.632 283.103 cv
995.381 283.788 994.081 284.418 992.768 284.976 cv
992.735 284.989 992.701 284.996 992.668 284.996 cv
cp
f
1225.42 317.311 mo
1232.97 316.187 1241.02 306.67 1241.53 299.869 cv
1244.25 264.066 1236.34 255.396 1220.35 254.666 cv
1196.07 253.556 1179.39 253.3 1153.87 254.666 cv
1132.33 255.818 1133.33 277.553 1133.33 286.519 cv
1133.33 306.714 1137.87 314.877 1157.54 317.097 cv
1183.14 319.986 1200.94 318.112 1203.09 318.842 cv
1206.94 320.151 1223.9 344.714 1227.1 342.881 cv
1229.97 341.232 1224.73 326.491 1225.42 317.311 cv
cp
1 1 1 rgb
f
1200.21 317.883 mo
1201.93 317.883 1202.84 317.939 1203.34 318.109 cv
1205.12 318.714 1208.51 322.676 1213.88 329.089 cv
1218.1 334.135 1225.17 342.607 1226.73 342.201 cv
1227.79 341.588 1226.86 336.169 1226.1 331.815 cv
1225.27 327.012 1224.32 321.567 1224.65 317.252 cv
1224.68 316.892 1224.95 316.598 1225.31 316.544 cv
1232.56 315.464 1240.29 306.049 1240.76 299.81 cv
1242.29 279.628 1240.46 267.353 1234.99 261.181 cv
1231.75 257.526 1227.23 255.756 1220.31 255.44 cv
1196.55 254.355 1179.76 254.057 1153.91 255.439 cv
1133.98 256.507 1134.06 276.004 1134.1 285.374 cv
1134.1 286.519 li
1134.1 307.582 1139.38 314.268 1157.62 316.326 cv
1174.85 318.272 1188.8 318.051 1196.29 317.928 cv
1197.92 317.902 1199.2 317.883 1200.21 317.883 cv
cp
1226.71 343.756 mo
1224.4 343.756 1220.38 339.269 1212.69 330.084 cv
1208.76 325.392 1204.3 320.073 1202.84 319.576 cv
1202.27 319.384 1199.64 319.424 1196.32 319.478 cv
1188.79 319.602 1174.78 319.823 1157.45 317.867 cv
1136.28 315.478 1132.55 305.854 1132.55 286.519 cv
1132.55 285.38 li
1132.51 275.531 1132.42 255.037 1153.83 253.893 cv
1179.74 252.506 1196.57 252.805 1220.38 253.892 cv
1227.65 254.224 1232.66 256.213 1236.15 260.152 cv
1241.99 266.75 1243.89 279.017 1242.31 299.927 cv
1241.8 306.661 1233.98 316.365 1226.16 317.967 cv
1225.97 322.001 1226.85 327.06 1227.63 331.55 cv
1228.72 337.845 1229.51 342.393 1227.48 343.553 cv
1227.25 343.689 1226.99 343.756 1226.71 343.756 cv
cp
0 0 0 rgb
f
1162.51 288.704 mo
1162.51 286.463 1164.35 284.647 1166.62 284.647 cv
1168.88 284.647 1170.72 286.463 1170.72 288.704 cv
1170.72 290.944 1168.88 292.76 1166.62 292.76 cv
1164.35 292.76 1162.51 290.944 1162.51 288.704 cv
cp
1 1 1 rgb
f
1166.62 285.422 mo
1164.78 285.422 1163.28 286.895 1163.28 288.704 cv
1163.28 290.514 1164.78 291.985 1166.62 291.985 cv
1168.45 291.985 1169.95 290.514 1169.95 288.704 cv
1169.95 286.895 1168.45 285.422 1166.62 285.422 cv
cp
1166.62 293.536 mo
1163.92 293.536 1161.73 291.368 1161.73 288.704 cv
1161.73 286.039 1163.92 283.871 1166.62 283.871 cv
1169.31 283.871 1171.5 286.039 1171.5 288.704 cv
1171.5 291.368 1169.31 293.536 1166.62 293.536 cv
cp
0 0 0 rgb
f
1160.3 311.932 mo
1160.3 311.932 1160.29 311.932 1160.29 311.932 cv
1148.6 311.4 li
1148.46 311.394 1148.35 311.274 1148.35 311.134 cv
1148.36 310.993 1148.49 310.895 1148.62 310.891 cv
1160.31 311.422 li
1160.45 311.429 1160.56 311.548 1160.56 311.689 cv
1160.55 311.825 1160.44 311.932 1160.3 311.932 cv
cp
f
1152.41 307.014 mo
1152.4 307.014 1152.4 307.014 1152.4 307.014 cv
1144.8 306.778 li
1144.66 306.774 1144.55 306.656 1144.56 306.516 cv
1144.56 306.375 1144.66 306.249 1144.82 306.269 cv
1152.41 306.504 li
1152.55 306.508 1152.67 306.626 1152.66 306.767 cv
1152.66 306.904 1152.54 307.014 1152.41 307.014 cv
cp
f
1148.85 222.526 mo
1140.57 222.526 1132 224.633 1126.66 230.96 cv
1121.32 237.286 1119.28 245.475 1119.86 253.735 cv
1121.53 277.691 1143.55 281.21 1146.61 281.372 cv
1150.14 281.56 1167.58 282.386 1175.65 266.344 cv
1179.47 258.752 1179.11 247.407 1176.15 239.44 cv
1172.26 228.965 1162.27 222.526 1148.85 222.526 cv
cp
1 1 1 rgb
f
1148.85 223.302 mo
1142.14 223.302 1132.95 224.717 1127.25 231.46 cv
1122.38 237.23 1120.03 245.121 1120.63 253.682 cv
1122.37 278.616 1146.41 280.585 1146.65 280.599 cv
1154.26 280.996 1168.09 279.649 1174.96 265.995 cv
1178.83 258.314 1178.12 246.958 1175.43 239.711 cv
1171.6 229.436 1161.67 223.302 1148.85 223.302 cv
cp
1148.88 282.208 mo
1148.07 282.208 1147.29 282.185 1146.57 282.146 cv
1146.31 282.133 1120.92 280.055 1119.08 253.789 cv
1118.46 244.825 1120.94 236.54 1126.07 230.46 cv
1132.15 223.263 1141.81 221.751 1148.85 221.751 cv
1162.35 221.751 1172.82 228.263 1176.88 239.17 cv
1179.6 246.499 1180.6 258.238 1176.34 266.692 cv
1169.73 279.831 1157.13 282.208 1148.88 282.208 cv
cp
0 0 0 rgb
f
1226.58 261.089 mo
1226.58 261.089 1226.57 261.089 1226.57 261.089 cv
1218.82 260.888 li
1218.68 260.884 1218.57 260.767 1218.57 260.626 cv
1218.58 260.487 1218.69 260.378 1218.83 260.378 cv
1218.83 260.378 1218.83 260.378 1218.83 260.378 cv
1226.58 260.579 li
1226.72 260.583 1226.84 260.7 1226.83 260.841 cv
1226.83 260.979 1226.71 261.089 1226.58 261.089 cv
cp
f
1186.19 288.704 mo
1186.19 286.463 1188.03 284.647 1190.3 284.647 cv
1192.57 284.647 1194.41 286.463 1194.41 288.704 cv
1194.41 290.944 1192.57 292.76 1190.3 292.76 cv
1188.03 292.76 1186.19 290.944 1186.19 288.704 cv
cp
1 1 1 rgb
f
1190.3 285.422 mo
1188.46 285.422 1186.97 286.895 1186.97 288.704 cv
1186.97 290.514 1188.46 291.985 1190.3 291.985 cv
1192.14 291.985 1193.63 290.514 1193.63 288.704 cv
1193.63 286.895 1192.14 285.422 1190.3 285.422 cv
cp
1190.3 293.536 mo
1187.61 293.536 1185.42 291.368 1185.42 288.704 cv
1185.42 286.039 1187.61 283.871 1190.3 283.871 cv
1192.99 283.871 1195.18 286.039 1195.18 288.704 cv
1195.18 291.368 1192.99 293.536 1190.3 293.536 cv
cp
0 0 0 rgb
f
1209.88 288.704 mo
1209.88 286.463 1211.72 284.647 1213.99 284.647 cv
1216.25 284.647 1218.09 286.463 1218.09 288.704 cv
1218.09 290.944 1216.25 292.76 1213.99 292.76 cv
1211.72 292.76 1209.88 290.944 1209.88 288.704 cv
cp
1 1 1 rgb
f
1213.99 285.422 mo
1212.15 285.422 1210.66 286.895 1210.66 288.704 cv
1210.66 290.514 1212.15 291.985 1213.99 291.985 cv
1215.82 291.985 1217.32 290.514 1217.32 288.704 cv
1217.32 286.895 1215.82 285.422 1213.99 285.422 cv
cp
1213.99 293.536 mo
1211.29 293.536 1209.1 291.368 1209.1 288.704 cv
1209.1 286.039 1211.29 283.871 1213.99 283.871 cv
1216.68 283.871 1218.87 286.039 1218.87 288.704 cv
1218.87 291.368 1216.68 293.536 1213.99 293.536 cv
cp
0 0 0 rgb
f
1144.16 247.39 mo
1144.05 236.816 li
1153.56 236.888 li
1153.64 247.701 li
1164.45 248.109 li
1164.56 256.552 li
1153.64 256.313 li
1153.64 267.047 li
1144.72 267.151 li
1144.39 256.52 li
1132.66 256.416 li
1132.66 247.502 li
1144.16 247.39 li
cp
.67451 .831373 .968627 rgb
f
1133.43 255.648 mo
1144.39 255.745 li
1144.81 255.749 1145.15 256.081 1145.16 256.496 cv
1145.47 266.366 li
1152.86 266.281 li
1152.86 256.313 li
1152.86 256.104 1152.95 255.904 1153.09 255.759 cv
1153.24 255.617 1153.43 255.537 1153.64 255.537 cv
1153.64 255.537 1153.65 255.537 1153.65 255.538 cv
1163.77 255.76 li
1163.68 248.855 li
1153.61 248.476 li
1153.19 248.46 1152.86 248.121 1152.86 247.707 cv
1152.79 237.657 li
1144.84 237.598 li
1144.94 247.383 li
1144.94 247.588 1144.86 247.786 1144.72 247.933 cv
1144.57 248.08 1144.38 248.164 1144.17 248.166 cv
1133.43 248.27 li
1133.43 255.648 li
cp
1144.72 267.926 mo
1144.3 267.926 1143.95 267.594 1143.94 267.175 cv
1143.63 257.289 li
1132.65 257.191 li
1132.23 257.188 1131.88 256.842 1131.88 256.416 cv
1131.88 247.502 li
1131.88 247.077 1132.23 246.731 1132.65 246.727 cv
1143.38 246.623 li
1143.28 236.824 li
1143.28 236.616 1143.36 236.416 1143.51 236.27 cv
1143.65 236.122 1143.86 236.07 1144.06 236.041 cv
1153.57 236.112 li
1153.99 236.116 1154.33 236.459 1154.34 236.882 cv
1154.41 246.955 li
1164.48 247.334 li
1164.89 247.35 1165.22 247.686 1165.22 248.099 cv
1165.33 256.542 li
1165.34 256.752 1165.25 256.954 1165.1 257.103 cv
1164.96 257.25 1164.71 257.364 1164.54 257.326 cv
1154.41 257.104 li
1154.41 267.047 li
1154.41 267.472 1154.07 267.817 1153.65 267.822 cv
1144.72 267.926 li
1144.72 267.926 1144.72 267.926 1144.72 267.926 cv
cp
0 0 0 rgb
f
139.704 256.806 mo
141.08 258.771 140.528 266.128 138.735 267.67 cv
136.941 269.212 134.642 270.579 132.765 272.006 cv
127.782 275.794 129.103 281.927 128.778 288.42 cv
128.153 300.885 128.623 312.083 127.997 324.548 cv
127.758 329.323 129.115 337.264 132.33 340.617 cv
135.133 343.541 138.859 342.606 142.789 342.725 cv
155.805 343.12 164.588 343.053 177.6 342.525 cv
179.687 342.44 181.918 342.291 183.582 340.953 cv
186.09 338.936 189.258 331.308 189.289 327.97 cv
189.454 310.654 188.772 297.138 188.936 279.822 cv
188.964 276.875 188.815 273.503 186.661 271.641 cv
185.478 270.618 183.91 270.277 182.549 269.545 cv
179.216 267.754 177.35 262.084 178.3 258.252 cv
139.704 256.806 li
cp
1 1 1 rgb
f
142.003 341.94 mo
142.27 341.94 142.541 341.942 142.812 341.951 cv
155.573 342.338 164.344 342.288 177.568 341.75 cv
179.749 341.662 181.669 341.496 183.097 340.349 cv
185.454 338.452 188.485 331.037 188.514 327.964 cv
188.597 319.315 188.465 311.483 188.338 303.909 cv
188.211 296.325 188.079 288.482 188.161 279.814 cv
188.187 277.006 188.056 273.872 186.154 272.227 cv
185.494 271.656 184.663 271.315 183.783 270.952 cv
183.255 270.735 182.709 270.511 182.182 270.228 cv
178.667 268.339 176.853 262.919 177.374 258.993 cv
140.878 257.625 li
141.701 260.68 141.113 266.647 139.239 268.258 cv
138.133 269.21 136.847 270.092 135.602 270.944 cv
134.764 271.52 133.972 272.063 133.234 272.623 cv
129.592 275.392 129.602 279.586 129.613 284.442 cv
129.617 285.745 129.62 287.092 129.552 288.459 cv
129.24 294.672 129.2 300.675 129.163 306.481 cv
129.124 312.309 129.085 318.335 128.771 324.587 cv
128.515 329.705 130.017 337.084 132.89 340.081 cv
134.848 342.124 137.356 342.052 140.25 341.972 cv
140.822 341.956 141.408 341.94 142.003 341.94 cv
cp
157.788 343.754 mo
153.072 343.754 148.292 343.668 142.766 343.5 cv
141.936 343.475 141.102 343.499 140.294 343.522 cv
137.299 343.603 134.206 343.692 131.77 341.153 cv
128.243 337.474 126.987 329.205 127.223 324.509 cv
127.535 318.291 127.574 312.282 127.612 306.471 cv
127.65 300.648 127.69 294.628 128.003 288.381 cv
128.07 287.055 128.066 285.728 128.063 284.446 cv
128.052 279.396 128.04 274.625 132.297 271.389 cv
133.063 270.806 133.908 270.227 134.726 269.666 cv
135.935 268.837 137.186 267.979 138.228 267.082 cv
139.671 265.843 140.26 258.951 139.069 257.25 cv
138.9 257.009 138.883 256.693 139.023 256.435 cv
139.164 256.177 139.437 256.039 139.733 256.031 cv
178.329 257.478 li
178.561 257.486 178.778 257.6 178.919 257.786 cv
179.06 257.973 179.108 258.212 179.052 258.439 cv
178.13 262.156 180.044 267.319 182.916 268.862 cv
183.372 269.107 183.858 269.308 184.372 269.519 cv
185.328 269.912 186.317 270.318 187.168 271.055 cv
189.571 273.133 189.741 276.673 189.712 279.828 cv
189.629 288.477 189.761 296.309 189.888 303.883 cv
190.015 311.467 190.146 319.31 190.064 327.978 cv
190.031 331.462 186.81 339.352 184.067 341.556 cv
182.275 342.998 180 343.203 177.631 343.299 cv
170.092 343.604 163.996 343.754 157.788 343.754 cv
cp
0 0 0 rgb
f
139.363 248.924 mo
134.264 249.413 136.167 255.803 136.184 258.129 cv
136.189 258.868 136.255 259.631 136.654 260.291 cv
137.742 262.089 140.635 262.331 143.04 262.335 cv
154.557 262.355 166.074 262.375 177.591 262.395 cv
179.251 262.398 181.147 262.311 182.188 261.227 cv
182.786 260.605 182.962 259.775 183.062 258.98 cv
183.379 256.444 184.195 252.33 182.766 250.615 cv
181.897 249.572 178.734 249.026 177.037 248.933 cv
166.378 248.348 146.445 248.244 139.363 248.924 cv
cp
.67451 .831373 .968627 rgb
f
139.363 248.924 mo
139.373 248.924 li
139.363 248.924 li
cp
139.437 249.695 mo
138.497 249.785 137.82 250.102 137.368 250.662 cv
136.29 251.998 136.591 254.554 136.81 256.42 cv
136.888 257.084 136.955 257.656 136.959 258.123 cv
136.964 258.74 137.011 259.383 137.317 259.89 cv
138.218 261.378 141.016 261.556 143.042 261.56 cv
177.593 261.619 li
177.613 261.619 177.633 261.619 177.653 261.619 cv
179.263 261.619 180.85 261.502 181.63 260.69 cv
182.072 260.228 182.21 259.55 182.292 258.885 cv
182.333 258.559 182.382 258.209 182.434 257.841 cv
182.738 255.652 183.199 252.346 182.17 251.111 cv
181.595 250.42 178.98 249.816 176.994 249.706 cv
166.528 249.132 146.435 249.023 139.437 249.695 cv
139.437 249.695 li
cp
177.667 263.17 mo
177.642 263.17 177.616 263.17 177.591 263.17 cv
143.039 263.11 li
140.435 263.104 137.282 262.825 135.991 260.692 cv
135.489 259.862 135.415 258.934 135.408 258.135 cv
135.406 257.753 135.343 257.219 135.27 256.602 cv
135.019 254.462 134.674 251.532 136.162 249.689 cv
136.88 248.8 137.932 248.282 139.289 248.152 cv
139.289 248.152 li
146.541 247.455 166.463 247.575 177.079 248.159 cv
177.129 248.161 181.97 248.447 183.361 250.119 cv
184.829 251.88 184.352 255.304 183.969 258.055 cv
183.918 258.415 183.87 258.759 183.83 259.077 cv
183.721 259.962 183.506 260.974 182.747 261.764 cv
181.513 263.049 179.486 263.17 177.667 263.17 cv
cp
0 0 0 rgb
f
184.168 282.426 mo
184.167 282.426 184.166 282.426 184.165 282.426 cv
132.453 281.895 li
132.312 281.894 132.199 281.778 132.201 281.637 cv
132.202 281.496 132.336 281.399 132.459 281.385 cv
184.171 281.916 li
184.311 281.917 184.425 282.032 184.423 282.174 cv
184.422 282.314 184.308 282.426 184.168 282.426 cv
cp
f
132.061 328.296 mo
131.921 328.296 131.807 328.183 131.807 328.042 cv
131.806 327.901 131.92 327.786 132.06 327.786 cv
185.185 327.575 li
185.186 327.575 li
185.327 327.575 185.441 327.689 185.441 327.829 cv
185.442 327.97 185.328 328.085 185.187 328.085 cv
132.062 328.296 li
132.061 328.296 li
cp
f
141.553 286.859 mo
140.833 286.859 139.838 286.84 138.735 286.818 cv
136.592 286.774 134.162 286.728 132.466 286.792 cv
132.323 286.801 132.207 286.688 132.201 286.547 cv
132.196 286.406 132.306 286.288 132.446 286.282 cv
134.158 286.219 136.596 286.266 138.746 286.309 cv
139.844 286.33 140.836 286.35 141.553 286.35 cv
141.693 286.35 141.808 286.464 141.808 286.604 cv
141.808 286.745 141.693 286.859 141.553 286.859 cv
cp
f
205.395 234.439 mo
203.174 236.215 202.145 239.127 202.965 241.561 cv
203.787 244.003 211.77 254.039 214.772 256.724 cv
216.331 258.119 218.237 259.275 220.446 259.38 cv
222.656 259.485 225.186 258.294 226.158 256.208 cv
227.222 253.924 226.179 251.484 225 249.515 cv
222.147 244.751 218.466 240.58 214.814 236.422 cv
210.88 231.943 207.307 232.909 205.395 234.439 cv
cp
1 1 1 rgb
f
205.395 234.439 mo
205.405 234.439 li
205.395 234.439 li
cp
208.932 233.93 mo
207.525 233.93 206.461 234.579 205.88 235.045 cv
205.88 235.045 li
203.889 236.636 202.992 239.214 203.699 241.314 cv
204.478 243.628 212.365 253.532 215.289 256.147 cv
217.047 257.719 218.746 258.522 220.483 258.605 cv
222.221 258.699 224.579 257.763 225.454 255.881 cv
226.417 253.816 225.276 251.486 224.335 249.913 cv
221.556 245.273 217.906 241.117 214.378 237.099 cv
214.232 236.934 li
212.204 234.624 210.385 233.93 208.932 233.93 cv
cp
220.704 260.161 mo
220.604 260.161 220.507 260.158 220.409 260.154 cv
218.332 260.055 216.262 259.096 214.256 257.303 cv
211.354 254.708 203.162 244.577 202.23 241.808 cv
201.319 239.104 202.422 235.824 204.911 233.834 cv
204.911 233.834 li
207.371 231.865 211.417 231.38 215.396 235.91 cv
215.542 236.076 li
219.117 240.146 222.813 244.355 225.665 249.116 cv
226.788 250.993 228.133 253.803 226.859 256.535 cv
225.735 258.951 222.972 260.161 220.704 260.161 cv
cp
0 0 0 rgb
f
211.836 248.986 mo
211.772 248.986 211.708 248.963 211.659 248.915 cv
211.558 248.817 211.555 248.656 211.652 248.555 cv
213.389 246.753 215.288 245.089 217.297 243.61 cv
217.411 243.526 217.57 243.552 217.653 243.664 cv
217.737 243.777 217.713 243.938 217.6 244.02 cv
215.613 245.482 213.736 247.127 212.019 248.908 cv
211.97 248.96 211.902 248.986 211.836 248.986 cv
cp
f
239.919 272.392 mo
238.142 270.172 235.231 269.142 232.797 269.962 cv
230.355 270.784 220.319 278.767 217.633 281.77 cv
216.239 283.329 215.083 285.234 214.978 287.444 cv
214.873 289.653 216.063 292.184 218.149 293.155 cv
220.434 294.219 222.873 293.176 224.843 291.997 cv
229.607 289.144 233.778 285.463 237.935 281.811 cv
242.415 277.877 241.448 274.305 239.919 272.392 cv
cp
1 1 1 rgb
f
234.542 270.457 mo
234.029 270.457 233.524 270.535 233.044 270.696 cv
230.729 271.476 220.825 279.362 218.211 282.286 cv
216.639 284.045 215.835 285.744 215.752 287.48 cv
215.669 289.236 216.596 291.576 218.477 292.453 cv
220.049 293.185 221.945 292.829 224.444 291.332 cv
229.094 288.548 233.257 284.891 237.282 281.353 cv
237.424 281.229 li
241.967 277.239 240.259 274.059 239.313 272.877 cv
239.313 272.877 li
238.086 271.342 236.271 270.457 234.542 270.457 cv
cp
220.18 294.374 mo
219.403 294.374 218.609 294.225 217.822 293.857 cv
215.302 292.684 214.094 289.724 214.203 287.407 cv
214.303 285.33 215.262 283.26 217.055 281.253 cv
219.649 278.352 229.78 270.159 232.55 269.228 cv
235.256 268.316 238.533 269.42 240.524 271.908 cv
240.524 271.908 li
242.491 274.368 242.978 278.414 238.447 282.394 cv
238.306 282.518 li
234.227 286.101 230.011 289.806 225.241 292.662 cv
223.905 293.461 222.097 294.374 220.18 294.374 cv
cp
0 0 0 rgb
f
230.543 284.7 mo
230.465 284.7 230.388 284.664 230.338 284.597 cv
228.871 282.604 227.227 280.728 225.449 279.018 cv
225.348 278.92 225.345 278.759 225.442 278.657 cv
225.54 278.557 225.701 278.553 225.803 278.65 cv
227.601 280.381 229.265 282.279 230.748 284.294 cv
230.832 284.407 230.808 284.567 230.694 284.65 cv
230.648 284.685 230.596 284.7 230.543 284.7 cv
cp
f
133.116 291.517 mo
132.978 291.517 132.865 291.407 132.861 291.27 cv
132.857 291.128 132.968 291.011 133.108 291.007 cv
137.621 290.876 li
137.747 290.851 137.879 290.983 137.883 291.124 cv
137.887 291.265 137.776 291.382 137.635 291.386 cv
133.124 291.517 li
133.121 291.517 133.118 291.517 133.116 291.517 cv
cp
f
945.193 84.1757 mo
943.423 89.9545 934.542 94.6236 932.307 101.919 cv
931.557 104.368 931.543 106.976 931.505 109.539 cv
931.334 120.984 930.863 148.838 930.777 160.284 cv
930.753 163.496 933.265 165.837 935.86 166.181 cv
937.588 166.411 959.128 166.217 968.184 166.147 cv
971.38 166.123 974.579 166.098 977.768 165.886 cv
979.356 165.156 980.391 163.746 980.833 162.249 cv
981.276 160.753 981.224 159.16 981.167 157.599 cv
980.864 149.218 980.775 123.301 980.471 114.92 cv
980.299 110.152 980.094 105.242 978.119 100.904 cv
974.787 93.5908 968.905 91.5979 965.069 85.2443 cv
964.129 82.0817 963.98 76.4324 964.64 73.1988 cv
960.36 72.7625 950.453 72.539 946.153 72.6468 cv
946.055 74.3631 946.144 81.0729 945.193 84.1757 cv
cp
1 1 1 rgb
f
945.935 84.4028 mo
945.046 87.3032 942.572 89.8433 939.954 92.5317 cv
937.113 95.4487 934.176 98.4648 933.049 102.146 cv
932.354 104.409 932.318 106.894 932.283 109.297 cv
932.111 120.397 li
931.902 133.583 931.617 151.643 931.553 160.29 cv
931.53 163.127 933.777 165.123 935.962 165.414 cv
937.487 165.616 956.451 165.465 965.565 165.393 cv
968.179 165.372 li
971.263 165.349 974.45 165.324 977.569 165.122 cv
978.769 164.526 979.683 163.407 980.09 162.03 cv
980.502 160.639 980.446 159.108 980.393 157.627 cv
980.24 153.427 980.141 144.704 980.044 136.268 cv
979.948 127.842 979.849 119.128 979.697 114.947 cv
979.536 110.513 979.354 105.488 977.413 101.226 cv
975.642 97.3359 973.158 95.0396 970.528 92.6079 cv
968.393 90.6323 966.185 88.5898 964.406 85.6445 cv
964.372 85.5884 964.346 85.5278 964.326 85.4648 cv
963.458 82.5454 963.213 77.3843 963.731 73.8936 cv
959.306 73.5225 951.096 73.3477 946.899 73.4077 cv
946.893 73.6709 946.887 73.9731 946.88 74.3062 cv
946.819 77.125 946.719 81.8428 945.935 84.4028 cv
945.935 84.4028 li
cp
943.568 167.065 mo
939.344 167.065 936.39 167.034 935.758 166.95 cv
932.906 166.571 929.975 163.972 930.002 160.278 cv
930.067 151.625 930.352 133.562 930.562 120.373 cv
930.733 109.275 li
930.771 106.763 930.808 104.165 931.566 101.691 cv
932.804 97.6523 935.874 94.4995 938.844 91.4507 cv
941.327 88.8999 943.674 86.4907 944.452 83.9487 cv
944.452 83.9487 li
945.174 81.5942 945.275 76.832 945.33 74.2734 cv
945.346 73.5493 945.358 72.9663 945.379 72.603 cv
945.401 72.2002 945.729 71.8823 946.133 71.8721 cv
950.299 71.769 960.277 71.9751 964.718 72.4277 cv
964.937 72.4497 965.135 72.5635 965.264 72.7397 cv
965.394 72.916 965.442 73.1392 965.399 73.3535 cv
964.755 76.5098 964.94 81.9878 965.785 84.9292 cv
967.44 87.6401 969.452 89.501 971.581 91.4697 cv
974.207 93.8984 976.923 96.4097 978.823 100.583 cv
980.892 105.124 981.08 110.313 981.246 114.891 cv
981.398 119.092 981.498 127.814 981.595 136.251 cv
981.69 144.677 981.79 153.39 981.941 157.571 cv
981.997 159.102 982.06 160.836 981.576 162.47 cv
981.028 164.322 979.759 165.824 978.092 166.59 cv
978.007 166.629 977.914 166.653 977.82 166.659 cv
974.608 166.873 971.346 166.898 968.191 166.922 cv
965.577 166.942 li
957.666 167.005 949.405 167.065 943.568 167.065 cv
cp
0 0 0 rgb
f
947.88 68.3677 mo
948.411 65.2628 948.201 62.0205 947.274 59.0202 cv
946.741 57.2946 945.978 55.394 946.716 53.7541 cv
947.545 51.9138 949.788 51.4393 951.716 51.2561 cv
958.551 50.6065 965.454 50.7391 972.262 51.6507 cv
976.76 52.2531 982.611 57.2322 974.072 58.1984 cv
968.344 58.8465 962.331 57.3018 961.34 57.8315 cv
957.99 59.6222 960.103 66.6092 959.394 68.6333 cv
959.248 69.0492 956.666 69.6026 956.31 69.8393 cv
955.993 70.0503 955.601 70.085 955.226 70.1057 cv
952.826 70.2386 950.409 70.035 947.88 68.3677 cv
cp
1 1 1 rgb
f
948.726 67.9834 mo
951.019 69.3481 953.183 69.4429 955.183 69.332 cv
955.465 69.3164 955.731 69.2939 955.881 69.1938 cv
956.1 69.0483 956.452 68.9395 957.167 68.7251 cv
957.608 68.5933 958.384 68.3608 958.709 68.2031 cv
958.829 67.6143 958.764 66.5068 958.699 65.4326 cv
958.517 62.3809 958.289 58.5835 960.976 57.1479 cv
961.572 56.8286 962.601 56.9233 964.871 57.168 cv
967.341 57.4346 970.72 57.7993 973.985 57.4282 cv
976.688 57.1226 977.658 56.4312 977.663 55.8862 cv
977.675 54.7598 974.83 52.7764 972.159 52.4189 cv
965.415 51.5151 958.563 51.3843 951.789 52.0278 cv
949.3 52.2642 947.953 52.895 947.423 54.0723 cv
946.888 55.2617 947.368 56.7622 947.832 58.2134 cv
948.015 58.791 li
948.928 61.7466 949.171 64.9131 948.726 67.9834 cv
cp
954.087 70.915 mo
952.08 70.915 949.81 70.5688 947.453 69.0146 cv
947.196 68.8452 947.065 68.54 947.116 68.2368 cv
947.628 65.2461 947.427 62.1382 946.534 59.2485 cv
946.356 58.6855 li
945.828 57.0371 945.231 55.1685 946.009 53.436 cv
947.028 51.1733 949.712 50.668 951.643 50.4849 cv
958.532 49.8306 965.503 49.9639 972.364 50.8828 cv
975.485 51.3003 979.236 53.6323 979.213 55.9023 cv
979.196 57.5596 977.496 58.5908 974.159 58.9683 cv
970.725 59.3579 967.245 58.9834 964.705 58.7095 cv
963.438 58.5732 962.006 58.4209 961.678 58.5278 cv
959.896 59.4824 960.09 62.73 960.246 65.3398 cv
960.338 66.8691 960.41 68.0767 960.125 68.8896 cv
959.922 69.4692 959.274 69.7119 957.611 70.21 cv
957.277 70.3101 956.819 70.4473 956.707 70.5039 cv
956.225 70.8262 955.626 70.8599 955.269 70.8799 cv
954.887 70.9009 954.492 70.915 954.087 70.915 cv
cp
0 0 0 rgb
f
945.726 66.0231 mo
950.625 65.8033 955.529 65.6856 960.434 65.6701 cv
961.691 65.6661 963.035 65.6917 964.072 66.3315 cv
965.25 67.0583 965.737 68.3954 966.018 69.6553 cv
966.428 71.4882 966.567 73.37 966.429 75.2356 cv
966.384 75.8373 966.304 76.4571 965.973 76.9812 cv
965.326 78.0034 963.919 78.3923 962.63 78.5895 cv
960.313 78.9438 957.951 78.9662 955.601 78.9876 cv
952.753 79.0137 949.904 79.0397 947.056 79.0657 cv
945.956 79.0757 944.746 79.0502 943.925 78.3925 cv
943.368 77.9466 943.096 77.2854 942.881 76.6433 cv
942.342 75.0307 942.031 73.356 941.961 71.673 cv
941.911 70.4825 941.992 69.2474 942.584 68.1819 cv
943.177 67.1165 944.385 66.2576 945.726 66.0231 cv
cp
.67451 .831373 .968627 rgb
f
945.813 66.7949 mo
944.745 66.9966 943.747 67.6851 943.261 68.5591 cv
942.722 69.5293 942.696 70.7153 942.735 71.6406 cv
942.803 73.25 943.099 74.8506 943.616 76.3979 cv
943.823 77.0166 944.037 77.4897 944.409 77.7876 cv
945.011 78.2695 946.002 78.3062 947.049 78.2905 cv
955.595 78.2129 li
957.88 78.1919 960.244 78.1704 962.513 77.8232 cv
964.01 77.5942 964.928 77.1831 965.318 76.5664 cv
965.539 76.2173 965.611 75.7764 965.656 75.1777 cv
965.788 73.3877 965.655 71.5864 965.262 69.8242 cv
964.93 68.3413 964.438 67.4673 963.665 66.9912 cv
962.836 66.4795 961.727 66.4438 960.435 66.4448 cv
955.581 66.4604 950.661 66.5781 945.813 66.7949 cv
cp
946.805 79.8418 mo
945.601 79.8418 944.372 79.7437 943.44 78.9976 cv
942.733 78.4316 942.4 77.6499 942.146 76.8896 cv
941.583 75.2041 941.26 73.46 941.187 71.7051 cv
941.14 70.5771 941.179 69.1143 941.907 67.8052 cv
942.629 66.5068 944.041 65.5313 945.592 65.2598 cv
945.625 65.2539 945.657 65.25 945.69 65.2485 cv
950.578 65.0298 955.537 64.9106 960.431 64.895 cv
961.906 64.8882 963.303 64.9463 964.479 65.6719 cv
965.979 66.5967 966.507 68.2915 966.774 69.4858 cv
967.201 71.397 967.345 73.3506 967.201 75.2925 cv
967.152 75.9492 967.063 76.707 966.627 77.396 cv
965.769 78.7515 964.002 79.1636 962.747 79.3555 cv
960.369 79.7192 957.949 79.7412 955.608 79.7627 cv
947.063 79.8403 li
946.977 79.8413 946.891 79.8418 946.805 79.8418 cv
cp
0 0 0 rgb
f
948.546 76.5874 mo
948.407 76.5874 948.293 76.4761 948.291 76.3364 cv
948.184 69.4639 li
948.182 69.3232 948.294 69.207 948.435 69.2051 cv
948.435 69.2051 948.438 69.2051 948.438 69.2051 cv
948.577 69.2051 948.691 69.3164 948.693 69.4561 cv
948.801 76.3286 li
948.803 76.4692 948.69 76.5854 948.55 76.5874 cv
948.549 76.5874 948.547 76.5874 948.546 76.5874 cv
cp
f
953.964 76.5874 mo
953.825 76.5874 953.712 76.4771 953.709 76.3384 cv
953.553 69.4028 li
953.55 69.2617 953.661 69.145 953.802 69.1421 cv
953.945 69.1328 954.06 69.2505 954.063 69.3911 cv
954.219 76.3267 li
954.222 76.4673 954.11 76.5845 953.97 76.5874 cv
953.968 76.5874 953.966 76.5874 953.964 76.5874 cv
cp
f
959.267 76.5874 mo
959.128 76.5874 959.015 76.4766 959.012 76.3374 cv
958.968 73.981 958.959 71.5796 958.984 69.2002 cv
958.985 69.0605 959.1 68.9482 959.239 68.9482 cv
959.24 68.9482 959.241 68.9482 959.242 68.9482 cv
959.383 68.9497 959.496 69.0649 959.494 69.2061 cv
959.469 71.5801 959.479 73.9766 959.521 76.3276 cv
959.524 76.4688 959.412 76.585 959.271 76.5874 cv
959.269 76.5874 959.269 76.5874 959.267 76.5874 cv
cp
f
936.063 109.282 mo
935.922 109.282 935.808 109.169 935.808 109.028 cv
935.807 108.887 935.921 108.772 936.062 108.772 cv
948.536 108.728 961.184 108.605 973.654 108.409 cv
973.655 108.409 973.657 108.409 973.658 108.409 cv
973.797 108.409 973.911 108.52 973.913 108.66 cv
973.915 108.8 973.803 108.916 973.662 108.919 cv
961.19 109.115 948.54 109.238 936.063 109.282 cv
936.063 109.282 li
cp
f
936.063 155.978 mo
935.926 155.978 935.813 155.87 935.808 155.732 cv
935.803 155.591 935.913 155.473 936.054 155.468 cv
945.565 155.144 955.215 155.09 964.736 155.31 cv
964.877 155.313 964.988 155.43 964.985 155.57 cv
964.982 155.711 964.852 155.836 964.725 155.819 cv
955.214 155.6 945.571 155.653 936.071 155.978 cv
936.068 155.978 936.065 155.978 936.063 155.978 cv
cp
f
936.619 113.597 mo
936.479 113.597 936.365 113.485 936.364 113.345 cv
936.362 113.204 936.476 113.089 936.616 113.087 cv
944.563 113.003 li
944.565 113.003 944.565 113.003 944.566 113.003 cv
944.706 113.003 944.82 113.116 944.821 113.255 cv
944.823 113.396 944.71 113.512 944.569 113.513 cv
936.622 113.597 li
936.621 113.597 936.62 113.597 936.619 113.597 cv
cp
f
1016.21 58.0947 mo
1016.2 58.0947 1016.2 58.0947 1016.2 58.0947 cv
992.539 57.8032 li
992.111 57.7979 991.769 57.4468 991.773 57.0186 cv
991.779 56.5942 992.125 56.2534 992.549 56.2534 cv
992.552 56.2534 992.555 56.2534 992.559 56.2534 cv
1016.21 56.5449 li
1016.64 56.5503 1016.99 56.9014 1016.98 57.3296 cv
1016.97 57.7539 1016.63 58.0947 1016.21 58.0947 cv
cp
f
1004.75 75.0723 mo
1004.59 75.0723 1004.43 75.022 1004.29 74.918 cv
989.438 63.8062 li
989.095 63.5498 989.024 63.064 989.281 62.7212 cv
989.536 62.3799 990.023 62.3076 990.365 62.5649 cv
1005.22 73.6768 li
1005.56 73.9331 1005.63 74.4189 1005.38 74.7617 cv
1005.22 74.9648 1004.99 75.0723 1004.75 75.0723 cv
cp
f
989.901 50.751 mo
989.563 50.751 989.253 50.5288 989.156 50.1885 cv
989.039 49.7769 989.277 49.3477 989.688 49.2305 cv
1009.45 43.5908 li
1009.86 43.4697 1010.29 43.7114 1010.41 44.123 cv
1010.53 44.5347 1010.29 44.9639 1009.88 45.0811 cv
990.114 50.7207 li
990.043 50.7412 989.972 50.751 989.901 50.751 cv
cp
f
760.774 66.2677 mo
760.649 54.7267 li
771.437 54.805 li
771.524 66.6074 li
783.793 67.0518 li
783.918 76.2674 li
771.524 76.0061 li
771.524 87.7222 li
761.399 87.8355 li
761.024 76.2326 li
747.716 76.1193 li
747.716 66.3894 li
760.774 66.2677 li
cp
.67451 .831373 .968627 rgb
f
748.491 75.3506 mo
761.03 75.4575 li
761.445 75.4609 761.784 75.792 761.798 76.2075 cv
762.148 87.0522 li
770.748 86.9556 li
770.748 76.0059 li
770.748 75.7974 770.832 75.5977 770.981 75.4521 cv
771.131 75.3062 771.349 75.228 771.54 75.231 cv
783.132 75.4756 li
783.028 67.7998 li
771.495 67.3818 li
771.081 67.3667 770.752 67.0278 770.748 66.6133 cv
770.668 55.5747 li
761.432 55.5073 li
761.549 66.2593 li
761.551 66.4648 761.471 66.6631 761.327 66.8101 cv
761.183 66.957 760.986 67.0405 760.78 67.0425 cv
748.491 67.1572 li
748.491 75.3506 li
cp
761.398 88.6104 mo
760.981 88.6104 760.638 88.2788 760.624 87.8604 cv
760.273 77.001 li
747.709 76.894 li
747.284 76.8906 746.94 76.5444 746.94 76.1191 cv
746.94 66.3896 li
746.94 65.9644 747.283 65.6187 747.709 65.6147 cv
759.99 65.5 li
759.873 54.7349 li
759.871 54.5269 759.953 54.3267 760.1 54.1797 cv
760.245 54.0337 760.442 53.9517 760.648 53.9517 cv
760.65 53.9517 760.652 53.9517 760.654 53.9517 cv
771.443 54.0303 li
771.867 54.0332 772.209 54.376 772.213 54.7993 cv
772.293 65.8599 li
783.821 66.2773 li
784.233 66.292 784.563 66.6284 784.568 67.041 cv
784.693 76.2568 li
784.695 76.4673 784.613 76.6694 784.464 76.8179 cv
784.315 76.9663 784.123 77.0435 783.901 77.0425 cv
772.299 76.7974 li
772.299 87.7222 li
772.299 88.147 771.957 88.4922 771.532 88.4971 cv
761.407 88.6104 li
761.404 88.6104 761.401 88.6104 761.398 88.6104 cv
cp
0 0 0 rgb
f
750.574 134.069 mo
749.786 134.069 748.996 134.032 748.205 133.95 cv
745.611 133.682 743.818 132.86 742.725 131.439 cv
740.813 128.956 741.68 125.368 743.467 123.253 cv
744.659 121.84 748.651 120.617 753.746 119.164 cv
755.51 118.661 757.033 118.227 757.743 117.923 cv
758.137 117.754 758.592 117.938 758.761 118.331 cv
758.929 118.725 758.746 119.18 758.352 119.348 cv
757.552 119.69 755.985 120.137 754.171 120.654 cv
750.771 121.624 745.634 123.089 744.65 124.253 cv
743.235 125.929 742.588 128.721 743.953 130.494 cv
744.773 131.56 746.217 132.186 748.365 132.408 cv
752.982 132.885 757.693 131.718 762.245 130.587 cv
763.131 130.368 764.016 130.148 764.899 129.939 cv
770.303 128.667 776.58 127.705 782.146 130.224 cv
782.536 130.401 782.709 130.86 782.532 131.25 cv
782.354 131.64 781.894 131.811 781.507 131.636 cv
776.362 129.309 770.405 130.234 765.255 131.448 cv
764.378 131.655 763.499 131.873 762.618 132.092 cv
758.694 133.067 754.658 134.069 750.574 134.069 cv
cp
f
742.276 127.867 mo
742.218 127.867 742.158 127.86 742.099 127.847 cv
741.143 127.623 740.371 127.478 739.722 127.354 cv
735.946 126.641 735.834 126.496 729.95 118.882 cv
728.961 117.603 727.804 116.104 726.432 114.348 cv
723.161 110.162 719.165 109.34 717.368 110.092 cv
716.507 110.454 716.135 111.127 716.263 112.093 cv
716.318 112.517 716.021 112.906 715.596 112.962 cv
715.183 113.023 714.782 112.721 714.726 112.296 cv
714.508 110.649 715.271 109.291 716.769 108.663 cv
719.393 107.563 724.1 108.844 727.652 113.394 cv
729.026 115.152 730.187 116.653 731.177 117.935 cv
736.813 125.228 736.813 125.228 740.009 125.831 cv
740.677 125.957 741.47 126.107 742.452 126.337 cv
742.868 126.435 743.127 126.851 743.03 127.268 cv
742.946 127.626 742.628 127.867 742.276 127.867 cv
cp
f
748.506 122.32 mo
748.367 122.32 748.227 122.283 748.1 122.204 cv
746.551 121.247 744.655 120.599 742.648 119.914 cv
739.144 118.716 735.172 117.359 732.114 113.94 cv
731.221 112.941 730.586 112.071 729.973 111.229 cv
728.727 109.52 727.65 108.044 724.762 106.112 cv
724.405 105.874 724.31 105.393 724.548 105.037 cv
724.785 104.682 725.268 104.584 725.623 104.824 cv
728.74 106.909 729.947 108.563 731.225 110.315 cv
731.816 111.127 732.428 111.966 733.271 112.907 cv
736.058 116.023 739.663 117.255 743.15 118.447 cv
745.241 119.162 747.217 119.836 748.914 120.886 cv
749.278 121.111 749.391 121.588 749.166 121.953 cv
749.019 122.189 748.766 122.32 748.506 122.32 cv
cp
f
825.357 104.586 mo
825.357 104.586 802.496 109.919 798.096 108.993 cv
791.784 107.665 786.789 106.316 780.51 108.377 cv
777.269 109.441 773.17 112.012 770.246 113.801 cv
764.407 117.374 764.781 116.784 760.895 118.158 cv
756.076 116.82 750.472 115.129 746.008 112.495 cv
740.26 109.102 734.49 105.108 732.789 104.105 cv
728.29 101.449 727.071 103.935 725.192 105.468 cv
722.819 103.884 716.951 103.841 717.474 108.52 cv
717.631 109.936 715.669 109.299 715.495 112.194 cv
715.203 117.034 726.071 128.345 734.927 135.338 cv
743.308 139.543 757.256 147.061 769.229 149.717 cv
774.76 150.944 797.154 140.936 811.23 135.964 cv
819.48 133.051 817.352 135.164 823.529 134.028 cv
826.421 131.178 825.357 104.586 825.357 104.586 cv
cp
1 1 1 rgb
f
735.345 134.681 mo
736.261 135.141 737.243 135.64 738.28 136.167 cv
746.474 140.331 758.856 146.622 769.398 148.96 cv
773.173 149.798 786.257 144.703 797.813 140.21 cv
802.56 138.364 807.045 136.621 810.973 135.233 cv
816.083 133.429 817.352 133.499 818.963 133.588 cv
819.891 133.639 820.935 133.696 823.121 133.314 cv
824.861 130.851 824.974 115.512 824.618 105.551 cv
820.24 106.549 801.979 110.604 797.937 109.751 cv
796.518 109.449 li
790.839 108.234 786.354 107.276 780.751 109.114 cv
777.784 110.088 773.962 112.432 771.171 114.144 cv
770.65 114.462 li
765.995 117.311 765.166 117.577 763.161 118.218 cv
762.619 118.392 761.985 118.595 761.154 118.889 cv
761.003 118.942 760.84 118.947 760.688 118.905 cv
755.447 117.45 749.994 115.747 745.614 113.162 cv
741.874 110.955 738.188 108.536 735.496 106.769 cv
734.089 105.846 732.979 105.116 732.396 104.772 cv
729.124 102.841 728.065 103.848 726.596 105.243 cv
726.298 105.526 725.999 105.81 725.683 106.068 cv
725.417 106.284 725.044 106.301 724.762 106.112 cv
723.433 105.224 720.824 104.911 719.327 105.821 cv
718.461 106.349 718.106 107.204 718.244 108.435 cv
718.361 109.487 717.709 109.96 717.276 110.273 cv
716.798 110.619 716.346 110.947 716.268 112.241 cv
716.015 116.442 725.916 127.222 735.345 134.681 cv
cp
770.323 150.593 mo
769.847 150.593 769.425 150.555 769.062 150.474 cv
758.328 148.093 745.841 141.748 737.578 137.549 cv
736.517 137.009 735.514 136.499 734.579 136.031 cv
734.532 136.007 734.487 135.979 734.446 135.947 cv
726.06 129.323 714.396 117.561 714.721 112.148 cv
714.843 110.121 715.761 109.457 716.367 109.018 cv
716.721 108.762 716.721 108.759 716.703 108.606 cv
716.501 106.794 717.146 105.334 718.521 104.498 cv
720.401 103.353 723.274 103.588 725.102 104.52 cv
725.245 104.389 725.387 104.254 725.528 104.12 cv
727.032 102.69 728.902 100.91 733.183 103.438 cv
733.798 103.8 734.923 104.539 736.347 105.473 cv
739.025 107.231 742.694 109.639 746.401 111.827 cv
750.563 114.283 755.803 115.934 760.868 117.346 cv
761.606 117.089 762.187 116.903 762.688 116.742 cv
764.622 116.123 765.345 115.892 769.842 113.14 cv
770.36 112.822 li
773.217 111.07 777.129 108.672 780.268 107.641 cv
786.273 105.671 791.171 106.721 796.842 107.934 cv
798.255 108.234 li
801.727 108.96 818.868 105.304 825.182 103.831 cv
825.405 103.778 825.643 103.83 825.827 103.969 cv
826.011 104.109 826.123 104.324 826.132 104.555 cv
826.312 109.053 827.058 131.639 824.073 134.58 cv
823.963 134.689 823.822 134.762 823.67 134.79 cv
821.118 135.259 819.928 135.193 818.878 135.136 cv
817.441 135.058 816.309 134.993 811.488 136.695 cv
807.584 138.074 803.11 139.814 798.374 141.655 cv
786.581 146.24 775.386 150.593 770.323 150.593 cv
cp
0 0 0 rgb
f
755.996 131.689 mo
752.97 131.689 750.542 130.901 748.691 128.497 cv
746.7 125.91 748.076 123.613 749.685 121.708 cv
750.878 120.295 754.869 119.071 759.963 117.619 cv
761.727 117.115 763.251 116.681 763.961 116.377 cv
764.356 116.209 764.81 116.391 764.979 116.785 cv
765.146 117.179 764.964 117.634 764.57 117.802 cv
763.769 118.145 762.203 118.592 760.389 119.109 cv
756.989 120.079 751.852 121.544 750.868 122.708 cv
749.063 124.848 748.815 126.115 749.92 127.552 cv
752.702 131.166 757.326 130.322 764.323 129.042 cv
768.69 128.243 774.126 127.249 780.352 127.249 cv
780.779 127.249 781.127 127.596 781.127 128.024 cv
781.127 128.453 780.779 128.799 780.352 128.799 cv
774.267 128.799 769.132 129.738 764.602 130.566 cv
761.329 131.165 758.464 131.689 755.996 131.689 cv
cp
f
750.903 130.339 mo
750.789 130.339 750.674 130.314 750.563 130.26 cv
742.323 126.23 734.816 121.394 728.854 116.274 cv
728.523 115.991 728.131 115.631 727.69 115.226 cv
725.237 112.975 720.675 108.785 717.508 110.039 cv
717.107 110.196 716.658 110.001 716.502 109.604 cv
716.345 109.206 716.539 108.755 716.938 108.598 cv
721.005 106.991 725.847 111.43 728.737 114.084 cv
729.165 114.476 729.544 114.824 729.863 115.099 cv
735.727 120.133 743.121 124.895 751.245 128.868 cv
751.629 129.056 751.788 129.52 751.601 129.904 cv
751.466 130.179 751.19 130.339 750.903 130.339 cv
cp
f
750.905 122.309 mo
750.845 122.309 750.783 122.301 750.723 122.287 cv
744.152 120.702 737.29 115.379 731.775 111.102 cv
728.975 108.929 726.557 107.053 724.685 106.043 cv
724.308 105.839 724.167 105.369 724.371 104.992 cv
724.573 104.616 725.043 104.474 725.421 104.678 cv
727.405 105.75 729.871 107.663 732.726 109.877 cv
738.122 114.063 744.839 119.273 751.086 120.78 cv
751.502 120.88 751.758 121.299 751.657 121.715 cv
751.572 122.07 751.255 122.309 750.905 122.309 cv
cp
f
819.531 129.497 mo
819.515 129.497 819.498 129.495 819.481 129.492 cv
819.344 129.464 819.254 129.331 819.281 129.192 cv
820.149 124.807 820.454 120.323 820.188 115.866 cv
820.18 115.725 820.286 115.604 820.427 115.596 cv
820.587 115.577 820.688 115.695 820.697 115.835 cv
820.966 120.336 820.658 124.863 819.781 129.291 cv
819.758 129.413 819.65 129.497 819.531 129.497 cv
cp
f
814.845 129.805 mo
814.817 129.805 814.789 129.801 814.762 129.792 cv
814.629 129.746 814.558 129.601 814.604 129.467 cv
815.13 127.94 815.398 126.346 815.398 124.729 cv
815.398 124.588 815.513 124.475 815.653 124.475 cv
815.653 124.475 li
815.794 124.475 815.908 124.589 815.908 124.729 cv
815.907 126.402 815.631 128.052 815.086 129.633 cv
815.05 129.739 814.95 129.805 814.845 129.805 cv
cp
f
1166.4 94.832 mo
1166.1 94.832 1165.81 94.6558 1165.68 94.3618 cv
1165.52 93.9683 1165.7 93.5127 1166.09 93.3442 cv
1167.41 92.7798 1168.54 91.6226 1169.56 89.8071 cv
1169.91 89.186 1170.22 88.5459 1170.52 87.9058 cv
1171.01 86.9063 1171.51 85.873 1172.15 84.9072 cv
1172.39 84.5508 1172.87 84.4546 1173.22 84.6909 cv
1173.58 84.9282 1173.68 85.4092 1173.44 85.7656 cv
1172.86 86.6431 1172.4 87.584 1171.92 88.5806 cv
1171.6 89.248 1171.27 89.9155 1170.91 90.563 cv
1169.73 92.689 1168.35 94.0649 1166.7 94.769 cv
1166.6 94.8115 1166.5 94.832 1166.4 94.832 cv
cp
f
1167.24 100.82 mo
1166.82 100.82 1166.48 100.486 1166.47 100.064 cv
1166.46 99.6362 1166.79 99.2808 1167.22 99.27 cv
1168.54 99.2373 1169.79 98.7637 1171.12 98.2617 cv
1171.91 97.9624 1172.73 97.6528 1173.58 97.436 cv
1174 97.3291 1174.43 97.2451 1174.85 97.1611 cv
1175.7 96.9956 1176.49 96.8398 1177.19 96.5078 cv
1177.58 96.3232 1178.04 96.4912 1178.22 96.876 cv
1178.41 97.2627 1178.24 97.7251 1177.85 97.9082 cv
1176.98 98.3232 1176.05 98.5054 1175.15 98.6821 cv
1174.75 98.7603 1174.36 98.8384 1173.97 98.938 cv
1173.2 99.1338 1172.45 99.4146 1171.67 99.7119 cv
1170.28 100.237 1168.84 100.78 1167.26 100.82 cv
1167.25 100.82 1167.25 100.82 1167.24 100.82 cv
cp
f
1172.38 110.541 mo
1172.33 110.542 1172.29 110.537 1172.24 110.528 cv
1171.23 110.336 1170.43 109.445 1169.65 108.584 cv
1169.08 107.946 1168.43 107.222 1167.93 107.127 cv
1167.08 106.965 1166.2 106.802 1165.35 106.829 cv
1164.92 106.851 1164.56 106.511 1164.55 106.083 cv
1164.53 105.655 1164.86 105.295 1165.29 105.28 cv
1166.32 105.24 1167.28 105.427 1168.22 105.605 cv
1169.23 105.797 1170.03 106.688 1170.81 107.549 cv
1171.38 108.187 1172.03 108.911 1172.53 109.005 cv
1172.95 109.085 1173.22 109.491 1173.14 109.912 cv
1173.07 110.283 1172.75 110.541 1172.38 110.541 cv
cp
f
1159.85 87.7134 mo
1159.75 87.7134 1159.65 87.6934 1159.55 87.6509 cv
1159.16 87.4829 1158.97 87.0278 1159.14 86.6343 cv
1160.46 83.5425 li
1160.63 83.1484 1161.08 82.9663 1161.48 83.1338 cv
1161.87 83.3018 1162.05 83.7568 1161.88 84.1509 cv
1160.57 87.2417 li
1160.44 87.5366 1160.15 87.7134 1159.85 87.7134 cv
cp
f
1150.49 94.832 mo
1150.39 94.832 1150.29 94.8115 1150.19 94.769 cv
1148.54 94.0649 1147.17 92.689 1145.98 90.563 cv
1145.62 89.9155 1145.29 89.248 1144.97 88.5806 cv
1144.49 87.584 1144.03 86.6431 1143.45 85.7656 cv
1143.21 85.4092 1143.31 84.9282 1143.67 84.6909 cv
1144.03 84.4546 1144.5 84.5508 1144.74 84.9072 cv
1145.38 85.873 1145.88 86.9063 1146.37 87.9058 cv
1146.67 88.5459 1146.98 89.186 1147.33 89.8071 cv
1148.35 91.6226 1149.48 92.7798 1150.8 93.3442 cv
1151.19 93.5127 1151.37 93.9683 1151.21 94.3618 cv
1151.08 94.6558 1150.79 94.832 1150.49 94.832 cv
cp
f
1149.65 100.82 mo
1149.64 100.82 1149.64 100.82 1149.63 100.82 cv
1148.05 100.78 1146.62 100.237 1145.22 99.7119 cv
1144.44 99.4146 1143.69 99.1338 1142.92 98.938 cv
1142.53 98.8384 1142.14 98.7603 1141.74 98.6821 cv
1140.84 98.5059 1139.91 98.3232 1139.04 97.9082 cv
1138.65 97.7246 1138.49 97.2627 1138.67 96.876 cv
1138.85 96.4893 1139.31 96.3242 1139.7 96.5078 cv
1140.4 96.8398 1141.2 96.9961 1142.04 97.1611 cv
1142.46 97.2451 1142.89 97.3296 1143.31 97.436 cv
1144.16 97.6528 1144.98 97.9624 1145.77 98.2617 cv
1147.1 98.7637 1148.36 99.2373 1149.67 99.27 cv
1150.1 99.2808 1150.44 99.6362 1150.42 100.064 cv
1150.42 100.485 1150.07 100.82 1149.65 100.82 cv
cp
f
1142.8 111.316 mo
1142.44 111.316 1142.11 111.057 1142.04 110.686 cv
1141.96 110.265 1142.24 109.859 1142.66 109.78 cv
1143.21 109.675 1144.37 108.673 1145.3 107.867 cv
1146.54 106.797 1147.71 105.787 1148.67 105.605 cv
1149.61 105.427 1150.58 105.24 1151.6 105.28 cv
1152.03 105.295 1152.36 105.655 1152.34 106.082 cv
1152.33 106.511 1151.99 106.855 1151.54 106.829 cv
1150.71 106.801 1149.81 106.965 1148.96 107.127 cv
1148.41 107.232 1147.25 108.234 1146.32 109.04 cv
1145.08 110.11 1143.91 111.121 1142.95 111.302 cv
1142.9 111.312 1142.85 111.316 1142.8 111.316 cv
cp
f
1157.04 87.7134 mo
1156.74 87.7134 1156.45 87.5366 1156.32 87.2417 cv
1155.01 84.1509 li
1154.84 83.7568 1155.02 83.3018 1155.42 83.1338 cv
1155.8 82.9653 1156.26 83.1479 1156.43 83.5425 cv
1157.75 86.6343 li
1157.92 87.0278 1157.73 87.4829 1157.34 87.6509 cv
1157.24 87.6934 1157.14 87.7134 1157.04 87.7134 cv
cp
f
1158.63 87.2203 mo
1152.11 87.0303 1147.89 100.717 1150.31 106.081 cv
1152.09 110.015 1160.34 111.064 1164.21 107.933 cv
1170.77 102.613 1164.31 87.3859 1158.63 87.2203 cv
cp
.67451 .831373 .968627 rgb
f
1158.49 87.9932 mo
1156.32 87.9932 1154.63 89.8364 1153.59 91.3979 cv
1150.77 95.6392 1149.54 102.485 1151.02 105.762 cv
1151.62 107.094 1153.22 108.155 1155.4 108.673 cv
1158.48 109.403 1161.83 108.864 1163.72 107.331 cv
1166.86 104.787 1166.57 99.7275 1165.26 95.8408 cv
1163.77 91.4351 1160.91 88.062 1158.61 87.9951 cv
1158.61 87.9951 li
1158.57 87.9937 1158.53 87.9932 1158.49 87.9932 cv
cp
1158.19 110.55 mo
1157.16 110.55 1156.09 110.429 1155.05 110.181 cv
1152.39 109.551 1150.41 108.173 1149.61 106.399 cv
1147.91 102.648 1149.17 95.2363 1152.3 90.5381 cv
1154.13 87.7935 1156.3 86.3667 1158.65 86.4453 cv
1162.17 86.5479 1165.3 91.1304 1166.73 95.3442 cv
1168.21 99.7251 1168.45 105.491 1164.7 108.535 cv
1163.08 109.843 1160.71 110.55 1158.19 110.55 cv
cp
0 0 0 rgb
f
1181.95 128.322 mo
1194.1 137.525 1202.87 150.502 1213.62 161.351 cv
1216.12 163.868 1219.13 166.433 1222.64 166.284 cv
1225.74 166.152 1228.58 163.583 1229.05 160.473 cv
1229.43 157.972 1228.4 155.422 1226.85 153.442 cv
1225.29 151.463 1223.24 149.954 1221.23 148.452 cv
1209.72 139.835 1198.66 130.585 1188.13 120.757 cv
1186 123.217 1183.87 125.677 1181.95 128.322 cv
cp
1 1 1 rgb
f
1183.02 128.169 mo
1190.54 133.989 1196.85 141.31 1202.96 148.396 cv
1206.55 152.559 1210.27 156.862 1214.17 160.805 cv
1216.56 163.208 1219.43 165.654 1222.61 165.51 cv
1225.32 165.395 1227.87 163.083 1228.28 160.356 cv
1228.59 158.314 1227.85 155.969 1226.24 153.921 cv
1224.79 152.078 1222.83 150.614 1220.94 149.199 cv
1220.77 149.073 li
1209.49 140.634 1198.53 131.484 1188.19 121.872 cv
1186.44 123.897 1184.66 125.984 1183.02 128.169 cv
cp
1222.35 167.065 mo
1218.7 167.065 1215.62 164.463 1213.07 161.896 cv
1209.13 157.915 1205.4 153.591 1201.79 149.408 cv
1195.57 142.193 1189.13 134.732 1181.48 128.939 cv
1181.14 128.684 1181.07 128.206 1181.32 127.865 cv
1183.27 125.185 1185.44 122.676 1187.54 120.25 cv
1187.68 120.091 1187.88 119.994 1188.09 119.983 cv
1188.3 119.975 1188.5 120.047 1188.66 120.19 cv
1199.13 129.965 1210.25 139.265 1221.7 147.831 cv
1221.87 147.958 li
1223.84 149.433 1225.88 150.959 1227.46 152.963 cv
1229.33 155.346 1230.19 158.126 1229.81 160.589 cv
1229.29 164.069 1226.15 166.911 1222.68 167.059 cv
1222.57 167.063 1222.46 167.065 1222.35 167.065 cv
cp
0 0 0 rgb
f
1177.52 128.079 mo
1158.47 141.574 1132.83 133.74 1125.36 117.1 cv
1112.34 88.1176 1129.76 66.0508 1143.75 61.6268 cv
1160.54 56.3199 1173.85 61.6891 1180 66.5904 cv
1186.15 71.4917 1190.46 79.8724 1191.93 87.5206 cv
1194.74 102.121 1189.78 119.391 1177.52 128.079 cv
cp
1154.1 51.7231 mo
1137.12 52.639 1122.97 62.235 1115.79 80.4972 cv
1110.67 93.5285 1111.59 112.332 1121.87 125.655 cv
1128.62 134.405 1141.97 144.405 1160.22 142.418 cv
1172.97 141.03 1184.83 134.819 1192.15 124.461 cv
1197.92 116.297 1201.2 104.601 1201.2 94.6614 cv
1201.2 77.9341 1189.96 49.7895 1154.1 51.7231 cv
cp
1 1 1 rgb
f
1157.47 60.2349 mo
1153.27 60.2349 1148.74 60.8647 1143.99 62.3657 cv
1136.38 64.77 1128.91 72.0391 1124.94 80.8843 cv
1121.53 88.5146 1118.95 100.937 1126.06 116.782 cv
1129.46 124.337 1137.01 130.353 1146.26 132.874 cv
1156.89 135.77 1168.12 133.791 1177.07 127.446 cv
1177.07 127.446 li
1188.34 119.463 1194.14 103.105 1191.17 87.667 cv
1189.6 79.5176 1185.14 71.6738 1179.52 67.1963 cv
1174.89 63.5088 1167.05 60.2349 1157.47 60.2349 cv
cp
1155.97 135.728 mo
1152.59 135.728 1149.2 135.28 1145.85 134.369 cv
1136.16 131.728 1128.23 125.391 1124.65 117.418 cv
1117.3 101.047 1119.98 88.1704 1123.53 80.2505 cv
1127.66 71.02 1135.51 63.4194 1143.52 60.8882 cv
1159.65 55.7856 1173.19 60.1758 1180.48 65.9844 cv
1186.38 70.6816 1191.06 78.8779 1192.69 87.374 cv
1195.77 103.389 1189.72 120.388 1177.97 128.711 cv
1177.97 128.711 li
1171.45 133.329 1163.78 135.728 1155.97 135.728 cv
cp
1154.1 51.7231 mo
1154.14 52.4971 li
1136.68 53.439 1123.31 63.4839 1116.51 80.7808 cv
1111.91 92.4736 1111.82 111.355 1122.48 125.182 cv
1125.92 129.632 1138.78 143.972 1160.14 141.648 cv
1173.17 140.23 1184.6 133.802 1191.52 124.014 cv
1196.93 116.355 1200.42 104.834 1200.42 94.6616 cv
1200.42 85.4839 1196.96 72.3936 1187.23 63.1763 cv
1178.97 55.3516 1167.84 51.7622 1154.14 52.4971 cv
1154.1 51.7231 li
cp
1155.52 143.452 mo
1136.22 143.452 1124.55 130.398 1121.26 126.128 cv
1110.22 111.824 1110.32 92.3003 1115.07 80.2134 cv
1122.1 62.3188 1135.95 51.9258 1154.06 50.9492 cv
1154.06 50.9492 li
1168.2 50.1895 1179.72 53.9219 1188.3 62.0513 cv
1198.38 71.6064 1201.98 85.1616 1201.98 94.6616 cv
1201.98 105.133 1198.37 117.005 1192.78 124.908 cv
1185.61 135.06 1173.78 141.723 1160.31 143.189 cv
1158.66 143.368 1157.07 143.452 1155.52 143.452 cv
cp
0 0 0 rgb
f
1137.53 123.847 mo
1137.47 123.847 1137.42 123.831 1137.38 123.796 cv
1134.17 121.379 1131.54 118.207 1129.75 114.622 cv
1129.69 114.496 1129.74 114.342 1129.87 114.28 cv
1129.99 114.214 1130.14 114.268 1130.21 114.394 cv
1131.96 117.909 1134.54 121.02 1137.68 123.389 cv
1137.79 123.474 1137.82 123.634 1137.73 123.746 cv
1137.68 123.813 1137.61 123.847 1137.53 123.847 cv
cp
f
1181.79 77.4546 mo
1181.7 77.4546 1181.61 77.4043 1181.56 77.3169 cv
1180.02 74.3442 1177.58 71.7866 1174.68 70.1162 cv
1174.56 70.0459 1174.51 69.8896 1174.58 69.7676 cv
1174.65 69.6465 1174.81 69.603 1174.93 69.6738 cv
1177.92 71.3931 1180.43 74.0239 1182.01 77.0825 cv
1182.08 77.2075 1182.03 77.3613 1181.91 77.4263 cv
1181.87 77.4458 1181.83 77.4546 1181.79 77.4546 cv
cp
f
1127.66 110.271 mo
1127.56 110.271 1127.46 110.208 1127.42 110.105 cv
1126.9 108.719 1126.44 107.296 1126.06 105.876 cv
1126.02 105.74 1126.1 105.6 1126.24 105.563 cv
1126.37 105.528 1126.51 105.606 1126.55 105.742 cv
1126.93 107.147 1127.39 108.555 1127.9 109.927 cv
1127.95 110.059 1127.88 110.206 1127.75 110.255 cv
1127.72 110.266 1127.69 110.271 1127.66 110.271 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 26.0.3
%%For: ( ) ()
%%Title: (2204.w039.n003.180B.p1.180-temp_01.eps)
%%CreationDate: 4/4/2022 2:23 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj4M-oCqkQ^97>p,Tm@:iTpr^K`I"9$&H21Oon+XRDg%lnc.rOrMmGmP7WloS_KnQAqZu.ICcJkp8[Q)c)oUOeRGM(Z!R<S
%2.`SL*Q(F9[VM[ts8HYKmRcXsC(>0f;(K"(;71PnW"l%=1KQ*Y)U6f3mVBP*g<F!O-i)9XW*HM(Q!,j($Wkh*]Bu2-Q-.KTX\m3L
%;I7@NTRFtR?Sn_u4TMZ#I(NQ1[u8W7ooG!b(&GSbTD5>^jsXuPBRVe<M&@<t?B7kdF2i\;D\&V$;R=op[n='nqaE?dDL4/&;,klb
%#P9]r%fNk%+/Urjo6e1*P1cYBXls>30ni+KV=s5*1qArC".B(ZU&L7"B$^SBs-?CWhedQ8'jb)n46=OC#6u1b_ib4qO`F_'fMWa6
%CBFRB^lu\T*_2KA3T#^=(Hp[#\>a&_0^)=1NG_G%_[S1^9J*l2QSK#BYV82iTY'O;QW!J-C?eBT01HDY\_0I<W:Z'-Oi`:?7DTMh
%jf%^D>&)Goacf%ornUa4.a.Obr`eJH2Di,npoRa?k8P47Mhn]?DI`?@;aG&\]lms7s#"OJo`N+\rH_F+Y+>&UQc"bn)QlfEGo>@Y
%BkK2p92i6g<!Z/"*\!b9[G9CMlGqpfG`j,ca6joY)=BFU(T$E^ZKHJ>Atc+noPpX*lr'd#V#pJ387dD*^JOr/Z_fTn[A'Zj_mE0[
%]A4j^G3p?M0odpAQ*Y5>KJg+<>4GRB=fi@R=#]]Pr+a@\I=jHBn'q3c(3>O&5IQR/Sql33Lu5b5L>"Qbg,;.&D1$*Qo'+^@GF*3=
%LM!-5GFjS%SqgpL\$`%S)MVo=L1h7K%sJOO1^cZ-_^kXSZWn!bE]J6djmYhoLGi@@piL;po=4\K()h"+8LKq59NbsQA'1_5W^!t0
%lAe)B#/'FEc%)/#<^$U`pl.0s$GRI&]c>H<Gi:U<!@drdUL^Xjd6J&R)0`^n(jKIg=]:^hRK5;D7[pM3_"98LjCP0!/S1pN>Ik18
%Jq-O%AgcX1jRlR<-Lue$^_+?O.+q/->Wu(*LDOV.*;*(MdR\$/Lu3F^"GI?T>>6.]r'iL#Lu5M+68#RR1'<K7Bn7Y8.7nHK9Ms@^
%c"-A:g'ID(!)Hpu-6p^?osRF*rI[!n:t$g(jR.W1Hjh"b)pO&eJYT<)FN/7+!J8g,;n;$9=[!]j-s`%C-5oU&4F&(f+UZI>H>dBf
%AU^rY19rGP:L7su`_WImApSiM]KAGCQQJ)1@8rq:fm?jEH,LKu#Usu.?i!TCc+RCHdu2c<"/0h]"'nO[mTjSUSDW.>^"2#q^mt%;
%Eqf!bkiq@]l]L;Fda^/`rkVqf.S]SG=n5GaYP^A?]^Pib+6r:*!p]cM+5`FZh7rLo"S+_^3hlrF-_$B^\prgSI9k]Rs2kjphq/K:
%pTOL2DT_kE?hlE;5>'42&+Nlt=5N7eneX8h:<mjg2R]iilF6"qD.NhK[p^3Gf5T5HC>a$gQ0%K>TcnmVLE!6,s$a9^5PgTcmVc9u
%oU6jgh;q3t<grn)DFjeDr9cbq[IguW#2Sf01h`enCWT(/H<(sB58dZg@XW%8g2o\`o<irsO-#+qVS=!.Y)W02iG8du)fiPb^h!]W
%pMP26Jc@D;SjfSA=%eBGA.EiQh.\@IJCX443lp3MKp?PLS&O)t@Hk!Q3I5JgfXYn;:nB>2oub?le=pjNd`H52NijrNl35Xp8q29^
%QT#WM`D1Arf`q8.4)Mt:p>_2UNBaVZi#u(=YHlu<)GF,!np'fp#0D%u(+kOu#jAO)ab&pllO%i1gG4)!fja`2d]'R7e5k-)U[uME
%fBrjb9KEm'pmMO9&/@*!dCc'2Y8B\Oe2*RHl#_]s^'e85CK\AJ]O!Kj6pc`YUr+mb"+D:e[BiQZI6IG"nb"EWEFF&e@t3#El=JG:
%."]n'HXo]\qkTpS<G,!.'0S!Oq.tiW'Kp5,QSJ,AooW'/`p_aF;H)mI8'aiT^d$&0Kp>>+(977-'<c_Lf:fVoP*3rMZrl[2f6V('
%]dB5;g9aPJ@D+Y<3h6Hq_&8koO!s7QhW:Q9,SS<6M!;ju;eW_I9"K@^qAo+=c?%B<[i%\35=XULqRsgVg0LkA_^u&\lD&Uu%GOh+
%9T?05L%h#WoL%]I&s[ds?&##-RW6Vb'MP`ld%Ts,P'%eeU)(u1b_DR"]+=:$5>BieGp>N+cJi][A5%c(n7YmcN[Y/Lac6p)dFs7)
%lR5/u5>kUb2WNMo/&&S5G-a744hbWRGts8NXa<.h6F!>i`KXP]0$huo3HV+.6$^J(#'\\9ZGRe(]]O[p[YPS1]$c3hoZG2gKHa%]
%FJ3t':X+%5VP#.@Pt-n)"_tl\`)Ym"ori[<B2:SEj':.Y+h,?IY1<a3Q&2i+Vb'9JSB]hi&-$it]n_P-Q5/9;ZAN'Lp%EM[#sG<8
%Sm!4pNo^o,eWo'=7_,T_MQm\=2bgW;fJJI*ij(^_at0bkr0U;EeQS#R=5#gl09G3M0tZ/KqapuK;\O'UBO@QAYA'0ma_9oNi(ET+
%_d_?r+0gd!5gaR\'Y%RQBPTBkOgP(NK)X'l^g8Tpr:>'eUV$!2<pr5aEQ5rH4#5-XL"k+`;&n1f<6CNVo[[;?@G+B.+'C&G34E[h
%l"02/IV6b`"De2b?oh8bo`u4,N8N,Ye3\:!biU-Q2Io.[2po*;b$scN=W:WQ'2tTuP-g)YSM#,%Te-%A(:/XdVq4PC4Ch&cZYK0_
%0cZFVd.0t=FgR)U*AXV55FC3,((l3u06=N.,,`[\JF9(-/(ZE'Vqj<0fhp76f2^ak!N19%l;4K)#l*<Wm)`nVks;jS+$OSlg@aju
%H0rBH=i_@oB2Rq>.^WrMd^Q0Bg->I&D\c7Z*&CA22t@,u#/0K4alH+f`=WX9.d%aJ8j9)cr)Wh<VuK5.?>ENO%hRr:oh/8eeRK,U
%G2k^T+DNb!KL4p]m[iE-SVI_i&Gp.BTb*9%<)]:*'!9dqUCD']oN/b,\D/O(29-W=S?M&oI08gi*dJr\mV8G(e9X!t1NWA4\TH6?
%f.TdNe9[nG]M'?tC?<b$#CPAG-N4m4KV$'dV<,3L03*p-,B_Kg[A*(K[7VHrV:<n(^(,+kjjA;=`I8R#"sK^"U(<#qUEt?.7,V.*
%f',&*,l7"S)Wdp5.l1jthN'_X-u]5XOi8e?eRGlVG^8%l0%a*1A'OmdjfDK82(RMI`ZPN^7]TK:7n6pUXXGM)h,D`9ED<[M4An\:
%L4"5fnp%37DBW)jdWqBeV0B+dGP5dj#d5&i)8)>?3GQro/lE(,=3=P>E#HEjq$JkCh>dIenAeo,jgKPSVH1,s9_EeeqHB3r=0dfT
%rp06>UZ6OXXA(3IM#Kp)YB=%`/kb;8,H=@oND]f!`I-_B2!$I0Vmk"kKh6Kgek_iOX;Ol\UNG()787YjT6).o8#Y)jO_-r>[lG))
%C@-g]-OHiFq=c+8D--E=Xo+M?E3k^\<.*R$31]0#d8hLgga;mo3YF"hA%5+IXDdh2a>K](]A+<__30J:T(_"!mJ=(NO4Y@cZ@.s>
%O[o+j,>U5baBa?<9[95OVqo,SV<Ue!Sm2W_3F>9e,T]I`G,#U3(>CuT#`Z_SPL/V46?+VL.ks9t?:LcLbL'eG1m3QLSp!=ZJ!Gnn
%RuE*_@\[PkO3HLr)0u1/*<i_=\KGf91,TO``G.]&KNes2f;)nr,]_T*dqlRDR6NQmKG>gt68Yi]7-CPWW@R_(]5m(o4;m/?]iqBq
%Fln,lB?j'];ErWu99bs8qJoMADX,D>ICZ=12tc8FNm6(?qtKl+M),'ZIp_V`^>3Uko%!DRqgUJU8MilB<SWDEPk^L*n)YY`c?qr/
%qX!A#q:/O<A7c>CEfr*pccG?\T)J9PAi+Q&INdG[7pB)P@[?$7Nb4:F@Ybjo'Vc@4gEt%rQiXY;(sJR.\MXtc+4[,Q]:<g+^guTe
%b$Uj@%r.qUCM+W"itok-dGec+%q-fA-3f9rdEK/f-4Ge5r:t1d(08jAj4cd5C1t&iQ:L*?b)40)$[g"9?^E^lqgOY^a]S3(FL0d_
%cPN=N6@K=_'3-a947d64.ET3tGJ.%:WoJb8&r#,Kl/./%Y#]DJo&Cj[7/XX&T?qc!KD+%Y[7cbCp2;[3VWj+JORDlWfk#7,-a=87
%amqCtgmtDIa>Z_nb=^8V<bC`S,sf)ki\P(96L%'/5pCSeJ/Gf-.6%u6/L:]0b]a+cQLpD`n",IbY=)O>=+f_ZrloDd#N0RM%$SgQ
%joihH2elUqY8$#iU%(=_H?fqPP0A1L7$c7CZ6Mpt-@T^sd4_J,>.0SoAF]g[9MVlIq8!uHKOHZV%9([\Cf%!JXSSO]kY"l=]$(t+
%In`^Tr+):jeu2s8$C[+Jl?@40M^;VRSg4[=@7NLYOfo]epsEoJ-p/4$r`Kt.^!r<#QJ/)a6d8<!mQ]()rdI4].`RW'`Y*D*is3M)
%U@=OHN(o"-Z@pi%:b92JXJ3YTX$t>Ij^A"BUe2=F'8if#M;(TgJC>b5s7E`nO2V&V7=@Dl8:7.Rs3E\<J!MLQIRNoU$B[o&:U1\u
%,g'bpe?%\''QF0HDSD]M%J4l411..QjeJcuf2IacS\l^icLolbn&<oI`@m]+r3"@p;@.PG)+1\Tg_^2d#nq:\9+o8Ve;;n?5=n]G
%)P^f5^IZj\1ckpq^/*k3pUfReh8f_1dN+q%0J!jtlL7bBHNN#A$;OlRC%f25'$;-'8JP!pi_i!M;C;g68L8MR7,10Woe3fjULsf,
%C8l5pE[V7"PnZ^h?gp3J=]mW)-`Y7k48&T4cPHrU8pa*4/fm`e-7V1pTDCFPFR))]rhq%=d<D_j)@Utt\;"P!=Me/=N5Vn3Z+$5O
%e2h[>a/W/:]jcJYDa+`Nd5#g[]udSU24:<7!9a)-\emg1)2U[Jc2!f[CXaiKf1?(4nGr0bQ#DUY?<-tTs#!Xme!^$>XXTOY@jGc_
%kZac,QqVk6SMc8'nQhK2-&QGecK/Di'(A-Fga!5h8Y)>]H"d6/CWi#r,]1F0<2('>-*ViK]9@riZk=\,_1QGJaraiEP,p1$VI-_i
%6>._r^\K,.-W,[nW-o;U6Dq4>4hEMP7JRs>;$r.P7f>k09#=!OKXE5Mg5eHi:esoGOsh](>)Vslf:nZ4Jm+C*U&p!4@T"Q\O\$jA
%ZII-;;N!<TdX4:6-Rq1H,A`u#6mcLBABCuGfRA.cglGcTQ7tq&QjA0@SOclFpKtQH8\>etkELr'",/,_>_nKCbL`W#q^H@*A77:i
%m=&rIn<eYnl&b]9p1^[1/$C>'2K*nkiUl-5i=n'6)q[ZTo3:#`5N\e@M2E42J*#0J7cRU6D1cQr1f<QoQ"s=/2O/(8-.fdTiK57n
%QDeqob-bd%[AZs71$g\2CIo(QM)%_e+P&G:Z;YOU.b1Com8oMMe6)Ui;Ctbho(u(f5I%jH;;(tbjX%[#J)X[\R]&*4Z;D7faA3G*
%,a=9$[77nm)^YO<X%$'Lnu[m+DR:imMpZgLHLhqds.[BGcM[RAd]m`_C=[C&=-BeVhWQg21L]Lb)_:W[f6R=*e8DqECRhH0b[b!&
%or$]$o`s=s2<OEK1M*^l7`oi;[umD7C\4(pY0dKR,U%K_M4Cj=b%a>0g5TPed<B.r4cEb7@8(cI=2M]!r($2@8f0%-jS*qKT+&fk
%.eR!:AtL7R!at@'`/T,1Yk5iC-c#B2m'gnJS1Ft#`gm2<:9+f7IUJ+u-qTV:s*?,UDj4FlQ)Ks!qYI2>+Ao%BIp<s=:mDM%#$3`0
%3+Dl$P*!J,-P0r_eN/=fmAnVKQ7,eE)FRUb("FQE#C?F\2pF%UXC4ks,cBh'J,&q`;H6iIc].ocNl6q".`B'V_+;+n&h(#a?W4LF
%V19(KIn/UQErPB=Z5@)?s8@_lju!*"rC3]!rcah2S`YF"q;5P=d#[==fdoJpfJ;"jB;/+A^=/V@s'T323T"AB1<oVa)l</tFu.jg
%I7T%2e1[<fAQ-A1O7:?8MPZXI\AC@*3)6$N)k=8!(Y)9OZi>`#p,+=dCO`Hl1npq[7TN[!7Z+6g;-WoqWg0@1=sGN"eJe8KNB+/@
%fCmD#[Z(peIC6I=cGc9fct80X1sT2US!U)#5]#</'[sNhV*3-&TL#;+l:cO]WD-tE_]LuZlRQBVQ-\``GlM*2ANf\oe0JJSO$Gp]
%c$&-;N2Q4>/Q"HCpWi]*SL"b_Y#]*gq0S7b[E/q5=iQ:9WTPN5[3#Yn,nQP;^B$<.!O,-^7S!-M5TXZM)Ddi%N2A>)"<]R]),4U1
%8O6r,1D46t]U4h=&4t):"ct]c1lWAI@n+q7d1%h*1#/8hOBkG:F#/f(%3jHnN"V8/9[_que.@c<)o[W%b(JOJ]2#7$3'j9L+a7f"
%2^(/0'J**dH[Y_mbcl*H@/<.q42,t2.G92@"R1t.@fD-g2"B>*bb'$^HjgUKclJQIJj8n5M/oS<O>#F'7/V5f+Go?YJ+4Nm$,-RV
%^n-K3Y@R%BA=#t8$\uhVR7L:dJ"fR_VTSH';3$L-[NEnWM7"u9]c&Y_#2&PPVM*k]]n,Et>^H%_gq].FeMY$gBmT[):Vc:ogqIlo
%3h,!?1m-Gg'<`?G'T)b"XrI.[S^ZI\5As"_Y2(Oer8-.<I;pIn4!BO3GV:2Z)Gr5/jE2-R'Q5`kP.Er/:W2lsP@"uCqp`1P;<K:Z
%4?>K"r;JdAoR,!7p&(^(HDp-iSs+>>R4m.jRbj)ep!?0/MC46KVB4G6?1;L*k<HdM$^.k);\(JE)`767VB4I@6i5neB'Q'akb3u:
%Yfin*Q_Y?:TOKRLEDD?CR'r,*9_>^hdJ9hB*9YtKP:UP"XS\+tD'1*`^]p/3dl>@T3(BXjLqeEZj1*o)CR:g]NV@fomj=L[9f0PQ
%k^S05cb#\1/DlDp)U[_+nb#V2f(<^OT8_K`<thuVUMEOZM>At;bkPA[AIK1G)r.W=hPaGofT&@*@N]a[a5dcD?Ki!8BkS.V6`)tT
%8^8:N67ZF"X-Jij<jV\UhOIQE<Ob.DQ,fhkXk&NBFcruoR=@GAeTPMrp>X74\0^GbOncllOW)938?DIMS,<7@3_l->O=7m8#AsfB
%(*XDu%U;P*28d3.3euVS@[DT''dsCKpRdk>R"e3<+brm./"a&`j3p9Xs$U7UjXmi/@5@Kj''CbjWgMm\\dHG!kUV2"P(ZiZ>F=-C
%$/(NANLF70q<+j/0gt#+P#gQIMI)6P@If%>0+#O.ihDcMTeS-E)=#7bI?)dGmb4(TF8p9!DOUIu*W<N:*?Y<Lr`l0/S%<Z>GAc]k
%:#3@Z4#_<F&rk/cSbnbaF,>d#s8MHAT6M;BU+GPYf51qk\N+B&9NXgXRic#9"0[t\'\EBNY*BiVo4u7"/2=e%]ts44&R/K$>&>P@
%rDK]XlPNuDH4DLelVUa0b5&p)>"V&fHG33jI9fQLCf"OtTm.OM-+:RX6q\LPA,%;#\S)o:qusp]5MI"l,BB8ibQ\;k7n\L^?aYtg
%W*K,c$M_Qu0o;1"+^`3uUV;Q^f>LfM9)L!a46)!QJ"`Blau%Cg='d6=$smc,'6#OQ7t%[<HOO<7r3oS#4\ggi:/m1Z1[WSK3sil`
%%QZ*#a0;oaFnVqMir+40<l/TsQjE+(p=Elm/l1`(Im8D,G2k\lLrS2X7$2QZbcaGG7+^L7<>P>D(I_Z"r.IOT!l+X-#FrF0@Pa]<
%pIE/LNmq-c:<g>K3B,0P9+j9aCMmC/S_?6AVqn,_d!>6OHEA*FA,%<AhHZ]P9aL`iQJM5e:MAH.oS^>2i7fFS#bu&O_G>%Ts0lL+
%IpLTI6?d)m$1a'Rl`q-Llpd9_Q3d=Kd?B75O,/E67S!`?JubB`-t6388O<LMSNr\k]em!<:I^OLZM%f??/9V@32nmi")tcl?V.1d
%KDA9-j&A#c?9'@`\GZ(Na<Zr$KXrm@13kY2Qn04(duDIYMb/$NoXb<_Wo`Jh%K=@/P@/tAF)ksO\#[t.I/`BTSR1:HqrIa*hAne0
%jHZekKgij@ZJRTd0i:32>\i]gWSPWoMb+`HQ!mc?8;Qk:`fP0h6iAt-<<n[4Ho5LL$Auk\Q0+1>QJYD3,ZF2,,UTCTI/N#jd8.:5
%,H79p<7h-D:Uq][3Dg"G%pY:&TBKD#9cPt/h%InfP%t_;/s4Y3R9%i8@C:71)\CbD_X>\HOb@/K7GFUqG)>i$VT-":<g33qUHc_f
%Nm!/FSaHCWHTJ.sDK<^Rdh]u`I'n8!X)>`.C0(du$"i8'U1^V+=gCH]i8>JKo45K>R[$KER\4<YhbEDZZH#lf9,s(*r03=9'M:S`
%B'WAN9-0Lh^U5bbA?3J_8pa"<J#h'ie=Q\jOnRtJ3n)GGZ9o]H?N5FUBAA])M*/C*=kk7$nnmr<^hJel%oa`"QYZW3YPK,8T^`M)
%bN1!$b4o<\2T`gpOfpR)oeeTkn1@1KZ7u*jDa?u42A:QJ;UPheqE7A.,F@4MI9ETc0,jXsRBk`?,tN+1D::K#X;3m)L;Yb^T[USX
%omflul][VLHp,%h<TB_LpHO"Ir[a/W%a&Yb^!HS92(I2&U==Lah7QGKk,\<9W0,eP'Vi\-W"2htBeEaFQS-5U<)&Eh[IO\'DAOo1
%I(ZbPb,>UY'"uci#>i$@I_am=)(oqiU1s/tL;En!s8DlkL[nTVd5o-G"Z2(+SlKQU<V[Y6qcfeM4DEC@7)sXBi(S/]V+SE@FW)-s
%IJhNiPPFTH*frbcQ1;`,1Ahj"n/]PjnA5Yt_ke0`*BH)B12Yoh!AQ1Tog4,d3aq;R(6?knR'46`h,AXmM-th\nt^G-Dr2M5id^41
%6Wf:(Efh]iB1P;-EI&,"5VZ5.YLu4U*48t4+Eqc/Cj[W&/X*FGc&f4#%>)uccnHKl=*%YlHUpqG[MkYSUX]GbYJ+F6HU%;oIguhX
%DnS6)cD]X0GrtZFSdi;lZo"24<_+5"LIY]%B=0K9p&F#\U(;S!#\qd,[6hJ<<EgF<(/`60l&#[qT('0YW"C.!J`fcEArE\b-rE*N
%3_K=qSVG#b0FchM_:PP]M-B^!@IQ'b1"=qq3f>Ze7L;r/UM.$krL_=[)&)gQYK'@0H2pCkXG$,sh*FT62Y3$Bi0drVfAD-`ho*pE
%\b]n0Hl(qGbu<?.k1WA,C$p)Ah=M4p9,EjZ)oNhYM.NC:Ct1#W`j>F,0M7n+2JBRVQM5WH7P<J!M7nVjB/+k_Wl:)<6m1Spi@5c1
%5#B.3XZAN(oS\g\8Gr(dnNHf7I&Sk"MY/PgoDGe!X%f)F;W5r"V2UO)G<#eg@-%/rITC6HhUm\1>PjE.`TT9>:MZO!c@iI@FZ]lq
%e&]&bh!)+3:@cP9PYW3P?O*>_?5.SN1oY0-_Qh^3)_31,'PY2$`2suK]rm8_UQnNCr_AoZ-?]$[.-dG*UOF7&Z1,gDgXj&`7oB(R
%^9pfgd#(>Qm>WHB4F!\aD0K`KHl9A1:[<7`A%:G6]#u5/V:f_73^'Lp>&l%*<kQF<lfBNE*nT[)0nSWfE1Q[Bc(?(E9#X#<ouE-:
%[Bk8V0WMV*9jP.JdulOJ5BYJYf,ISnR<j^n/P,8YM&Q%Vl/qXaX?."GqIg&Adl4dY/)+m'X8XZulf/2?Gof?_>WLCcI>K"(9#X^W
%_p,r#h/++ZQI5#4]O6"&,87i0lRKN[eLm3]`(oM.1hZ[WRRKS'S#K-cNa.rp4ge9:b)32r,BZ7%&[bLk\&S(,_!Z$9m[21!^Z:kS
%V/Q;:;0G#pjVt>.>/!j-Fh_gfJ'3@lhhLDJ#ugMESYjgd<SHR&@=nSB@2kZXMY0lEs%3$,WS,&F9d2t/ZTUIFHG3MJmp*snYI&=N
%@h:DT0&^HP;qZ>pQ9*5KM2f+4&>T,<bIj%B?F9;?;<jfTDq>4*UFGNdp_'E`UVC$4c!lM8X&L^Z1eDtqCV)MXFimB83prGP3EC*?
%;_*!6>l^X*$[)LBHis,,Ub7H'BdYt*N?%t7!0a/9DUc>c//I\hl7cu(b3dgcO*p^k,O3@lSu;%d>P3/TeFSZkV:KZCF]B_@[mo1,
%)R[l!N*O'a6Jq:b&riJ1JO4s>,8oN*\.?^,UQ*cKLJ;Kkj\ds.2-Z'o<C\"`e@JI/e`lU[-iQj3^7Z3T?74?LNs78une[HU1a`p0
%H+n6+X?!\EEr/rDGUaR5)>(S4#>(h:U+]Ah^f.r!;tJO?.7MMQf6FiEpq#UXRMOi+S)d%TXOEpOD#j?)Z>5P8`.R4T`+HJm<c-M5
%nT2?cG;6;1AX;5W@ii<HDOO/*?B=XdXF%%^3N,)/`=WFC61(i7%<Im3#3Ua;=q@.BG-_EJ;Y2fFW&SgZ".JkT5mC)4]36VlMihE&
%golT=M=p.8[[j"QVeuRg<Och+$&)QX(_m9lI;3>sf'<2r2Q<JLQY<j6DO$#N2!3&!\Z?D38#'Ea+'%q*lg$S#WIsDTnDot,<k;o#
%$:N+S`n%-?'AMVhS+DQG#$-FK24(M)asb6jJr%Q8:[4n=Yo=e)SAN[Uag15BO1qJ9AB:uTOL^^X=(BQG9Zc6,imqqKY3-bK0rE?:
%1)_%R*B',A7]E\_Dd9u7H<9[W!L2q5NbRW1VSss"eGcI?.d:*8=r_%R"#<]]X62?WC*$^pV3.(<9t?3\77fJ:a@HH=2,f!17b(Ho
%rrk_E?VQ(m(V-04b1(^99\l35:hh:iOH,LJUg>nR_=Y>grH]O_[FS+'8bo/QSOZ$(4:QT"7D;_qQ)`7c'k;s0.2o_fJ1Br5MG,mR
%:a&Gr82F=Gq,B@-rOtVikNhe]W?>e?'D38#iU,o"e1=m)]+:*feTeI3D45V7]K;fb1Y&X7Tr'"I1X5e4ftnr^P7*@J4_C0cXuBli
%E-MCBr#K'%1kuZF^Qos4>GUOk7V=*Fkc\bomtRgj2XjV`]`_it(e<sL,+,K9[<7:c_eHT0P_0lkc.B5_->$Yg<X#J@h7Xso;ISaL
%AFhdn!@EjG=PDeQG[gI!0c0QNSMO_EKQiL-57@XU`]tjmg'Q2nN76h1G3,fo09sSOPf)]/:/n"P<A,q@`+[P.$/#q57O.'a0R;.T
%/C'#8FHdekj$\o2q.c$KoiOV[8pnA@ogB%'Ho;9n-6j^kY#@$;J-I[(muCGJ_b>@)*N9+PUijqQ>'RYP1:^\I3EkliQ@!U?7\<>H
%+gu!KFTXCOk-A89/X8ID;h+R[Np-_,e=s50=3f"aiste5]O;"r>W/n<W)ZA@rDdW<`U#C-W2/7OOY_>U*MXbspO-Plc+RP;X#or]
%@NE2!]jg@)rXPdShTjaB*QO8e()jTeHtt,02&a[#l]Z9t;2#a[Vs5')dIh03B.0'Ji#tbcICn2jbJ15fNr_C[JHet\N#K]5jG6W6
%>6g-+XK/k9iSIu+Nu)CH[QA4Xp.MT+O)<Z3mW\c2n$69.MhHKB]G*6CR.h$tehd8Y[kSOV's%!J1oWgD%)9:'as1hp"r#CTlSKI-
%SK1,PjLUVGX\>G>mPn!X.ZUrC]h5!:1tA'pd#PMFFJGlAV8&c\q;^X8U#0Y(hXj6FlhTh]W09=8JU7%gDL[sZ*fsE^,p0YY%aflO
%q6r9e`X4X8N^,V+*fdG9]\PLE+g(NLXAjB?L8PGtF4?t@@Y77Q@:ORFSLeTV/8V;g"k235dI@6s-6\LI[Bg9t1#KQKS^H=ia&3k4
%=:O4-Zt16KjmqF#Tpo,[qAJ\geX2E@pB>h[H>XsZ!f1T=cs[VpFW?9piM:aP%E[,Kg)1n(eDT]JGZfi"4(A^bUJT(J*K%g!"uQ1g
%SuL7um@brVL,Cd_C:,tj6&"$S(A2::)I;F?O5FlLdc5]?BEk/7kt,5gCVb7c\#Y3[BJbL(6S2]G%Q!XS8Y7.j82&A:^^@3,Kecna
%;8_O-Sd7%h7^^aGC_kYb*T!e]IX\CD%db2VeJnD#f&XKtau%jcc.6RNOn.3L.uIsSb9JpKISmYuO:aH'>01WM#]:/[J[5t+8J>P(
%nF:g>HSaiQU$""3)=o2?>9PH4WdE50c:7TCKmLFpiB3^?nOU)!g3@?JYCd]`p5NOY=X[624(/UG,&*As8!u$dR13i\5N]cWo<[`D
%Tj^\Y8;/:D%S4pG2(gYZ`bWQlnW>d@I9O2/-Rir)Q!Pt*]Q&QV7n&9^W.tTnaL3<^?VI#=9l2^X*&_]-3:n1mp=QR!#$!imgXVmP
%%T4,h[[O5Ki\/eb%-KJ\8l9Ac!#tRc7UmDgT/fUC]gCiHeWA2CObak9HgR/N@TK;=Eqc'@Hq-_NG5PMV$Q)(AC)Tm%%!3#Zl,>OH
%#L[0"qc`;@C(+h!3(6g][1&6T/F5G^n1\298?LVAH)BDVF9$5mMQ4/;fr3D[88u)jBAL5FN=E("G6=&W*gH9h%\jO+QMH(H`'uK/
%`[H:)lUL5Ki:q*7lE\VC3@8W>@M+oT>g2%I!-lUfG4b'j;%nfH364G&dd\VP,=mudd8]Fu[Dk-W3;f6aef#j?@_[!'auu0;_0Z4S
%]$sH"NNpIYI2K8m,WK#)f'l\!PM#!lj7i&[)!shpJf%&O`d+]Pp'i_o8dIS>,]fnM/aho3c>s4D=L2!C(Fj0Y0Z,ut<npRkUhr.%
%cW&Hp&<c9#'jIU['<N(Ehod6VMPeN];5eWmP"C6Y6POH5I0mbM(q,06?#3]BJ;4!Y_UZ`X&Fi&%1;`'7/%$l&qH00nc&8*>c&^7M
%>jnOPJ$eUrZWKT]/m5?`;=Vs,0%XT'V.'p\<k"+$kV6GG'Be%7GUD0YV=N02;udC8?JZ5Yl3lpff,t%&OY9%So&D#ogAgs)=`H]?
%U.OI.CrrYeb@+2P`UB,fWQ#Q.>re#]eU!9h42Q^?4C`%2X*Y;T0pX"I:[U#TRV'3][9Dl3TqU,3d(QZ%9Up@?Td]R=pP(5DV_(N*
%?="fj9g273<SR9DD@Q7YVr[)LlA&KH-.Dsl:-m?+4^Xil]u=)45.2>7TQeGR2]X9[dbQ=Q35_^tid>=NUdJ,7UYPQdi,1pd*)45H
%l#_6X*?I=K5>AnAnA*m_fmaX;D<9q!pXbJOG@u-d[Cp[nn^9tS4&6>.XmSDgKr(p-GMe#NfBpb`q8YSiDr8:*du,;,dcij&B@?$u
%V_dtt^tm]!s47.B@FE`%`q+&2?JK;Rm;^^,Io3'ZF3j+&9^m<*;=mt&1k1>dm\?!?T,6b2mG%P^o4)5+.Gh5tgN>S[H\f0.deNT3
%@23\gr&,KV\*NZq@0R7WQOOEgS^XXYqfmH]_`YZ(akijQGL1*enF>;aSkZEVm\0MiY1,R?_-<M2]9,*YDUOGSP<[mG7?,W<qZ:]&
%2a9M$]RUfDqA$U-f&^%eh[27bc-:;[h$.)ooCr!oH#L@ljlY7$0sc"@URfZ^3tLf4lRU-`g#LE'\ZO-L3u4sm_Y_Ta>H;[$c>Pq8
%gN_;X5Ob]CHJ8"9hLVNiD#2T6fX?"+NE^=&NK5ILiO<asoimDGT(fU6i>jSdIUd5lQe,:k.h@s<SksY/iJkhm^,T1uGj"@O!+VYX
%C=)7ic=!c@:)SlU"Fj%BhL>0Li)_5\G\.[p[!t]?C`dgJlnd%j5<jH2f^JMhk2Z-dD[s+/`J='NRk(fTcY+JCnbL)N`e1>hS+F$h
%G93s&o00<aXVU@hqY[q3*i#\%A+r9-G]IU,MXsoAZ^'65HgBP>p:f]Q/"GZmpReN>D=6hZO$5cZpe.)<>C2riX'PMoD<:'IZh2[u
%<l8"><.2?H4hCNhRO_YXE?U-FH1rGf&N([,Rr?T]efV$^IC`U-G/!&4Q+,n6^A7,uD)\*RDk7hjgY$5CB?t9V5:rujLX4jqC_sR!
%e)T$&O370Bfpt4rrKZNUSS](Lc)%K14W%bmq,82YVj9J\V_=Cf2m)\l=gPBGoI+q\//p-QAi@r$hq8t7]=SUM2cf>02^[[*l.JLH
%3B^"fCjMuRjAS+Qn^8T?D<0.0LJM-Al&=?#`B3O$dYiIU5,[kNL3K$;ATt,1infC`GW37B:^`5#hTP$Od\Gsa7=^Gb60.;+oZ[71
%eb&4aNP4s9C[!B5k7\ZXhqrXo"h.Qma6A;5jgXKnc(eJ=cEjoPHKk7LHM['OLQhB$]?O.9bh;PrHKClC5Aa@0Su9i1+/SAXeuc=8
%Ic7-Zq0PodhVHiqC#;$iUk;1LFunE!StoFpUd([,$@KliqYpCc5Q0NVe,ApVPPZ0\7oaUZ]tSf*,Fs0CH^`f]Dqms'*IN=#IPOuS
%QepT&c_d<d\$P=ir7l"4n);](qI&17:-UtdQI8:X]2&3Vn`iR>V#>!SrMk$b1]?J.r[!;EpZdI)rp[Su0)b=m]ph2I3BTnM?e'(k
%c\i<Wd[.@h.t'9n4@rUT?[ki&p+qcYT*m;:Vd"AI-St#SI!]J6^:lZb^HO_DZZ,a*`QV6JTeWn/SGP9Um,lo3Cid'P_p#W_<hIY?
%Haaf'elJj?AffaQhj\o@Gl;n7GBnEiZh<:F1UI%/]0*Fkm`GIPIW<u-3@mCucFdh]*7)8UkX"[CjdDOcU\*fp=bVSo?e`#$8h]B/
%Q.c$2RJK4RNF?#"?[/n57u^`Zo?P7sfu;CmbLtu%n&_YF^CFl3H$a6`W8sGSpHGaNcTXDfoO`8Vn*0i<P9XRQG3@u;rRlgIc^ibL
%:\U2g?dC@]Sp_^3B4g`?q8R5mEE&A)A3KfX_ou-lF-j5Xq<Z)&RJhp([r1*J?//W[nG)R?Z1dP5/N<X&E[uN]qYA]pBD(o!gkL+O
%ee:-WHu!rjV0hOtDY*k0Q^QCE\)+6W*8J]?cG$u7^AI9ff%%fQqc:E'3&?n-CYu$uk2p%<mE@/iDnhbtp[ZipYE`C^]=0a!?uFd[
%5FQqHq>>8NpY#Ma\Ka?1B^YOeldadGo$up6ihqqupZ_>1_-HrO:mk)qo?R:$X5`aHb^?6Nn+\\So;`,Yg\F@9liIVPs4BDY2S].S
%W]GVlJ+rs?S*,jYk4;'aRD4R5\+A.0Q^R[Co&@jIo?EWF\!NkT=1=`apR0cOce%%0?@Q!sDK"tc'lP2,HgpOubL/`Up4rA'md5)a
%p!W6McM$Mif%$ONOG:4dgeTS6cGN]k?KeLDh#A(q(,iYQ?7kN,N*J?F*mH@NH^?B:'VEs#(<Yrt\'S<.2R@XT4Xr"cjH^8krLKJa
%M[r$/1Q.;YD_r7@10;H6=&3lj(I-L!cPB.aN\Sc;kAoM;RG7MLF=/mEG4psjIcL$jLJOG@4&>3Id@KIl[JZTI[HPLKEc0ai\LP:B
%H`'k*IClkrGk$7)$>QJ3CJSQfQ8UoFk=^/G2p+cHG@*4nnh\P$V,+]hAuRY/kgM50(J\VpmoirMH["p1fA>B?Ci5O+mMD=uG@/*L
%YjW>kg7*::B3-aQB<'!RbKFr;QBqL"jm7#2n+4`aBBAa=nqm7h?N0`fjmM\>k4!E%IIY=u/?Q\Cc$8hmjijLC3eka=4'?fr3SCre
%/!GJVi^p$FZs$e(H"u5@=["r1>7$1nmRjY\jMT.>C<Kq/oA]"i'd?.ljn$<D1Lji:HdAp'b[).th>ET/Zun'<S6TmC1sV]IY#2$H
%c+34q*?)pSpD-iSqaZR2k'#V62.+j\b<.S%27*/?i5D)]>fp7$rS'urKA'qjHC"Htg3Rlho@PN^8&"YABD/dI\8bKU4_O;[ST@$0
%YRg[)VtU#Weg((@c:-[8]\GGZ(h]\1>B9/hoB2[BYErjk=*JPiSETXJVUMnj2;P+04"WC=l-Hl#F1F=*`QJ1S>?JTngs:35pthQ'
%lOU\Er:n4b>$j;\NXq1G]sI8rg%uc'T(h]dF$)Zl/8dbk4oXs;Q%/A?](1c=g)[q2KX0:eIi7$gnt[<hbH3kBRg3_U60['t:Z:[>
%,:g-qB*[Dlr(0&!^3OuWr#"66c4B@!?+j0_rHra1CF2d8lf$mSf?n/X[<-eGK8*O@orMD&F)m>Nei#F(2qO'KhX@N\?Tu0:f#epb
%mhlM>m_)-$:SiCCQ\FgRq;C)g^!Gk[52KXqpc<X!_4BTFrOr,?iVr)`X_7Co:L3k6h8dh[&+4A+]mm9\m*><Wdl4l]JHtjGIK&3r
%Epi5OK>#;%L\pb8K899)],M8"omHOJAcM;CUTACkIWVqNQ[Vo8>h-1F&+?^-G5c>-]30N0OaVNFniZg6G5cO\p:[M&lf%GYAc5cf
%BWQ\cIlt>LD\SLNQs=7lNh+?s3tH@%Xk(tVq:XelNE`U?`=7<HYIX1F5EjcFs7.qW;?+.Q[(.slTX;6Ngf`E[nLgBg/D[;<hR`[V
%;fc_kjYGWFMlpB&SaEnTO41.fpE.#j_2$(cMgH<'nb]l6mc2VdMiB)Rpal/Mj.LDbjONASK-upGjbrN<a3PfCB,;@KD81="aDHD6
%+#fcD[]R6@&#.aRVandon"3pX6k>k@m([C$]Dq$2aYWKZ65#ldf$6V/GeJ1ueACTf4%HcdGBPT7hL=0a1t*ha%nc/uh;]:tC\Q<S
%>'b,/^UW(BHCJjI?FmIiH^/sH2YJr=>AO*T*t2rbm7dEFro_P,gBZ;@IeI1HiOeg"C$S.PH2@Jbqg#DGRsD^i0$M]scd.rj`P[Cp
%"68mErQ.8d$!&)g<q]i^4^*^)?Q;483BTD"YeO:):=$RW3Y%/lhE*o'?._BUBUtd/\5PATIBieFg$4JS7us7VBH43]S[]d0RjYh7
%%sCaok;PW=>[0L6BUG.>Mt7`<hZS!V0,s'b2IC`*hLBjZ^U16=lJcQfn9X?Z/cYL`q\NnKhnQRN2sG_Sr6=NgcGMT]G?8Qu.[u>X
%Dp@n9S[Zr3M[s`a+3kq?>J+<6^WXlehRn2Z<e'U&rB<#5_n9@2><R?5iq_!Iqq?&Cs5;tOfamuE2s28Trgak'R27M7:U_-6s0V:\
%Ep;VYZebVJX.!*35J1hJo!c'RhW5hC3dI-CoB>*\hqgPAI^XEEE,]tu4?5B:gc7GI"FI6a)Q%K'1uB'`caNF6n*\/miq%cL-rs+"
%/k4,b_i5/o^KHW?\[B=rqoS$<q>SQ=mIRCM8+qXRg"R>?8+WVp=3XqFdXGM.]0'2pS6VA`)NBpODK2fNr5IsU;KZm_L?U)STWnCZ
%khT.u;uL2&r`(pb/mb)bAGrRkVg?()DtA6NIbcoWb06p/K?Bs98!V4%C[5^-p-O#9\p<%X="UKjpM5!O9WRmZM>a`'H1p0&h(n\:
%lN]qX+7$>2oMZ[jF7A^Nqt]>sI\r791K!10k5@m3oT&s]\N"dSrni?G1h_DP]>=6`WJJspU5RZ(L4+:0c/BF%<-.srG*=$"0$;.h
%VRf80^\oit>!\&7>YM\Ym[X7M57?6b?Zj%\A^?g8q*>8c?YjYB[k4^XWO:YnS5SqpSZ4#1oFs53neI1grk]qdoc]YjNdo4sY)hLV
%5:U?gYBJup46k;_/,e`.N<kLHFJ9cNdcr=L7OqiZ-qC>==o;.L#%hQ*cn#tVbkl/1L9G`u,^)aK?c/58*)>jhOM4akii1O`mHU$c
%\``83rm>M@C=L$2L=K;95?u[p(3`%B<GGhJ6P"S,@D5iY2nMla^:@>ZoeOPTFf;GcQ@@tLrU_X`AP6Cjm:lraj6,ellHl\&jbGJC
%pf!&'^ncc[\o@@eiFI=;CTAZj\_U$F96>9Da/Ct">1#XRhM:_t4P&ag^03'XNSYT)Si48+XKDL]=F`DdT<Wh!9eDihRB^V`LE(=C
%%sPoPWTDLO"EkWX!!ur[-A[pA4i`CF!^G_u<iR;@'[4Yn^+9.uM]Up^)'^uOPTAHqf<kbpR_FQ+G2UdnB^B:XbW&W?VX2+@(qrQP
%U?8ljJ=1Cn!1]#.;R[Wgo;t[t\epGSjjSTocd!A6kVL0J4=b!T:<#2/O$!33(NN$4Sf7AV5MgI0S!mKJd,GoG)*dV(U(0?AE+9H$
%["=6R\5o]!D.F&&TS\@l-?)[DAQsh?7k^1G0]Ro%0-+bt*L#+.#2Wt72Z8TRZSsHSgbia\Ars8;LE95IVL<GN?6+V%:5HWEP6l*C
%_7"#a4HDrh?'AStoJkUN&/OKqH5Y&7D!pU-1^Lo[)F($![Vt*?B]]I9`sK!sKS!W@,.)a+@0Em&1at*=+[T@E)W.5+HQLbdFPMgj
%@"5d2gWFbi^b_!:9q!g!iY]&YXonTm%.0[Z)F/U/<c*'7hfC_2oW:j?Kf8W<GT*.mJr4Esbnuc"JU0^+N_S$h$Dr8;R+aB6>#KlU
%g(0eo@G*1bA%B6k6n3qF-)Y%A@9l/_oF-M!d.%QP[YsA#QgO?!Xr$ZCg:/Lki9_`O&Kp'<U2/ItU*Rpi0nM\q'Vd<d1!R'mqrL,u
%"6a6(b99T2QjJ;Y1h\?^9p:lF+LkWbRFj#D?%k\60qk;-I9LuQSdL;:""gaP$"Alm3CB0I9HkV.N&@A1n3A-b4ba9K-an$t>%_fc
%)k)Z:LrBe.".'*$V;f5)["Zn`rr\"/#4jCjeFJ8SBK%K_27]LJ'7YS@4k#Tb3M$6P5l@H\ehr;7d>pKPq17?("-4gc7GGrq$3E`Y
%L<5%"#iG2(OZ,1SOas#jJd4@OJ/AAk):tRiAO0n[!^R"qrC@oS6/]o&i'TRO8e72;o3E%.+Mqg/b:Yc68@TdOf!K+^6t:+*P5rBG
%!@<oWo^+U@o$e(i56[isfd-8.@f!m%`\BgQ.$6`[(NbBV?M'X*4NB.dOXCdtP@XtdP1^f^qjBppOqCMPTESc&B@,fA0hDt5KPK^:
%p(MR8FKdSX?,I8Wa2]@tokFG_hAp&Da2W_!&.'Jm(e>p,07>oYa!4aT5]mW8\A6VdM"rWh"dR3b5oM.]5[s:r=rCDH3AHl`:d^j7
%T/\JN%gIgqOZ$fdK:^J%"-V=Y4Ugo!VKH;JXaq&W[%*_^H=@.FBVMphSn#s&#\^i$/@Oq40*),/#Ssih>(/^f)llU'_E4MR=r(.i
%JA-tTOU1"AZn%kg85P.n#]7t$i+ehu6qQU+Utu[q`qk^,%V03WKTTdPK)cf;,S'B.V/\&oUaD\3AK<D9BDiQQJY6sKU'+LV^)*HC
%$\9-K`=c=($j$#l7p->p,t4T#7^%WN#Rqta=`<;>Z3NdH5iihH.j@kOoR*SW,1jX)eP&N$`?7>9dt%QlPDI.3Td`<)$W4.OA4p0C
%ZdsdBp+9W-MaMh8:_kEpa*<L"T`uKC6@M&L!d(Nf*R>30e.$9"G<AeL4b8PWJIJ[D=>Ztj7Yl12)@8uUE''3p+d8'bC/Q1G@0pj>
%=f@@fNm.MKCLh<0Cb:b]Q61n#77d_TZn<i],mj[f]#8t[Xc!YRKP"G30mUU``WV]N8>+AO&:,s`G(_Stg-u?@_3#jH-n%EZ"tWEG
%UOgIL$-(]NLJEQR78jL5(k^`o==&isD,rQ.mQtd,R.Dnr+eBkU$kEb9J058RH(]6\'*u0+N6e6UFhe"Y84RcS%CM&e,QbIl.2o9J
%AjV6L=HG0/"W@bl$EH3<Ydp52)c!@n1\:f@QB%ob^i=a9L:(NfakMU@9XU;lFGMkelC^a76s:-)e,b(#$Os*:[P)i7H^;7jI$l-d
%fO7Xh_WdKt;s)Sfs8M286ko-5&mf<]1%jfX_a=<jrIGCuchK]Y$_(qab]tJp4ATK8>PDrnRLn2k&[k'f@%%E:?pt+%Par)g&dg!m
%,l2-raT`CoWWTDU-o9fl5W]&L>%\5L6`PYt*Y75H#e.@<&)g#$ZI.ISj\a,X$q2UJ?D..XJoKY[5_9h::QGo46]`E&B#?5%%lg^W
%W(WfN-!/;_H=.$Y"/+$64>gp\9@Hm9$;Z]+*F!H`D6lB#LtL/"$!=,;Z;,'>Ld[ja/)o6>:C(]gHL])2np"+m0[sER:tc#[Vncgt
%La:[p$F%Tb#6>Z*iGZh]_j5EG%*5+dmPQ-Z4k]ub"&bFS#kB@Jmm-#W1ak`sUcctb+LVBqbCuU.>rKJ-+!"Y.)<J<Z9Zsd\i%m-m
%W#8nE!K/9P`"GFGOh;?qK=0j%b"c,PC9q@>S"Lc-.hDK,pkud5)o`!6po_-0TG-&k43hHH"?kD20Gl6:O3,4'2ls;pq:`S-cN;Z=
%=XucLn:Hj<5gppZ8Eb:,+nIj)lOW8Noa=l0\sTBKr;qoSO_56BMK*'AfHQr982SlE$%NL;TFnsB@7ai6"CF=0'+JBHo--8iWTi/G
%'h3OYYQIM`5k;m+/!s"@T@\t%Akt>4nf>E>NWXGJo89o]aa4W(N[Ib_liAnbIJ5+4j_.`;$8MA0j:aR@8$ld=&fM#W+[KN-Ue!SP
%@H@;^,m5o=[90ZY@-.H&ON%i!bYT.^h(>KA5KSU.(N_]Ad'C#\C`EGl6CO4)#Y\',Ifa`XgIcS8[)ht1QlI)B!F&-UGQWL!h.=4@
%<<G7t>#f?SA'^Q6/Q9aAa2O9n0L",Af4T[\!uA1B90BF.J4(r];VE`R&2c^b]u/n2^'EJ_jA]kLndThK,XhcN!G$u1"R.$m+gM6,
%JjQS9\WeXQ/5<Mq[j!KA&KAT-"*opm.fqR1:\QYNk]A?tmCeTC92\.on23d2fhc#skh5J_d?:<FG1g?&1=<Ds-DD5.gk"<pih2RR
%'(CJc$b4!5klXhUQIoT%gng]n;N#l)2P,e;`&P3aCH;mV$H>mpr'hV,hj)$;JCQ>V)5/`!=`I'CfOC0L%CVI2ha"<Nbm<B<PAG1c
%<XhB&g!\ZsKm0^;40VlAYW`[7'dE._lVE7[7ju1XF^ab9ZEt5NTmcMq=,%)O9)1g<C-9qk/rM?&%7T>\]\9#k#MTX^kSPM!6U9-Z
%fd7mWO@:5COfW]_&&`ZI$n*=R3)_5jAf>E`9<2mGZ@aP8Cl>bOKYPjXI+.(l&r+6?<Ck>78g!,0EI8>V0@(B<CBUer#kC1_7FO/b
%%YJN<M"h&F3Q,aLknY-(qT]V\U\\f)n(4(;(pY-,k(/Cp_'n6$TLB+tB-7J:",U+k#E"ef0$LUk/7j+0"?$^#o(lli6E@sQF?MTj
%51q)c+=c#SGn@4>0Y&Eb2\Q&\1`mkb6[V\I=+oqE*j_54?%ER784ON]@!B-A2REPu4/iUWM;@kF-!Fap:9GO0ft7<&/hp'h:E7MW
%"5-7)IBfEtd1J6D#fa"S!O3gK.q9<16Ta&,W-pXt&=eEXDnpntM+DI3dSVmR0R;=\"8$&V.[&u*,/cM2L@nsm!,Es[UN)U$-[CgE
%G`IXNSqaDdkDVYAR!`@MO(UFEi#*N_,)A2e#\'5FIS;S+,"BMuFS(l^`!cc>]>@DG)rYjuI$)*OK8pq]+-+ueG,V3j@Q:h918@!C
%VhAHThG[INi&@8VPBDMU\s]>qF>m)3ZLqhnMD8mK[QnX=g;>U&&OR]IaZER.[iTn6`4Z@*>_M<h>BlL2%=:ja#Z26.T(]A/W"F?_
%+^3MuK*#Ua+O!7.@_q+!Yg^aC">F4F!:H%Z8i%DslbNXEUn`_?"X%6op6X#HNcTS<bUT*9[#ZaFF;?I>-\5AfdZkqA$GnV7rJ<gM
%KRn/t3C6,gY+b'H*UnZb!4b8@NVq+aRh78bS,rK=UdqO))7IRkrgL\6#9cVaq@`usO>$gnH_`I&V(r=2,u+^s[C<ROB)m'OW$^:Q
%a;SDSS-U<).)MM@"c;pSeI\g;\?sB:0l/*nRiib_'8mS1/+#^-WAOdWEd5HFPuS%-`iJ;J=NKX69pf(7ln.E^-cEr3AS?D-@\SCH
%VI^XcQU.U2.41Z)F<*FiBb(e=/;+DuXu*BP/578r&.&n08O@GS;\pTMAl4?VR]BmXC_nM;1VOU]V.IA6C^'p!'t_dZ%hJra6?PH`
%!-(-kZaGQ`+@kEoE=X(p$d\G)/iqEr*XBqN4utr[D>3kiP(sG)5'h`)OVrAj3JO7klAgcD+D,6)4`j"Wj_6asH3!]]p%hqc!&h'"
%`a*[SPF91s/inPo^+fjUK_"&W\8oq`I-E$AG<-3pg+_pd39Z1P3I:)26)SFQbLLa^YOBar%f5pra,k('#h=OS-`/G7!\;;D'HiQH
%Sq&r-<tE5)eQTtc0]F6*$,g#d,kESn%I*/GN%*M"C'ObK348ofRf+B?:,m/8aT["PoRILY;gGbfe.=^lk'/XO^7jQF@fn"(\dkY]
%.mPq"p,"&j+G#[Cj1:oY\6ULW&1.uS&kQUj!_>?R$%E'7d'Ppkf)TCP_QYc:+H+\t=?Xsl`^''*N^IA>!Zd!_mTJGuk'f5U&C:.Q
%a2">_<*Y3/H5d"nLu\Y`2-nM?&]i?B*u:R0@CH.Ql6-2I%:*'&KHh$!!_sSG5FgEK;X#%I$H1+W]UJ4D>&NV6R@H)@*KM.*R!C1T
%m3%^1.4A?B.=aB)bC)C;`#t!0li](r0[tM>^B."CPOp_8cN3+B,j#[IQ>-C3O3<bRT.gaKMgUTdehLTAZ^V=R80SB>!TtMLm6[Z9
%!-LD2Y;&rQ!(lf;[d:]>oCM\ua_.7AM.AC>q2.GjL$/L;&WI$Wj01R1/C%4#8_p@L&%I*5.ps"\IKpMaB+R(]5(e75`m@^0Te1F6
%6#@ol6GJ]mZLpspcmk`>_GF=2=NYXd`u5/KZree^%1la"ga[8B.pWS!:f$e?N!3,hid+c.\?NDd>RnY+81%$1`o,K*VSZb8_LYE.
%1pY@kjM0abGV'A9<WXc1R9/%+'p`r9c_C/Nc;3>IX>&6EY_Y"8Yo,o9)9X$KK+R5Z#\ujSV@g*;-pRc:jj4GHOI1"dfr/B*Fqf`p
%Fe9C[Vig(q*@3=8,_7.S)SeEI!8ED5YQSDPVXA(V>\aA&b<[@88gG7)35l@=(V^5H%*&on(JZadL+!o$0,[l`/2i6l=f]tG&-fF3
%!rILo,a0&ZL0DE^CeOs[+&Zmm;$,R?SH3%WA2JNBY%-Zun\2.$l+>7J5%!X#^liXfTT0]*TFBfe#6suR>j_a3&C@sK\`9WO%ELcW
%`j44ta)tL+q@:PH8P$G*3tT]GidVoidF9ApP'5h`6`pZf"FX6L"$q=dksg)#inHnNf&qcg@&gBJ3q>,JA31JJ>8=Og2!__FfWup_
%:mNI<61bLeZAr)e,I41U"UM&LC^brlU4i"u:J#@YZk\CTA5&"P/&*0?#7bF*&nG',eG?pmh0V*EkL4r70jg6cA6DplEEN`]LtrZr
%!JE6oVP>*poWFr=7RW+=&/<2>GQMi$'f8F^5_QPC@t(j=BWrMBRO+%3Fp)V(<H)2`,u8aW*hpkSE3LMXV5l9",oDn7Aa$t`.L*F]
%9-]W.Q&7l`"!M&T[[JlH]oF_J@F60!3[X+sY#6q>rc8:ndic)T(h<fIZ6VfHdoBiA,01J>&0`=Y$Qe2kT>'bbV0,1ij"%lqZU(0'
%K//3A>-'_2XFGa]U<,=1:3)A+3CCp4Q#NpD\OoI4[\9XN[62Q4-28YO%2"%G;p18A1-JZ0B%uF[T!)&d$o4C!@N%S5)Tj1`.u&@9
%Q@$<K,pkskTl"Q9>r!H0neHss&>pH\(DV[0M^SC?)/@;,R<2D:U&o$E;0<MGY*a6kS2!]?'R6'K,usSi7G#p?5Y]/D9#hb4.VYZL
%%I;d%T2%Lf<BO#Z,;k9T\Vbur][fpQf/sXo$uuKHj9@l8X=*!S*I3HE)r&iX--0>2#Wr4>`P++Y%@%VsoHk..lp?W1L7Y.s!mTP4
%:ah&YZ6)^%GfWrB9bGl3".t?K[7b2S&Q8fTI93hN%9#&P^f".&0:&Q]Gu[qF#u^A0!SC(2h6<sY`]urt"j2NJJL\fA+QX,[4WsCi
%9l25$)Z$o;(#h87(m`()5t<6$]Y!WG9AFPf:l%AA.RkQA6hkZ(MG0`Z)fsfd<V[EuCN1Ad-h2"RW"+$9^nUU4^@%ot3h!5SjsCe,
%HP%Kd5'e,>Z?IY'G/F_iBnu$qMRA(7>W,&.&.l-%9SSp>&4HR(EWQ63JdadgGXB>Y+eV0?<B5:3+UVBss,DCLeGa\:3I<kQH=8$d
%a)2s<UV@T4Xl:Z3f/b&eWNpIDoIXf"I)<`iD$>p:*Wm3=_-Jfr4eYB`)4h1SR;1'1^T^Zn%Zqo8Bo15Q8YuOY9IEeN_P+)H2Ec:_
%+:LSDWaSb7_"nlQ#WuJBC[B'>Q'"0R!@>!BVJIV^lAMpjSDtb(B3<k9QBW[&f)r1u1NYpLO2A_`2aUcW&D8cQ2[C/_KJ4@T=q-2]
%Ja=ciD&C.X4!:5Wr.V)::t/lD5LFn!9'Dt8Gc2W/`N7c*[Y-#)Oi=agoajA6+?9EWiDaE&k[M,"Q+:@TiD/Gj(0jOf3^1nca9bb:
%f>H]j3a+EHWDCW(Beo=Wb^f:TSC\#YThsEUbBKeUcXR`Da9kq(8r2OC!ZqQ`2]&dk.etd`B_o/&N5-+<#]*Kp&o'KHBe7d#!+JLm
%dM:#ZFV%?<.+.^iNdp5tDh*H\Sh"4L_bp437q*V>X83?>B-EI4.DYX_=!Rj>!oYp]n4;Kg_j>@N`q]&^*B=9i:5pjTMNkluI$"$\
%EZMj45r.NCfo[VG8Ol@`b2A4Bif6d,c`9T2#8fJZX94X?E!8eN=urEe=ZV294_CKM38T0:'8J`5IY2"Ofce7rP_L,t^;r\L]i2.$
%R/%0_6&]'.">^-N)[O?&/Y)&tnYB`<rB&J,[@2IaKrmP1!q!@'8B$oA:P'%N;CtFU\SrZ7Z[>bmA%Q"9+(Aq0e(V,EP:)NQN''$A
%dmtk&,^uYB4;\;Q3G'ASOU]G)kgJ4;cpGNn:dci956!uP"_uluPT3%MDLn`]TVRJLBal]5l>aOk+RCFrH7MCKL(u*Qg>eX+cA3H[
%ip<2qbNTP"H3ifj6B3%>#J`9`SEC#3Q[=iJ!>=<Y1?VGQ.NoLV#Y+5pFu#>;j[gB?EGS(NX:9QA"*(:YC;H/dngpWXR$'c&/>1r!
%b$ch)iH$&F>jD]N50elH<%QWbGrfX,Eje6=H590]DA,XNQBt.=q8Br8Og)6i%N_.W`a=6oI7)UaTJ%)aX6L%K#,-e(f,86=+ae;5
%VR.Olg(oSi^'0FdcZk,CIMgTGMT]0!ndu<L5SEN8fEIpmK2N\'a%3A"/Gml(VAtA"6/u[JQ+CBp(cW^a+t(gdapnQk#;K?:+9n*0
%;$iWtq%>)=k@Gh<_4a7f!R$^Z6m!jX5ZAU5Nn[Z61VpKB>#KUJ3YUIlaf26I\<14+UbomW/.ppTh+FVcQ'0H^H3)@/_*KMK`1cW<
%OpDiJlm)*?MA->@c+3>_G'%k\<(Xmd'W)03YS<]=e0cViQLGts*2jTkh6-ZW-dp(9[2;'Uieh"X8'"r#+D4SrOa7@68\1l2/>A*?
%iGJ4TFl=U8@#,Al$TpGC@@3R;1m#Zbjb+=7C:5)u@53IJ^9+Er\[n"/OWd`q*]AjH(c=O43]60%Ji1aB,pD_\MC3`^S6-]QbgeET
%'A;N*T"3h"TE#99nNdtOj)RnL_eFiK`^rJm.Mmom![]rpL@!de;&\$4UlS3ZiusdRll>r`1.ml&[O3<(TF&,W8nR%/Cr3`GqpXlt
%8uY&05n%^KJT/nrnPR=4\1C#Y`s-SbgRIrX;_ebQENC"X"fVSiKLco<_Vg*M^em!"I_a<bdHDf#WV/j[%ig#7"-dK,>Uasj:`RCT
%)!>U9$##G@33&V6WZt5Cp7jL&`<'/J.N\&`F@WH`kQ"8Rqclp.[mBO*6:1m\^b&f'Aapp0g)<pP0uYZN$5i%rJKKYbnT6dt(SK3F
%Ks*#S&O7<\<_q'3R35<VC'R@kOX4gZ*`,i=6sApi."uL6)Cfb8PSooU%h2hif!q6)A]XP'!M=`4]B1<(Re]R$_-F?@0m3Vg!Wti"
%=6t:uq1NSDKoV&FJ9Njt^75<02mZ!e_N\,U?\,5C-F7#Y18.1V&c#i=C6QUA#]PSl.0a`Ja"\a77B\f<>`XrIRAm3cUbKhSR>fe+
%3"a?B')%P_3frkf4CJjJ_lp8fE:M\,3ou,,W">T=6=.+YaE0hTVc!R:.+8j-<rq;1.tE!`g;cO9a6D;*&nS@R>89eXWfGVm_Z_+%
%KUC4>>@m1^Y2b\o!iE4^4:Si\F`a:r/Z<T`]b(hgO0o)<=Y-^lkVbhXf`nK\I!Q;2&*K(W(<kD@b`33Mo"blqUK=/Mc3),]"^;_6
%i**0XJHETU`FMjYW%7;IB,dOj*4CGb>UT^dkC8bpmkM3]bL>X*eE<4gCC"GWn](*!+H?iWBSP]g)fd[B4O1rT&M18b]O4X+3"i%b
%*a1'X]Rg#h,?3_/0+9BuK2:S'HoN0'p,hHDI&Z`NCuo2o%Mo5cGp2O`SGZk.:-L)"j`5fGBM(iX8JK4dll&$I&Uh?9`sgRa_mEc?
%E&bcF$li]0YClm0$@`L;d17DH6.QJ8;>ahl.0s9GVE3r"=:T?`WhG8[NWY'PQA12\P<a<$QifW*eC],.3r<\[GX=6,=W7Xj_8-9g
%Rmh^#'1?t4(IZ-h%jYMA^5`@jX:SNa**5UD^5&[iOS6WO4=hQd\+j@&4u(4Qkn]r]6.JPENa5ds5?UZ;[`*V'/Sh<K'i#H^boraO
%Mhh^;NR'f#L#@P)aSmoB'+"CL<JlCG5$[Yo_8I/!h2k;Q+b=15/Z&#%.rGaXJA&bM\I8R_U9k-kIRuYn4au0"@$l=0mFp\<-FBq#
%YLs`!,r*`s'gpYDmm%b$]DW9ViZ1ij'-8CV=CT_F#ZN#!!_#'UM)*A,E=ocnX8<]8%KQ\_P&2)4[c+s+2<SpJ0N=QQRt_n1_.kHc
%-FFWc.^[OdeA+u*c6a\VTS'Pfk,@SR4I)JW`c=Y*&e]SD?K`S`CC#r2le(3c6k8t/?4ioN\liH<!uH,`JNEA>LZ1>ICVd2@?RAsj
%\Uhj9\I.I6')fJEJ3(L$62:_sb*Yd<i'%.qQ]j1XR3<rH\SnFP!5oSWV@GCCb@a3t\J>@(fmL[O5%D2+I<"DfB0(\06DP$G<;cp9
%A[&ij5ENcm0rSg0q%(\F.TG'f7(Kp^(_.XKTba1t/<D#@k\7;Rl5<5b(4/WTQV-:MQ(sNX?j@?Z;GG'!A7XYP&H**3XtifjlIe'g
%0aVH#?B,Cb"E0CFb<]lZa7/BRCc.D7G)eJOj<fc%!^YUmmK#k!EOK:IiX\?a8No>)D8YI#_5IIEk):$'Q?Sr+0RQAK[BmHC"_*f/
%6A>lf*#r;D8.!3Ta$?#Z9G'=oSCpdQ:laD:]]5F\83f@lL5*Fe'pW*\e3,g%Y7jm,^j&kp&OE'Ult!G_j;WKJ5bXqUT^+A*K^+Er
%52sPhQklhkOR+:sS1F/k_a?JOb9]#RD&:bWR%4m%OFMWqbCC'%*cM"gZ:)JHf;Wj,:IVQpUja&JOEKP<<L\C6#b,Th2_-K4'u$js
%KaBRV:0dAp+YnTc%lhE4Ge[Z8=b0JX3&\me-VOo4pOFP0QVB-"mhimk3g([sLu1cRT`gW&aCf3<WH^:*??inm/]j",X901_-gMiE
%q,0o*`Q]G4ii'8=YT4P041M2BFYTL2Z9.7$*3kHbjO;.=6<&4A#cHkHA=aOAJG'S(<0aoq-*Na$#JuSE!nYApWJEMPRn8"4OY;X7
%FaDgXTc@%OJYG9YOMcbnLWcq=;GhXdCF</J35<7A#I+#OP(CT2%4\Vl:rgKp(o@oHD"]%h`FV7BdPW-i%7k@;EbPnRQFXF=+K=<c
%)THaHdp.;HPbChl3WSeU,'O&\!'pAH$iD_SS+4W]SuPo@l`9V]+;<Epa;@=R)'lX>ln2YEm#Y!rA%1*V<>6Tf9Mfmj=!S>J'(jgj
%1Gkp]>]CC`[$/(eK+nTl&s*Dofb^]>:F^p],R=E&^tufe,Lrb%Cc3kI(a7+9X+kX-&>[E="!e+j5f8WDGNB<5-eEG2d5Zcr%:]@l
%Nm(R>2OM*]^N8ape#<aUG:aB/m(cgF#4WDV3AH&a*g!D+DDQsCfjhKNd)S^G?gU'CVP8N=1:p5'J9"L<AA')]8k9e0TIM,$p*n;S
%H@F5GjDA*%@I?DAn21q3'"FA=.Rq$-W4J4L'FYC!GN3gt5m:+%KFG`ZCS%gD6qEc;TUWj^lTNL^VJ9`K8so1K*4A-mk\V7nMo\0f
%\Do*:cuo]ld6d/T:pD/2YU:6HE*q+PWA0KZJf*q9iW4uil9kph-YDaF2!\:V%(\7!m7tkn_#^@Y'_Te_CG(f/Pb6`^b39LT?X`1e
%EbI%8fQ+3cr,C/TW\l,1%3$(_C*^7F&A2tLd5B"LD+esac,F5f>].^u@uX.*/_o8qLLL9U5q,;c*+^?uT$TX$-MDgh22U_9Ai/jI
%*14"ajOBiSgqdK?0mZV_%`/SVRqV(C7KQK*)Cdj$:u6'95=b>H,!(smK>f_aK3X\6no4fd;@PXS$H#=?IK<nj78D1@Q3PH&1^FVP
%W$$rt=,ek1iG9*i58\r?S]_e7mrStXAp75:0f8A/)+)P@La#X\2,9RE^sZljTFsChU`B\?D<<N?SH7^ULWtQ$Y6]tV:0/00IY:F%
%Lf?S;$]noR+c3b<^ii[#\MtG7MB;laM5=nWD.J1<jT00pRTtp;9!+P,4,,5Y!9Yeh'#B#tidn-'@ERUliD@e86*Lhi)k!o@iXKaI
%'OO,.JBX$l_U7;3@_#h/NWdc)@KYSh5a@;M`HGNV]>fs4FM<O2h+_I&RD-6;LVjp#gp8WkPFoRPlR",D#\U:@'73PUX]mbZai'2j
%-nINFn"*q?N!o6M_b=YK9,QCn<O`S&m6#9BC^mj@e:DlYQ1$[bNpoEO=!UnH^<n>!%@$)P]]>Z?)gFOI!rU5tlLM&8[Ui*(;!ddM
%+&tc@*C2C0KnDe=g=$ElWU4hU6Ur1/JPhllj*MJ.o6ZM/DT,V\Jj;pCJde9HAJH:8itUW,=&j6662U"R29l](PV5;iZ2)S@<)'bs
%.#\Nn2J-))XKd0V"beqp^*$An"$s5Mdcs0XhAL,opfqt&.VB0-1'2J?:QZBsFVpM=SSTm?^D%E/T!.dmAW,U!7o,?&[<rVh:P.sL
%<u#5^0=S&#OPMQBeH![3:_\atnN>o-F/4NSb>st]iGo.5k6/7*HA8.5+(>fIa,5c]N(mUGMaT@j*N5?EKt]tP6`=uU*-Z(:D*3BB
%f*mKu61)ba,&!!o$A\eSr8bEnE!7=MZRr[*4GJcP<BO8d_73o6od-M@OQ3S^a"`!8m_Eg%]EODlYt1<$Ni?kR?#>*[S#I6m_cAi$
%T`VOZTJ%MDI)AtqjeOl.aV8)'f2M1l0Q=FMi9$Hm=qoVsI-Vnc5$,2II\?,S6XY`=5Nm\5fd`0R6:3biKu\Id?NISs'J@2WA%!WK
%&t1:##J+JVRr;<dX%gEYI+p*^NWrN+(Dp:A1Uc)s`Z-%upj4AfaQC,<"4a)n&It*2\Q5X!?g`F05e/:sQ!'H"Y>]^B#g&<G"1E]Q
%1Ur#<kK%Kn#3D>5*,S=si@ILC+Ir9&-]:#6<_fS9MAQ]FdIT[NS=rSqdTA77^9Rj/LiG@k+I(+e">UFuW*0I\"^Jba(2&@(h\88:
%bQ5utb80tA4"RU'\Rq'DO40a5s2)*i.LbiXP1O_(('7?;>o[b$))TGDn-Nd`,b[Z+gkl+;1'i!?ehT>Hg@$9u&CKV<2$+N[2'bi3
%dS3084[Z'uiGC!6@-Y).DJ'MJNn/.nK53lc1<`SHD>CV$!QH):+Nj%tlM=:_#n,ij0i4D02&%#CE-`%;L4T-.VRd>f$UcIrh\<QY
%W[KLoASD42"<@2S,I&S`M-T*^CdgAcr#_2%Q2GjH38K^q[G:AqL9-8h"FLSIQP-K!m#Qk9UdBX!/sN(a<WY7K_]g0l#S-@YYkM#,
%bMbEZC2"4p&.i]+W:#bQ&Fm*[X7FdI2[`'+*3h5<c*&?!7&&[CIpZCe[.(f5!_O42%P.r>-F?l&F1RjEHt307o51M.M`]'4`B^+A
%//jCcj.i?jOinJuOR6/#FLd)7:P+j^O4^\7DAC!YP+lYQQ(YGlc(^6('KgdqT>c(I't3YbIR;F0)q;)n791OZTF9skmKS\,Zp\-8
%.$c]\#ocfJQ@NHf]Ypu/))Z@r[2#X<p=OlVrBf/_<C'jD<^CL''p_HR\RNT&"rS=WQfUc.(!#(H5a^+kM2/HYp!FME-j^(@#F6&T
%3.+"RK90F]5Yi'J-]eht=eg)an&T*4$>Ub_W2M.u/i]hg66A(7K<%[e6Ku0K^(/al=,cXc3IHZE!`j-Vi!]n[MhO=ePpY!8Fr'H\
%RnADg2+'(:!srh6l85Al4+]FaJt&'RUI45XZ[eOd`W%L"/0QZNaZj#E/no?j!B\F`_=8-j+bK]$e].8'L/oc$MDm\;Q#"]86V^T-
%QeMntP#=h@Qf.rn'T:+ChcB,($,P[EC9?UmSS4gZWL7"EC\)sMTdG7I]0(`RX\b42TRAf',I2Sb<A;D07K9[eXL0_b+174<=86aE
%$I0G<`/oX6-Q`D4)N8MH.@RTnJH<;V16@q@=6pp@o1Ndj^-U"?<$c13E).O5BEgc40jF-iL0Ucq"g5:A=EOu#<gBnl@DupP)C`^D
%&6tq\0eHq3i2WjK+P0HVbIYLO/%?;nn^M)__9\4D(DJWP])Vq=6[U6<G<-+DWV\)\-=4D'9,2'sl6JP*`)WTEU9JP1p&i#]MeahN
%g.8*m;AXd4rQQ-@Lrt5ubOH?>rdn`V>;E/tb*6au;4gcb<!=c`R8fMN!Qm9<+=5G#>a"%M_@bkF$!m,T0c%PSA&n5b8*iO.J_XC@
%W%7\jOKSt&DQpMqiS2>>7o5d,*/e+2I!sb`@<),\:e,re!bW@;4$@2!7ifW\*qg>4=GR[5"!&g%&C/jp'2FPh,W77XL$,MS4-lj?
%;+MC-!t2Lo^.996&'?)9b*E;KQ/*0,-ho)?53LrF4CuXio+t1^l3?]`il_cVadjNZ1'0uMhI)"I%.Q0:9+W-0_17-!5sAQE?1;W[
%-K!]sC/CQRLlb9mi$/TB%CtGi9LU8"/1u[2nRcIF(3FF%6COI?._(9b#j&R]iu6')B6TGUjKTu2$JDR]G/t:\;unX9\;c\6V@&tU
%52Z="g)3ghJXDJ//gc79j'`&(F@P[W#hbpRaQ>6=*1Yt)TR;*DWg:L*(\0gr5]04j[^-">OSAp6[T6B[E70o]R^g"i/QpjiAB<jD
%SlDNTF]gC5!m[u!m9uuW:gEN9T!?<J!P-E'i9M2`'d4M;f/C&kjEmg@:t%lQ@)TdhAplgH.'tL[[9!2en($%<9OK]10LT$\@7/tk
%X7K<q?VSmunhj+`OUCa21nhEcZM[Jl`YH#sL,3+?Y7fJ[M1C=_?8;D(L=45gW1$D6(76RgTh:Is3g7E(/_in"$H)up(Z<#nGkM:5
%q7IakE_m_e^=8ZOM3a#$fY4r)nJZ@:p/=1N%Dq#+_puAdMO4j#E)71\L'4Q&.c<E!J&<o5pjAO`#nj;5%OPM]J&FKUY2))JW5@G:
%2Wt*,>?,f"5r35/SJ5;$["n'b40$GRh.\.G-.`=_OooWgI(+mM#D0ff6<k"<o7f?(E,)<R9SrtUd7RXqA$su![eSLWVh>hE@)Ijf
%!AaJ^!EiQ,G"NrG?ki9n!n_,\AcrlQI/>H_'Hct3d$5iBfZPj5b`1nRB!@]M08,YHRdZ(lcS\*1OpDV!%@$MKS@UMp99_aP3Nm+r
%0BA3P%"372cVr''?]UiqdBQ+["VU:aobYq6&1`tKO(i?sAU'c`IUWShaE$CHT?<,tT$"EpQF\]#AQGH63TFAG/-'3]^f!XOr<URt
%2T\fKD[OPs+'An%8UO)r$hH`#S%mk]X)?Y81q3ueD\uQfk!UrBU&7mkK0b[\dNI(ADD,HRaROZ'VANneU%D43O8855)bh?<crsFa
%CGkjm<lI'oa#)g['r=EHEZM!6!/PQ_0s-<E[MN+eXbr^$e#-/4ggfI"EM\Np't3AIPU^]tVI[&D8ek1[E+:pD[q9X>TrV/_V%e;9
%HX*K>QXr-=Wn+0I`F=:0a)idrNoQP@8ek2%8i!MI\Ygr_Tl_c62[50-H?:WKV[>hW9'%]SZ$]9;XAX%!h"8!EVKFAGWspS^;@-g#
%R_hIh?JF";XAZ=sRN]9m(!GN;:(W'WJ*,U)f9.Aj%fHJ/6Tkb]BQ_<XU]"^>$qS0g@7pf@4VH:uRP9XOFAjs?hk(mT)&[4l9r_>A
%:]$!<ZSHT5`bjSQ^e?54)&a57F8D]i1b'HHgB`d21TDC]>8icD`Q`&ZY#)Ak%p@#J:_D>D[&ZNe:4Nutm7F"7T7l)6$5Gs3WZGIR
%FftS`?),,+h_^mUB>4uV3SiI=Q(#)p_TTGh.RlnTE.tl``\l%4\Q.qJ[<>,.Z`@&&a+XGf8gQ?edjJ1q'X96:=/fZ'C&(f/@XsRq
%BpHisG+S;&Va=R&Y+&1?L^g<[,'[6B]2G2*^@\0u-(eRk3%NCP1/`B7gD7fYY#PM8`U8spX(%fE0"Y0'j74UZ>'5i?Ep67XT]e_P
%>LKNWd"*ABfX*,][_tM5@R#,-];^DBV$$5<W=TF4Gj/0^r1%h,WYA/:orV1:($teFWk@iBD:>N["Y6]LX7Aq9q@'1)H)AG");tlq
%+'X?CH-iS_$sScr($]uubW'dJME\$[1Ua[UPI-C;$^^)073Ap>A4.uF3kKtfgH'U_:d7UNU4t=nOdWUP"_X(;At`.#RW=8-VGeX!
%7at.e;?a\^W$Bk@8u0:Kkir[/<SY`UfRm5D],Y[r9rhTX!QoHN=uCj[.ST$%<>/!e64lhlJkW;-fY:CdM=^k3rsuf35SQ!.Y#dEY
%VV81So<E.kV,ng'8)=q1DNt5@H8QdA@^bT&,]&sWIOJ5r"g%b9oI@R>bnU'-H5.-8SNrc>YsNO]Ks<)Xf;\^a/(V(l`NE=Zp,UG(
%`JVcrfRX`PMJgmKZ!qh?l>iS-Xb:M^]40mu9C5T]6J,R[BuLDke+:%X-0\d;:PtG)2C!-t'u)5!#:W\MTO"<G.`G\u^*A%^AY;eq
%3;ap\X_Y%@q6_Y9/(W40VRV"RN9IfG2YsFkFa@)i)'FWM.Fpk%Q-jJ"<h/L/XCRBL(&)IJL18+W<rp3:XD(/&I93N70%LQPR\iX+
%p-nJV=uO?'PqZD)T^XI6)CgY,U_))1G/_W"S*`ePni5+<%E6J"CA(r<no70EYZ@iq<FTPm`HodoX7;Kb]b\$64a4l6L-ZZP=M_S8
%:;o%QN*SfE28*d+YS5=[TNUk0:oI*po'GVeRe;gjFY;t/da?,]K$UR%8T?-AY$$s(hemoYkEZ3#iNH_hqJi!:KsWl_C!FdEnpE(7
%aqHrU-[3i3/-Sl;%uKS8B#SM1:ok4mOD(2t/uYD?=AaH.l=1):_PFG@MA7#d,OHZ4WXR9R#T1ufG.j>9rj7H2+W?B1CjHh)qV(ZT
%0FFNFb^0U4Q*@C"V\!enMaH/c^oWo@%r.C&6ffa"N!?J/X<7o$.bfB44Tl2@e?[i9.YOR5+^j/pO$*US;6T.]#e2W=2>7Y9)P?;?
%mNGsPpo81B=0!b)dqQ5>.T#)i=Y@,Y19l=G[0cu^A(`l9<ls7J`dXXk/skNK]h3C?oW2-Ah;9F/-G>l6h`<V6C,KWMr>sI'c=/uk
%e7qHd;Gm'_X/oJr.tVHBR\On;WE#ak[=Z8&`HsSH[B%hZWI*QnLg!;5YVXR(GI:&AM+AVA<X"oXGunUn>qNuJ5!uBf>pWHbCJS-!
%BW^6_b$>0GL"jYb>pY\AMD.b<eIiG\9<2NeX1<Xm<E+Csq%Nnm-?M+MBN7q:Zj3`0\la-XRY.Y^G?5s4%k`X+JT?2Vfdmup8#;*<
%bjh9$W]6d!aQH3qU>CpgMRud*5#W1f-riR?4F!pj#!C@u;I,f7\$nspj:t0L/IF"Be#Ft)43Od,a\akg+>>1>Q1+rDWrbsrL&&o!
%`P&rIpo>ehP6J4,<>'8In-8*[k#EH;r[QL!?qMKI.R79KoV>Fmk1k;3<Grjcj?G'C-Rgn9%uJ`@;FN0/#r>1g'nj_&F02;0[%r/.
%?N&!i==jDYm0%8Cdr2PVm$=s$-_6F)eQ%dk\sS"H6?@tJ@YaJ)hEopJc),o2'4;OU,YO&kXsbb-h+`DI9DX:8r6Duj<I_N?(uoq)
%_k]fQ'kLAZgE1S,bh_1"0'Tj,NY/%*L^$TiT8'A6c%sVKC\0g08E]e*VXKB`k2YJT%a/.P2?k9527a6MHXn"0EnSc/3'0I+6)5ur
%/<'O'Y4s2],T?n*M&*G?0%jCRAm\jjY6i+\$MX"g@!mu?2<p06KC*WSD`QMuo"F&JHFbg!U4:UFo&hGaFe,c3pp2rB,\f3nY,q@R
%1(-8Jb(CM1i<gZ"36Jht@kfCL1$Dflrg@NNB.mZD`$3piP@4r!=bH]&-Kcoj'9QR9[L'D,qo..lpo%3Jb9],Jmn)crV/MOjdEbP0
%%e$"DIT!O4daq@T$Cm]Ie0'),[Ml$)D1mhm$Mk[]8\,ekKTLg8"@<Ug!Tt=6h7Fd3gZl,>3TXJ!<(,tiOhM_Fpc,X>;q0AI<npc/
%+&V>R$94,D&4KiF:O6IM''NKjMY+/j^%*ad02mf&_gUU;#6#F2>M,b"2ImEGl8=/s;D^M3&ERR.A6XX2X4,d:IgV[gZDqYiMhBV=
%lA)Bs67'`+mQ7.:$e7/>@GaE*GH"!j<HRZ':V'WXAIfTW\;u'\"I,a=Pq4>7=I&!'@CRK*K(M6RnVE8JPeS[g6]m2V=D1gsj89W3
%jEb^]\YNe#%<>`cO.5?AJptZr!$2]=2/<YsZ:XL&8(RaqP]fV+24L^><M`C1EB`aY_b)(%Wp0(ld96aE?06oh]9gA0N`:+Q9=i@p
%3]rh7HOs2P$qXVS<=_Y[UC0M]78s-?3B!#WZ1W0D36FCTGot#7GK9FE(SAFb]?8C]-9Y(ij(G'F*%KsA\MD6:_Zg?SB\g?YaA/rP
%Rd5:0%:\C.g_2JlYd'n^m6A)qLL%gm)>:*"2bsB.IH>\0n<[M">tA58;>K6g$i/1MNec8H4UT)A(+$0b%`*?C%K_cu6u=t-_lIaR
%@i-VZeop4u$j5J$e]E>ib9'TV6ZOdJlT>+*_a(N&3n;)76m\%uakBorPaVlK&u*Z$'m-3/$!M!k[%/ue8?%uN%eI"m6leqJ<)\0G
%!NGNFo$Y@__orLDqhka[arf`:PK8j5,_ZXU=mUr/T3*0E&K)OENn+'I.2Yi_%[f[&[:?B!a1\9OTVu'_k]u'T#cc%N(!_5I3u,eM
%<DjHg9;3h^!e,]U?kAD7..$KD*qYfPq;iECo:I^-=YTS1KILb9MMS/0,\!0gLccLI5F;gGI<W&M;l$6!LRX)d'Ld*.)=_*+@18.'
%Io>oX;q-2&"Bu(aESLs(>Fn]&c0dGIcJW>X<3`.A3e[0L4OYFLrC4#Si[u,"[I\H>'TJ_Jc*%WTJ!obiZC6$*op;k0$mEM7oc2o-
%Wi])ibJQjOiq"#5U\lf35J.-U6a$@//#'j(V,,cI.*QX0"3S'/[4-_ng)(5,k;=iU&;5[Pc>)*M!5'Y*00<%75B*%M:-cOJ"jdM_
%!c&%#rDSdY%4&Ea"""`.24^lHqgUtdVTW4X+OF[+:.T=KJi)h[>*f[#YMi>!iQ!j2;^.ckd!A[l^_!IS4TXq*qB-@S5^3/M*[NT!
%/FFe?f+!Z=+^jXT\43FMaZRBe22,iAK;[Wp+CmY=gcQtsD4l&a0-\+jA!HF8Zip,c'Hu#o1+4%:TD6:0?o!HU3QU]d!(%p9%.#&9
%p7k4oF0-9.M!@9`!/[^EM7BOVb=9\l%2XP:EKO_K,],O6*6,1<YMatG6!q`&K7Rb1$1:gc][m(6oBdjke'P54?(HM52\.CC>KYNF
%),f'8!:]:L"2]3\gUg70qiR\lDuX+Zn_ptWnF]l?Ie]D9^A6URro*0=hgb=T5C`S'msb#'n/j#'c3'oRi,s;Eg5fTjp\i]nqHn5b
%3XEapUDNr/>`;3]q4VU(k;U0UrXZa6E_MV3mQY[ThgPIJ5QB\h?i)d3s4tG<p$F]Qhbl&PDt1k4IJ<E,rl>'90A#)-Ic81_s77?4
%ps'h.qo;M4qu;'8k894$)DXJI+27UM2uia;ql)gI?1JffFo94&rPK`Wot0*gs.K8;(Z#sHGqFies6fcNMuWdgDnc86X)J%8^OGkQ
%5CN4\pHNBErpj.E#N/6>j@]`\r1n6lIaZb$\GoFX]m]Kj?iT..^;@)Q\$,f'e`T0;.mH/Wl,C-$rpHiUIfJfeJ,6?UIK''J*rL*.
%N]O/\7Fd1W$1F'qQhpVXTA>YsF:^MG8)!&IQR@n<phuQ1aYOuN+lG72)sR?Q2MCC=^IUmZmdD,^+1]8O$=S]u"IFL!J!9Xbpp:V/
%IG^W-r2feklf6k?].FEBO>LI0A*RU<,og!AgFG,\OM:,1k,d=lrd]3Hqu&aNLj>d-qoN52%1Pc84>?sf^m,+Z%bQULZEC,,$&[Bm
%J7D*&]8>/ul^CaXPID)JgFl83(asF[X%WT75]b]c"=_Lu)r7#5"27iHfa<]aUjt,3gJ.tPL1'u1`JA_.^)J%iYi$H=9=UQS?)-_n
%?bYr'D#HRKMtPQc?$loSUWJHO(!qWm-0V9=[XJ>kdNJfEI!@O[$mG'/"Uh]F:ZZsCE*l&01W3sM94FQ>j!IHd$dHkZ(ID(;WDu[t
%b>B,>omIDeCJKP'Y*kot<FBQWVr-Sp[(TtF($'*tfB5s\9)on?bZp58C_dV$2aFhiUkF8%#G!!/<!a<@j<M1MQs"Dk!lnaUU9Ci@
%dSrCX=:uN<)+\#?LA6$@p'jW-&"Y@\1-)j/>;[roIQSX!Ed]k;pFrSmjXEr]ErhG4JZ;TcH#p?D@"BBTN'WD!2$AK@e8SY$-2cNZ
%TF"I4E;K35c7(4_JF4Mlmkg&/,9`EI&Wjn5mB3q5[a!q#W+lFX#\fp_0Dt@9m?>$RV$Yo]/.8o90d7cm+#mISf*c#&JNEq]5&=r]
%L1:.d-Aos;+;D@)KjO.@4>>u.4\n_^,hGo?j$n$BJuK:j@?''=A2ZP<A^"L,'#8V*.7P)Oq:4rQTOC2oL1<AP,)E)>l8&?J'@j(8
%k9d!Xfu$<O3aZc(7WH1:7-`i;][iGqIJ=i:]((_\-(CMJ71p&;)9!,p@=bl^=hQ\j&XVFC!_;aOS<l86V;ju="U<"rPCO,g%gt+3
%G)f\U8CWB=(^/HQ1Nh?,T/7E!gTsViG7)`V%>b_e&@(.\U@)6LnUDgT]GHGYBo/+@/NRYr5%@/[%oK[R%E'5-NVjB5l:%s:]u[&7
%F:aTd-P<j`GX[e@>tP_+!1uY>^YVV>pW!YE>bY"UkHnouGa5i-77@iC7/#!V\d.L]m&PWEV\!"++CdiVHVVRl.ra<$d1grESnI`J
%=>l-qX8m/V_S0J)8!Lk6jlsWg%u<8;Tt&iO=e-=>-r5O:%))>T3_qfI`uniJP!n.#RSm;*R=`MfCRGHD%*ZFJf_Mj@FKZJU?7i(q
%le78-4PbhRajO]WLEnV?U(ZcbVR18KU6O,qr%:J7OAa"@i[5<ipnrHD>94k=']]s8"m2IGh/?@a?M>q&#&+25V&i.8BZq!#1%`(n
%b03V2_b+H$SD2i,lBLnNVu(%.r8J(pjcg%aK"S4\p5G#0"L1>H"=5nD-]#d-#73K$53bU[![E/LideKL,)-PY*nir*5/F6!<-#)a
%#Sb[]5kmk_19>0JS)-*/BJ5%#Lp*))LT,8dZA;LFl:-?Yo6opB:Qoe7c[m(To0on%:X:+>6K^6n+5\$G?TS):YW6A<FVM&Uq'Qm=
%9diSZOYD)paX>n(#WGN;Fn.CVfaRDaU,cG0F./OUbA)R3HO<NA3D-0Z\m2&I4&qONLs0o'iKH,Y+n7Xmn)3`AE^!.]q/dih^KS#V
%Q9+^hq]ttI#a\KL[lOORp/*aqEoZYQLA_#07#J_V19:1tG#pediBI%OoY.q2BYaF"SrgngrE3$5YE3)YpsIl^"49@QPsj)q?H$X#
%HO7u\7/L'HK*QK(V"C`3C5"4sn7bbWcaP'`^_6I"C=dsHYj\<9dtK8SP4Vp*&@"UC^O$DG73p:.$Yk]H0*s6&0g4CI-S%Eml`C<o
%[Kc)h1&U8rT6I$j.$m+l!1%Wi4*F#,>gd./b]>9[$p^dZ7650m-QoD/U7=9,+-88aW7DQ^AI8<GN:7de#)WCN/H!Adl43TAOo.JQ
%70tkmneV(]K>@A731HkqDEnqEU4EKE2;8G.Oc(c(`&]S(h97rKQ:;bt;'Aj1$9n"p(2-LB<@<mZGoaD]U?Y![X[KEF6o2F:"H[gV
%0]rpb>iJd^gSt;_"XmJ2r.FZi!+<C8NpR5U=-u`3`D-t3VDUZdHS#R-UQUMnd/-IA!JHuEqEoGh3@dOU9@XohKBY/N$5;e=$)]+K
%l1tioKdeH/4g%AGNK(B#(g[Kp/Y3Lr:c0_WQY#^Wa*T<@C,=1CYI=Sl2)V2uR).Dh.M>q5%c5G[5-RsFV2\3`AB_iPD*DXddQ:#4
%<g\$M_GUm]Z!1']f)c=F3,ZU>Df#@?#,<K)kaP7]kJspVJ=.9cL(rqk!J(Gc;;nm65/+'`LNuVa6-VdHac."M_FBuo)/dO^WJ%qu
%Gh]A3#kZUXSX"84X;VDF#4;Ibqk7?)FpOe#M]kpcY_17q`<_tQ#YqWP1fbf9QOc*`T4AS%pBcPK36?,QA@3)$r"%83ARo0L4LPUF
%Ru9oZFD(kDdLt,lnIY22eTMDFW$'1H6tei/llt%S.\js1&>8M*23l\MoA*[S/gZa>nlpsCHG(t&NN\W,W'RRXbX*/f`*sL0')P-<
%]:3OJ\3?OfC?'jtapcn:1]VBmmBk-g7fu90=?tJX7jl'VW^*\]"G_/2mP+Q&.n4M<TN0Qc+%a_I3%q;SK)jtZg$Uh$#_gK#T[C)A
%UhNROJoh(,[Zg3-\4i-SPrR%b6J>s]Xj88Fk+[4gjKVcl5Yl?6e3.uJpMp<C(Q]-'cH]I"-'upJkalYt^F;F?lO\5d.BB%7@#7h8
%jiJoj`eqT8-p#ssB>5De&$bsCJ-8se0Hr^8FB.^P81@H#^k51K;'Gc]PMDgWOIf1<5uF6dqFQc[Kua]TBL5>BAD+poP2bu)k_OS.
%7$@b@NOhEjaa;;!V2^/#_nqIo=p,o"MTN/=(GM*bGHoY,YnE3+,.D!UO9-$)7P7Z3"a)F;FR09A-3@hM56b,Z[)ip4^!tg`)G]b*
%hoOYj6!%F@;+9hIe/jRT]"MJ-?13@+5Q]9:1qkXg:s%/4l3<NOG%54`KN]35bej^d/=QU;"$EQ]W0dkg9i@]+)_Lb34TA]8KVkf6
%DXZi*$C>^GhK=)qiDVH!rJ4K%&aFHaV-%[f(hlorFu74&R[*N%3!).PKno:gUPA"n>1X,KWPb#eE>,SOd:_GSgXtlNF($:CAkG<^
%ps-Nr3(2$&E;2=&WBD7,5g`0NKY];59:&fA7oUgnO_1p[pLfJ+3*qF:."WE>O&ckI!(-DaL`'3*&,^VPK->Mmm>7R%X?'Teb)1b&
%AO@n3mb.DiKSB83YY'ak#P05^Zm3\&P%L6DL(5B>42M^9rFSDE3Uq>4$p_)O+ta.U@c!QKM&O@0oE$g?cKEYRn8sWQO?%F(1rmaL
%(C_Z1W6dr#C['TcfDYqMQLA#AS\-._MFtqtfR6*P33?5'I4$XhoG_fo!Lj23-U`g\"je1+`NlarR.O-YT9N:rba3uX#XssPbZMql
%%5s<6/4a6gEp3KVs3kNJ:)"+\i7&$L'jWds_6CuOW?)`(]#1R/_:tf/aYH\_ngThXpg$Z!l)!<6^E,-1]JZ`n&9-N')QZe5hZS0H
%"I4t=D8L!^kaei0Y:#&lO?LtQHl_7^]#@m+?3sfGM#@c\[@Aiua*O<u<]Zc_fa*='d6E('>LEcnMr<YYSQN\sZh+kS2/Qarfi?*b
%7p[Zj]hg0K_BY?Xb;+@A&fd14!a5IROHOONP<r:rY#BMb@]U4Y$=6L'6*^ZiBfFom5thr-XDpWYLI0E"XC2NoM6K5L3dd.s)*@(F
%cuXr:>ial)UI!WM(5uBOJ_ks@9eSE5+n.QKTWC3?heC5@!:&'#<TLLum@hh8="m^-VU(NFW55.q.=7K;c'72R#s^H&*r@MMUkmH^
%6=aj=CGp1p*Lrti/AlCkN1a1,Ct$%2=nbE`4"4S=THl<OD8_B%K#/$Zf$=gPT/!+7a%t+dKM,X,Q\]/*p+s(:EA5IRDa%chIH$k^
%7*C4?''*ftI^7W5c@<j^(Ct?%e<cPKER9h[U2$-\#t<cYn6r5.!r8m0ZUP)g9SmIQKV#Yb)r7De]+K2T3+Q6#B3Q1[,0'SK$3:Iu
%Kle63$K1>hViN$BgO.Fsqp`JpKu&4+bM"l+08j:<9Kp/T3k^i:0F;8\hql'?02tVP:j=`,ZD@ANUfDHo0UNXErh`Vr9K4H_Z"i^1
%77(E@q#OaaE]C/rqUcl?_u0Pn[+9U#=?=qdTdBd>5Dg^+$IJeYVZgGH7K(Wu<.UP`hd$uHCh+N[/NlZ,Hl^W8HD"J*h(q?R>+q>k
%PW_[=qi_Li/b<[>5XSYI!g0UlF3;E#.*J-7,&2KmU%=ac/gYYEK`_HMY;tAJ#8@20'[Th*SBB<+k_iF%BFB&,;R%M_``;!Gc[^C>
%4%GRQ#cd*kPd&IMg\$BpKc+CSDf!L2?'Bn+N2X?12-kB"0`geD^"@]kAds_F&/AYRh\5fBe%68#!gaff`7:n/2n2n\[1<,2&R@M$
%m&#f[^bJh\6imF)]tO0eT)slK'D!n.?rMj-'L+Zk.$1$^d]MkV/!6UDd12:(B'W8?atB[j)o9ROU*PSOnj_LOV;`d,66S?5@WU3,
%@]$23j[9Xt#ndr&$m"$/\g/jY*B4$';aFt56W&Y2W%Tgf6fC!]Tm)$I2@8mXddAec<S@g)@t0*c'0QDV*:X/1+D\(eW8KN?Xq+;2
%U'*oqq0*2k>I`:YoI<OIs/tks5b\Q\'(9XM[-G^X?(7k(Q+N,?;F^3WF"'m%:b=ECJIt$s1#-@].a!W7G%>"m]UN]08&3HWrN[u'
%q%V4QXGZF%/)*6\C4e^G'X:8gU4^`\2sMk\$7nH><$B/p1>'20M%Hp'7!FO8j'2R:4Y?L9pjdIZdkD=iWFsT*f*Us]@K$OMG%0XU
%o-sZE@'k_@K+K"om_-5oE,T[<+&>i6K10=K'V2.=G.[K0G2uh<^G-pLVkX5>ih?,Q7?JGDL@L:t;lisYP\kgW'2rp6e&goLR'r(P
%e+EP>fr'DG_%%=12BlK#),fO>BXNA2$H\1A@Y3MGle%-I$%g6iQUX0(hAAr7:j4TTFj1RfH$76tYJ8@gPY"fCia,3m%tAHH`XBu+
%f%o2.\knQG1.q]?F_B[:,,p`f)M4oGhAd)1]G&PF__LSA[I"3>^l:As#Z0-_NZ2U:l'McK7i4<liZ#_/P)5S9^]n2'NK2k5Si,U@
%#Q,Dp\u:bQ9n$HBL0"F$0lhH>a8pr>`@F69Fe(4=*G`duTmg!EX)X^sJrTp@j;!="4p6A9Zm;M:7DTr8-#'2A=p:f*7#pSaOKaIt
%l&Z#1o-!msei1CB\pnmr'#U]:2D?UoM\DR9&(Kp0(uT<KI3tu/VFpFa>"Epb@6G(loN^hJ[1VXL+oICbFUTHqR9B*dWHb.EqZb<8
%>^2q:]Jd`B+AIY")pIVlf(#XkjIR7qPKN["<r:M^^]RF%F%AfZ)IMHm5ZD%GWg@j^dm.`/)%:QG+iQS].6IGe!Yt5=`)2<9:Yl_K
%*kV%bd6HU,&q1k@(mpgqfkq9h5o!-eC]T_UiY6*Y8Jh_LRS9Y/*[ag)dXagg'^9g5=Oe5jhPDQhIX@0n[DJr1BGc&H5=^hEleWCE
%*i0")j"_0MQ\7ecSnSl)DiL*H"81a,WP">)C:(Cb4!UcXV]F_&%$o#9ZAhe#ERmiM<3gOkf]*Iuk>N_K5QXeJ1UrMO$hh+*4Me^2
%cF([rQi\^nkcr0`FrM!J3k(2jfjL#O[^N13d.+NN]>cjt!K^m\8L3WDKM&n$SMpYh)F_\6^onkCH"MqcaQ\qKjkgf3("kE(77:\0
%?80=j_07p)?gZ!\O8$pI@Q2)8(b@!n]uV'giZ=FN9WClAEmQSH4C?%@f3dQMHX-I8F^o<D5Bhh6]l<OIl^liHqb2:EC,QLg7KEQi
%eKeSTVL+rf()UFc5,XSQ"D?cbSlE=`"Sp1N;V3:uiWfo[BOQPuce63)@Uu58B._D$J^Pc'GJ1S:Q9]^h1;Z)lL>f-Er'<&FggH=i
%M)3k&%[a><Lk'`-4A,4sbtE2)mh4/Q8_mpY'FI,=ooee]+gP/V75Oig`aM@EbNZ;5`4oeA`CF-UOKYO--Ou4g@$@B]41?JD1[oXE
%5G8GqN?n7gg_`@5[\h<kJljL"eYZ8>B?OE&2i,h+l5/ZR%+:B>fHMi&_Xjq6F.s#iE%hkpbW[SRZW]\n0@$8P]%)`AjoBb7E/YK$
%)i^VqM;JiZ-&RmA*p>;IB`R1M6<:tnMcc02abCP8\aX`IYqZq4,V+/iN1NXR:%\LGlOGKTXM0W9d6%6ej1DqeB<cpq<&M`;K6;Ze
%D+Y0&<Fn!*%obHCrMsOql<O/mBX"pZ9!KiL)^5ehA>`7`1QXL0o-u@\\8S&>i3]t<*V_\NY[Vb)ZA\lU55>OjHuU/AP7+LNd&4_6
%n<o0s$+@Mjq:dZS@MJAW&_tMR>.)oa.&G/hm_270d)J,D603Up@ZmZU2;u0%4CJq_9HPMK@9$nB.:*aadTTnC&<.Wo=n8`QbmpQ/
%:s1%m\6b7"L`1K+M2b4IkD.[bq=J/o]\cs5GG+3_f*gVI,SXtolf8V9h7uT6JEN#SZ='uc57alM3>%2h#(k?nSijXX0\C?q@$Zcm
%M>@fDHk=u"!&fF#S[iZ@3R%%6,YB5#;R&+`%f&(q+-E`K`sg/9e6Zt"JEFf((;>,Mr[[,pH$*0,KH@:oCFbfMKaWf+;<?k!o[b_T
%j=tEENq=p!,!3h"$gYJY5k5\gFq#OWH/Yn+"kK$e0/1h-42JdM7J0BGfE#6mUW3f9Zc@6K6Cfa%G_hg`VUe_\9_kjCU$K8^BJPni
%lTocT9?La0*5/^DE!A+5e0>fPfGZE$kDTG3_K3NFQ?B3?!OjO;K<6ol)(S:tA6^?E3Q!*MAHIKTJ2E)3MZsb::Hn$&?)3)3%cjNu
%RkX!EY0!b2bf)Z30MQNoL`li/dQ5FKOo:04#/t5B-'QM\9tMa(VN'6"R`W-2]us)7lNn[+(<)a<UglH]9aVgI6nEl=&@ZnpW,>08
%M8pPC178%^<&;[S;L4_8Q^Q[X.6a-ap.D#=K[dIamal6h1s\AjPlE1JBbn)q>A/iZ'.;G?e6s=.h0#Zp@DKV:Cj+ALC*Wui"-W#)
%!PjrILCS$(#j*?M6-3NhQfY!KVkZ@K(mbQ0'"=1"9E5b_.Xkcg7X6J2n@G^$17F,%7tQfMgEJppmWZaF<]h!0No=sZEB4IZ)]aAb
%d29&j$"q\1j2:#Yj9-S]78OC[^5N'1T+a9m]j*=fi$#I2AM]eUBqf]A[fY>W&AR.niJ8*M5/>nBgt2AtX6V9$AP9"sQPS-f_ZaZm
%:a*ff<eF9tZ+"0D$u:e-8M.DC/?Cj*bN&`(C=oD>[m61I-r-2RP@Y,8)c_%_-lL8>&.Pmpi+FL<$Mk^Ig.DSbOokUNl;-?tePV<+
%G%Aj0<s]nMC3@dlS4)^u"=--(PT9`Z9>d$jW0B/bh!jc'ha/5<S!ECD0`&^DkAl:XU`Qe-T$0Lc>l\eA]iGHsKN2a[7IW">MWJUZ
%.*YQY+\e&mfgEoTe=g9m2Nb1!^?_g]]n`jXWAE/D1aLb;nf1JJ%o(G*.51p\pqkCUhUG2Ykpf1&:+@CIj<)M93.*D\NI#&R&DV'#
%]:4W,l_nZS-r,N'HXSr9J]3>gRSR,'7Hk]jG/5ZD8%91u^t^p#R0OI%kU#Mo0B4cpm^GQKGZZp44Q/fk?]M.4i*e<`Y9`e"Z50o!
%:oMYsHn+*>G*/,MI;Xd$3(tlY_#e=CrLh=Rl,gc!@'R'J"XX,a2Rp=qT*>taj^H/8VfpZo3j%Q<<hVU>RseJs:Y1'#`e);VG+;iL
%;;00qZ77cZ=a-,7;ppVjS'GL;^(aQ1/-ZLHi%CRS'#*-&=$;c`>cRUmZ]MaT#]o2\fZP`ThfVsc-7I,EB-@=cZJEl19Js3JUpJ3#
%0(Z3O&:$9+hfT\C6^>d]3XZfo.Fk9$Lo,0X?"Ymoa'eqEZOlOf"]ua*MZYWHgsB3-1\=aM>'.(!Y+BH03uklX]!>e(9525B0$cQd
%X$M-9R$Mf.Q;*L_n0k#3-'6EJZQ_R@BT99t/@\u,Zs@=0DA]tjSQ2CfkZ1kh]rX'%Pnp)&8bU]3[,<&c*fWg,_'!&X4]5GpM-"Io
%>-HA`OIkX4['$A].cFK%X,]\u"YWd9i6k]J;ieAf/&kA#W16[cF\rDrFbTUH(NW:/lWcZb=/t2':fe56h%%2?)GK*j=%q*K1"T<)
%`MI@>]#)*%5rU37KojFkmG3"h7]MW;\k:]G6tWgCapPK]T&DtDPo3o`;HQI#*K(#j$4CKs)+c`?`N"M%C5`K-iMR:]Z4n)77eAK[
%Q%_R)2E-Uq:NuTk)J^"')N.KBhU#Bo^u`6_N<MiqDNA(3U#mNm\gsjcN2UdCg$@]_\QJ:&fG,/g@4#@;QM0XP^OX0faW_q=NsZ9^
%!skZ=$>UET!,dKZdecn5'\6g[C[;B9F[kT!fG)otH-dWJ(0VEF&oNDW`h.ilP$;?LR+l,eKu,=t"YOlF="'oFTJaFU<=q6(Hdl+F
%5!#khg%89)L9Ll#I0J$GSQ8qjMGb-Th>3!d=/_h,obFO=Z4d@6@H!KT*BQ36<=Utq84pS@d/Q69$QmV_Xp9ZgUpn3mW$56V'UI*r
%SOHlm9-nJhD[Hk>VQ@R2=;W\0VRs^^!b!%hVQ`VMb_][6CK;`g*u3@Kc>-?\e)8fH_ST<ud+nK_g()=QD>FUAPjfYNbqomWql$\b
%qOk#GohF-r'Gf:WnoNH<"rm"\rHcgo(hP,[QI^Y@rV<qRde#pu.^YM;h!(N?mWj2NnFs=+Yb&lP:Kf9ES(=$.SPbm-65t!9ij[K*
%@:8PLdor,O<]f2B$O=M^QJC5IWcDY8DQO'SIEGc0'p^/lri!4?qXptuLs2D-\IYegk\FtWV6q_R2/QNTgO;+F+K\Y<=*N8"plI3O
%F;.aX"2:8YMIlCX[XctjC8t!F9bc+E>&+lS5!3R3/7I6_951LWH_&pcPubQGUXIlJpZo4O7qj\R;V2(pUrPS5J`)q>??n)dYLgq]
%F<6?718ulJ96i(QYSZrQh0CPVGe)/bc==+G50a"ma(!3t(>58"6GM3tV/2!iU6:QP_,_b\-o'Gb6rm1P_UoK(CA'`UO/55[R?bog
%>9^*R<G$-*/283R4+plM2q.GIQ7\4fP,EBP/Wn$O\oJm>b[ZckVp2[3Z&nmdYQA.okPkaG7;#(->Vmn26rkn/oM/r%_]@)=G9X'j
%o#O0BWt7@hDg<mm%;Vp24;R(-p;fZk*Xh$42Vo[>Kk9>;NB@t<O-[544;O54lNQ]=(A\iGJQEnN(E(0kc==EX/T"([7D,j_3-jU?
%O0tboGq;WPO.8:m`AK5IjE!n@WRZp!H*$'1b]?L(XPq;/<hJ6*/Bs8lrM!9.dcrX!mM#CWj"G[/\$6J`@-+Zi\OgAJ1nPln]>*r>
%k]:3YqEl<^K`aT"<$I7lEh*;K<+$oNa#T5*E3V0$XB(m)h(i-/[c12B6l%%(NB<3_/NTOjPf@HU%A(]i737A]_iE]u@mS6Mh)g\:
%*A:JCnlT/GWN;A\4;M7*&V64=_O=MJd3eFQH,sKp8Y=Rfo2o,Y/<mp@=DXk8O[P6u(-DL+qG^!rWV[g8lt'qh9k:AMH:VR0XR=\U
%rt8Sj+3A)*;.Aq3(QaNUF;8-kY^Io5(W@2WQWN8Mm*uo)*"G_XX88QsebR*`I"=Pii"YnMMiJ/3dq/-P^-I-?`=8mE!pH2QMCQ("
%$N_^K85uqlU9it=!"c0E+MbnR/Es1K&<X1i/Q@.L=@HfnGZA)Z!`&r(7oWig7b/k,;1/K.\&F'$^)2+XdlI#"I=[?5lU=d"_9$)f
%D:Mt*cHfj'Be`_k.Yt5'U)R'>9A(O*d:3_fIF5ZIYE.3M5dX/.e"Z+8`8q7eG?8.%:uS8G!f8H%@mohjL^aLDZ&14(2"=B/`>9p<
%T>fo.._\1%`\h:(I"C(K)WpeZMeh`U,nbI01%GiAo]dK\#nF1FZrLJG9&G)&WiDela["$NMhRpp%-0)J_>$ijJ_URjIIEV`Oc=Rm
%C,3#p<H5M"A;h4e\Z7&e*;ck.i7F7`PiQki_-WDSB2FSi*.M=/'rredHZr4Dm]<FI?<8Y=X"oe1;@7ACAKW(gSEEq<dC[LMm])6&
%_];iZ)2*;7n5tkT(=oSHNMsr!D/>1e%G#&t&/CA`CGLV^0XmJZ/>a%U;bb91J^LgUA,p$uW?NlDNQ6?BOdiJAN*GqY^0[UR+g%n=
%;PhA5Tl,)Q^Ig@Q=oD'=WQ'aK]=V&&qI2?2Dq"JBh]I?M%QKL/Tn>H6;tdPnm`>_`;i8_62sMGU"?Y"epraiHVsmmF`0T%l9?!P:
%YhIVQ9TeHYX_e'ui4\.H-K!(jN!f$C%<%&V10LWG+,F#pNl;b#?S'h/W3:0h*oOmHm!k5K9qk?aV3DNM%3NHO0Q0rd[2C=UP924B
%-&r!VP)J)6+%GO083d)Un'E_aJEG2D8E8p#a:'qnBeHMIC7UiY,qD\In'/9'IC0;8X45IoD)lD'',g#.aD%ZOQjnOr:]m-.]u8EW
%r"m%&m(i5B&c7@3j"*)#KJ/So.YD5]%MhJnMYr<dSL%g[/g[>r,e"+V>?B2]o9.D9M]5A:)ICipjj0VV3.bXs1fc8^qSR+-$g4Xp
%HLQ+!jSpcFeKfj5,&=GN5u;k10"a7K^$8.TH(^!h6_bUB>,H]#2EBj&W!AC7_-qa^&A%;s3hl>Y.?VsJdW'TLk!E&!SVjSu9ked-
%<3-/]H!9:2MQ?TX^R,H0RMjUg$?^Vni68Dd*MA3@7@[h`F):M1E17<siF'd8mp)i.+0-:V('?u4&Du5BH[#fVC4o'$*;6<+q8J[#
%7n%!'SS/_0,o"g8#Uqd2'8'-F*-2Q/,^)4'3ATD[Ze*<4C5Af+Pk-=U<jnq^\AlH%9C,pPgNlrE,T@O:d->-]*EiZX`HI,JO>5>Y
%#i:I7:&<.oL*pnY-CFTc[92H+aP+*/oruu<")s(5Kc^7r;Y>Xd#aB3Oof/U/3b:P8'uEYjal2srNK9\X]r]KP_)Nc9[:p%9'A(,s
%f4>@K`D<Xf/n'2@5o3f5UJr+UonZAn63W%4I9#;9%II.8WOaXgp79Xij,=2RLAhOK9=;AlW&q9f:]P\CP&*403.V`$j1=QZo&7e]
%2,C^F](]b8nEN<fKg^.F=!30:*V6lKTkoDs2^n`kcrkIbdk_l4jTJp6/h4a<4%.Ecn_J27qpGsCUdH$<,mn![#TShol%\NIC;ME&
%K3?.m+PZKEJm[nRbnd(X+roKt4G"kfpBd,.E&Z9]Xm6#@bC8Sa+2/4.\5fM9Fj-[#$ce5[S_eSO0q5u=,[Eg/m^G!B*7:gMI/T4;
%J:g[&_p/6>;Q\:TD]ru0<$K?2*^sQTH+*NGgP+bALdVQa7*ukiZJbr08_E<E,`;sl!`9o7J[O,AI[8oY5nJsiFM>5e0Km_qMN6g)
%3n&qtLat<cHS+UfcG<T'!%,-!1r[0`/AeMU,+JI`J9Xtf(J>%<D!0dNH\n1V)pSP8f3!JQ1nT=5GH])SQ+K,C+ESbB,?'$q+J;]5
%E\<ql>A)T4k-9PJ@[8aK;'/M+>^'-G/K:C\.AQ#)\ka*g<c[!,H\Ya/1DU9lM;Bo@M=ruakLeSu-P]A)m//&rnT>k-7him4llHM.
%Eu`NolaYS)g(k[ml**5.]G[cN2_K`KA!WSZal@a[D$sd9-J:P[TTYj!\:t*;.>S$V^KO8]H\Eu'X/51qS?3&Zi7LD#Bc^$VF!H0^
%G7K*8<6A!k2cAm&SZt`o6CD57NZ-15M-*;H)0AWO)r8]*'hp`d;V"q`%WVUP>[V/7A<3gDBee@/dM]^95F!3)h0lp6R.9j"r]1(J
%=sMcb48'B"J^6G:&bdkJ$;,TR&8"UZ[^h$Hjq]DB.7Lg@;.K_K<7:'t7q6V?SA[mIX<llK"EK?^k*Ejp8MqPjR'q8\k"f?_^&7^(
%W`/6S1L?j"9=q#JYWr@FE1?t=`;n*FV'rtS1moou6Ma7J!c?i4@$[68A^JbGiisr,Y$5[?4Rj7Gm]EL]+4]\.kYPS3`9Y'9"-Ep-
%E^@uXFrVo1[!f3rNZ6ChW^WeR;B^(WlQd^Gioihn/F&L>`*$k>8`+WeC%PMD6F@]QF'cqO,98tB+\>W+)ic('"*i`qA_7\I_sHEr
%o?-<ek[S;H3B$,kVO'DlOs2f(Z;F\=&aKbX!Z>crn"JNPh!93b)&Un+LqI2$n.'>?B!ccEM^Q/e,V=eP@OMk@0`fn+mlan)m`]f(
%6$Q\cEEW2N.9-Nm!&W9tNR,MSQACC1[H_\5(,fcpK#^FZ8q((:%sfl[-B&*El";;9Qq*upap'@nbR_*[\8JT[C:(bb.AZ!"S#N>C
%L%imR_@T^Jp(I27K/@GGgHa7/OEt>Z;clSD>UKPaCD_!1$;)6[O-OF8/9>aT-t-U[/G=%CarW$.g(.?=9H%5j9lqZ)2<);4%&?=^
%"9_p!q/G;(aS'ZifKiEEJhL<M??*ofjfm*8.Q'I4!DtniDDge>O]GYJdZd+G'H2bY!1YO[!C9[ZS*4jsmS[fNPPOug>^C"Lq8th>
%"PDLVI'!J\!OR50(E4l987)mM=AdS7JK3Fs(XbQdZDtCg;7iPlg8UqlSfP]C`>X_N2OlMeQ:Cfj%TT)g@sHZV)umL`5JFbphmTVc
%oM#[@,8UU%*%02L@bg:7IjpWA:JtB,X\+<tjG_D.4a3ko09WS30GVAf<LH=V_H(oF<(ng*?J5XY/0d3Ll4CrP7FUud;#*]Wg=T,M
%Xu[p`/0a.G`lHNrW_T>13reF40X*"cNU$@)$*%668EhK,*t*Q:+!=EDirudV<_*<BQ%;t":)i\BBHBY9QOZES^r2QDcA*1jB1^)0
%YbVg:JK?#$9Ls9Z%aIiJ834UK`f[=B*A5iNF1-NVPn;'f3H%lfA57t?8HXn!d63;?jqp;aYD4=<^uf-,E_)WM/VmHtEDg-<392IZ
%]-G&ABX`<.[ZA[;88EYmRs.:3j8,N"KqFhAW6r;9i^C5W3M\bJ@XNq&%`M:EZRYds6U"'WAYimVlYJ^]1$2;;G:i4oBHKYd@5<mf
%-?]U;Te;I'\s:TB$1Lf6X'9JXIr_hGo!!8YX+mi4;=fsV?a/OBhB^=J(X;@pl#-<M`0FFfI!\h2G9`kJRYl#p=UU.[lI/!]NT`#;
%"J1G)9m`3d5X%hE>=k:uU1,quo`%q!o9XP[0LC(!%l3`(PU7+qY/j=tDMqun)j`p,mkH$@9E@P+FiT&5hZG$;WgU#Z/ut`*:D'j?
%+M,aa:k,;k`65S5:_,t2[jGj_9Ci8V];Q+[MiW=u51nek>&+%I3X?]kJI69^oe`P\pp@GHS6QoIa?k<@0Q<[9KnqVL'_*/m']gb(
%\><T36"(TP=1Y/IoE=rqni@B*lu#:/k&#)_,A^!!Kea0RN1hOGc?]<$ONF[.S<J,&Bu4G7-nBua,2P<]-YC-?jn&B0DUJE`9?NTR
%L#*T."?unP'>N;]6]k=>X_Be[_I183/(U(^U:Z7'#'cK;R1N<j_gFVmlX,$Ks):"B:%hsjESd[Kkd$#;=$HNdR.W-B&g.Q<2D^.8
%0+Y788Dr35!I>rl\>m1T8e9R7"3UCqn9REq4A1cDd?>kuOD1"-Up;`^oM,M&7fl3tE[M0YeKQZK'C?8-&l&8F#s8M_8b<.UGZKBi
%SfQs2au2b=K:Y1>L*Z+DbS`IFMZB2Q^AU\,qPctVGO"8*@88/3ns_2/+\dp8pSm+Zj?:?T@<rS22BUl-0M&9@TsR[l,]]!:*_aMO
%'>W7Gb$rlI(<mHN\fo2OEHlT+\Y2q(rY7p>^,e8hM=>koil!$J&]g,A39a`l9Z"A4.,DgJL8YYG,4QMb*Xn0]g(GjhjIR[M(.;4s
%TOU%Y_BRQ?T?VL8@e(@Arsdr0:>].>`1b2Nn4Tf;G[f$i\.STRR_;eaSj-qF<5bPX`Q!b4OTu3[*%lq?dR^01@O7u+#A$T,N!TbO
%lN\lWRVtC50\B2`M(VHKZ9#TmJi*AL(jVcaN"RtG6BYdE;*sAs4YVRlQN/a8E&'19>danrSrb!+H#50^R=L"9RQ%=ZgkL<B>^XY_
%WaAQ!80lF'o&NE*'HokW;/@1UH29:F$j6q8F.K#")Bp(!grE1U-h99mE"d"@!P'A94*%Itf8[$=:(g48c*rO3-T2F9"]DEGq1UPR
%P<lG962:&g[@e.="SAVMMQp]&j2.aa;k%:^TE-90^D$_"UVQ[<\H<T?`L]po%"A/$aP\uAHo3JO<kYgRP/-M$@A%rJo#G`8T1Ef]
%[T">m9sAB7n?XU=]Gs0N!n93<`5I+-JA=+qB$*:>)mZq`)><=QIP.3%g%FkaU-2V^/MKc,##M%Oo2pin:)fda7Afc-*Z8*3R->T*
%9/9@$%dn-"E@YES2K0*NoEL/p'l-'WdP$gZZgd*4,Hlo;iG5C\5=:<;>o`$ofe1"pN-H!QAiY+C^_/)A7"#Dt9PlH8U>i67qG(>N
%J>D8W?.b4jBQ]<jThnGbG9f_-]rNj!-VeXKWoc\]7(nN>[%Puhh:k[ZC'2GLQOgR>!P'"ALk!;=iP6eNq6`iI;=i'Ur7dQQVWiWp
%dNbB,=Ic;'?UC>!#DpnQ.9R"ld>k(PWF_'iLS8*.W"ZT?\->Qq%#?!E0H%US7EGX`g/q6TG;Bdq,dd<Ab0]He:K+(1%T&*',<W*X
%Z=qr*B`RtK`;/KDAB.%l&!mAWFDmGpKP=hJ&=0S1./ctm&/#aG2t$OD0<J!/2hJs45.La^'P8$/#1Oau>tfWF&m/]Z_Em6ccaAHS
%ThLsh(sht?S">InY/-I92C2E!+V8uQ$mlRk0Ee-]X(oMXpo$@I,^n.5R3LZ[;X6(jZ"9.N`0Qgi(;\uD]I%j>n4Z,,f6(gJf0R;-
%AUEOPA=clRI^5SEJI<PT1+T'T\os9jOGN7o)n'J.%IIn@6>MX]&;`?,4&l5h[!Wr[4X!liI?`$Y4D6q*eCM9K#gA=6auZ!s).W57
%*/qdA]A@mL87/02g8[>2dC0<6D7kW(<DRh0A#+ouc3en5g1#ENE.c"o1BpVjG5<K6'K$f^<L(I,^=U!#ja.kb;fA2qNB13QHD?"i
%F!'A?r;-$KH0mO?7#Y"mZZ9QU7u5'@mOR^*0h>Nc>>HP>Sut`Lq(0\BQ&k[F<R\9:GX>LU`k9&;O,lLqBg>*o9-<=Hap^_LJVf"f
%\n$YOi)#jO]IU2j0J*En%Z)!+"r5j8=a*MbA$IG(k`F?l)j"&9lPX(`_guNPZ7fIGQ)Q(>cU[Df1oTp$>Z9<N4$M-e"V-/GW1HhE
%N7A!T8AkfXaZ(;j6XA<qN<eJt7#%2Zc]\L`3)-C'&E#dWVE3tGGomAjGoUr2B!/2mlS9-j((cit_"m-u_>l]`PtFS30`OZXQD;Wd
%Y'P^6;(PgLPL3&\K\3j[rFrQ+IOtts?A*[@Y!c%tc$e;%*Gki#SneK>"V933:LWUrr&X:RRa\.7-;T_[0;^64kZ4(=#U/oAgaIEV
%L_Fa#Gf7B)m^9tu$&Y7M1#3o2ej.*p<I1UnnM$H\rQXU0J4js&KSuP0coD2!nO/6BZHpF./7D*_@'#K=.!)<o>SaESKI+H;^clZr
%:M'oG8]G>b<`PM`.bY+"RYJjBeQ[VE&K$c[N6@l>R"B0?,(NsL"FJ]Gh6/hj)A=m%+eZ-_`.?2EF>Ii>dZRB]@as.V?`%Re#gdjU
%%4V#Sm:<+jU,brbJUXIk")PP:#GDinVc,pkZ5NMV2\s8`CJ3qJ7dRZ399qt'2K0i\LO^!]c8R4$d6L..8NoA_48Q#J/Nl!hX4d?C
%W%!q9aeV6)C(8p1\?]MO?l:`qYh%jXZ@25Ff$%RFQ'K>lTBso4+Vk)WPE<#8',%m[%0h6Qb988$HZQA;(GJ&_Mf'lRkUc:Z>,pj-
%LJV"nb:p5_#d3]lNa;Qh,P#V/%HAhLW1o.$*s4tG8iKn<8LGD],rQi*)I^:GX9"*ELp5k2_BI=440*esWFPHX:Bl8Wr0>&`1YPeL
%Kglu+9Hf(L`%!92f$bG1BnmtL<4LmBX_*qrl>]:a8>D`.ZD4-'>)SuJ9(t5CQ08$HI>BV\f19XZdl0OU(s7'l;BsSCE&g:QS-8Fk
%)q6<8<LH4W&GnTH=I)cbB32jMbLlD?FA?A.-u^7a(X^V/>I6c%h:]f$A]39\Oc[SsYb'J(:Jp[I]oidi6<[*u\Wm#7?3jI4dUUY@
%4kP+`c%S%0;>pR[FUY10:;1]lanD[eLcFBk-jT"5V9Y0g9)C[@f@n[e1-!,Io5i#`/#omC_K`d43Kb)+KTmi6T.g[MT25m;l3^'8
%KiXhA$";MtT("QH?Q@\I.l-0_&_!m;UdVT)V&X&)A0`pO6`3;I#j*G5=kHa+5)bk!-7$b1%OMi3AEa5nc,I;X@KVddrq,#_4krIG
%)$M=(WCCL<'5o>!p[f\h=X>:MCi>N]-Kl7IW;r_aGDHf)I"^85lFMEmUfgPVE,[#Xb6o1B"]m&l=>[lKE&8.8:c9.W3LsR:6_k2)
%j[11_LsE7G^0$I2ai8WJ0VEZ_qT`%6.nPOF?9asf5qNK(kn#90JUPlb$pp&5`WEl>l%msseH9cVHZO9tU*+;:DWdgbLL#Rj?AX"!
%(4noqA3l<P.u`<_1IZDZQss[h+AqV5GU[;r_"1N':.*(PB95_sE,B/.B<>@Sn2R2#1PNdDQQP#CH-P5i9=8X.X-@?"@0A?T-.XL'
%i5UfG+W1&\CaM2WZ"r>1.*l*h`m0e3@2nW\*\_20RJB+aIUAS/4sIKd&<huY)a9gk)B7rcZ7d^[6lq8n.SLt-!W`Gna[]I&7Os(T
%<KE2=*eL+jI$AZ1+j,J"JLI5&+!N&YrSFR7LK$5^%#"\*!@$&g5Vu<sY!F.BLf.cZ*4R>0LL1Wn:/)*/*><M-U9Y82VR*-GD62Hd
%'\Oj^b8_-P!5WQFLK-Q2M1$iH]`\V@U8AMt6W[;6W><HN):dM7W(p\t7O#XIa"T&^B2:ER)%:*gOaMtZ@f2`qK,KoW$0F&sMpu2\
%_S`%XQm)!S\CX\H:U\E8hH=R-)NSJKbp@2e[r#%*BMdke$R$bXlu.E-H3a7L&sJprouOM?_ektV12KP%1E7PcZU[U\$BHrIdqr8c
%Lr1cs12H$1jNK89$4Z:7Cq)'d^IYgMOs3I3(J>$D!R.`@R.=+YR*Xb7.=[J@.XrCO3d_L>/J4"T!.l<;OXMLMjNu7[JDaE"2:FM&
%DEH+1S,dr[$IT3l+t21_KHcP\%;cI<-Bt=>8G`.&@j`JMIMk/#pkoQG6ULQ-$r%7R[G-X(jim9eW&!N%B;eK&TP$JSeJT4TGJbtd
%N[L/jgXacqEr2]61(liH=V%#&5uCWUEujC_g4g=,`0LT^D45M/1\5Rbn2q]3!FaO3r'XEl0O9of9S4/s97nT=$,.kR2NV7ADitSg
%4"MgZ=+kRFLq1/g;,4MgWqVf#K:0@KEG2ADmGVn5in@,tIjqITYi4=NC?<p!'U-Gd^n$ifI.fqs%=18#+bO^(?bnSai>f0L;J@dN
%N51k:Kbm'HS49W8\9J_\WU?KNl)Cc4rj2uUiUKtuqP8>?)7l+7+GT,f5DYnscnE+*$'9u4"@C(Im(Nb_iacSV"Tb/d#h@K@660]E
%pG)`S$W7IQIgNrG#,@67*`P>?fV>hPR'l!b"?CYagV`muP)WVa&@k7)Ign&[&a&@*3E<l_;frD3\R,m<=M0[>02RsU)$4d:!_g:a
%fC`>=0^@G-S.Sek-Thgt(GqM6oCO,>AtCK2QtN`eVM=@$gn%mVAHs&?'<]eA&:dt?VL\d!-Zaae(^:^ID,/Z5\N@A4MgC;1ksNS%
%.?N'C^uc##3!IFnd[/)..EZHF7Z!BlFXLWR;iq"J#d2'n,.3ScMQ6gpF<V6[LQQkFiLh>W7D4;998"JO*/G>X+D=Ijr)K!$$XsB5
%`=[<[_7"FsXm*_7TOm.$OU)Rf<2bHo6JtQhS/?fm*T1GX3IAFo)<+fh%^R#\H]#Ki8X-RXmO%QAUN!#d7BdC\eqId@\3'2iWgk,:
%DNsaO>Gn.K#s=)@@ino1KNCNb)as>AKlEcC4W,2AYX[4Yj6]>#L)-.)G/8M.(_6u_1f,=8S39,V#2bI&aAp]1=n1_Y(2W5$Lm/BL
%M+teNQoP8O*N"UGA(fel's?m+!f3]TM]HZ4\@3-0Sh"P@HG(H*hYU`Cp2Y7;%Y:`)=1OVCm=5Lf))9W7-.V-cXTh0QJV!RdcHc=8
%XMP+GJM=?KQilF7ZbBaO2G6)fA!IKScY=b^b^*$u!p*>L?2Y%&IMO:s'RZTQ]uZDI#1N<IdiDqcdL>7ASuo?j$Vq5o#rEibH5.t9
%@'nqc!;]UAG]kqK5XZMh:!_=BZ-ZS!&+5.kD^ZTuK4._S=;>lkOibVmr2TinFb2>T"@9\R7X(@j7U\;k3sCA"#u`2nZ/gke$gB'j
%0\>685r?P*=-Vg^nl2u[3)dM;T[!^L@daAmb<G=-n2`BK@D\EC1U?Ge<2ILr;sZu@B*uFf'ID8Go9fkpgc>:XmjAdjEgP%nh;7<#
%1aIoSL(_QL9FpXLTnj852"2m#<Jb2tFppc)8rmMI:J.S'IN$Fgg7t^M>s,NN>4Oi%_miWulK"Kn86fn-Wrthj?d$t(l_LBF'.[/d
%FH"2\`cr:`bQo2)Xh'Ns]SSDhjP$/FF!)c6*Mok#T,Z**)Df]Se].D7gFHWgb\Rc6,(:;m5l(aS<]Eh[SZ<9OA[Xq1Kb=sD.-X/t
%ljo(bfFP>!T]dDjFp=^[c9<_?W&7;GJ]6bV(tR4T2_(bI#)?D\]H!B[Qr^G+X$WS+D:NNe?fS@#*N(`2(6:%)Xam`sC`(V9>"Z>L
%nI&idc6F0g&U`W,$H8iQ0T(%U=%h!\6ECV;)sn!];k`s%#08KY;&5l6mlanlK.!rB#MVZe_)t'2)1cW>#L05WZ]EhakFs0ZgV!KP
%["pX&:_jh%]K*Cf"8CnfhBH_+-N>8j9@p]`p*?>ZiFKk-0hEdh%iDBji+^E"'WH'^'aaH`mQ(H0$p8$%q4T2@P'0GEULB_\-g;10
%8kl^(;J5+dC2TUT:+lh]k<0'PbBjr."^m/CFL^/r;+V[:#/(cd#?l"!Kn@2'!qRJK<**:<N(7>?Lbfs9@C]ks"YC!PH"rA!f1oP$
%*N4dU9Ja(%_1cB-Wdp\M-@c&;Yg@=:FCF[>*NCHXe+%gC!kK2;ep-c9I`\'Q]L*)leV\-35qk5GE0bdskV`oTb9Ka_<JC!'CY[#h
%=MOoD1h7RQ7^+ZTT\D43h3(oC(s":PP3*R^b@B6MT7UAQ&Ta/>cL\0KnY+&7m)!4rBm;3pStEnJDfL[L+"%Bt*7=`3O(rmS0LYa<
%P0W&:)MUa6@2`&>F6FHtTh`uAduo<Spf3qRc+X*_-gpFm0`^d23:Y67L/NYf^KV\`U]qiJ<p$6@iI>?/_5oK,W/K$$I)dpe-H=d*
%h5kkBL&a@FRjXWkY,E4Ro$A'?9%U&e?'YWO.41QY47J%>T.Wm&\b'trI(WZiAN8hZ%*);th?YTeOM8DTm?]$ObJhg46/FUVr/\tZ
%ph5jaYFd-=1HUI"kZ!&jm3ojL35)4oVj1ML?1O@We3lT%D8N&[_2B:HGF\icSOCBC=0tpGZXSV5>=@&KqeX/uP+0dP\JSMPiO%Pn
%+c1&2)lBVA+YoQG@UKg>D)lH445A8rdfqGJP@1iBBtG^9$8cc`D(IiJ2?)O@@:aJQhbG-;Q4J=sG1oc!+!@u7CBMfs1XNV_7SYO`
%7X/e2R;3!2[F[=XV\+Xb]f'PUF$+bcnB_[j;!qXoag!_j[:-P9`g/`L\A5X`CU+B]OPoo>42Q(FAsRmcO;#`I].BMPM:c)l(cuJ/
%?S3;QCdrG`QYk<-_7$mj'B]"9nCaHqA7WL]b,'K1B+KBpcZU1#ot:7+.c$/18&#p;X'UFc1Np'EibKt$8i;)*1\;^PRl4r__#VSl
%CnBpICnDnj_V9HeYb](D&29;Nqbu_%W&[;.LDs*@^jW:l(8St??qjMLEG54^[=9T4j/t2$U<>tig$dMV^F[rb$Me2<CQY8=#-D2)
%DkG4]a'V2g'?dn&:=mdDU5S8\\%<5%YVHXi*?HV[oYQE>)4@n;2e*pC-,6r,Y!oV$o?hbA_L&/Dd8Q".koC'N_3mhe2%Pu1Cj,6!
%F-FMe]q(f9+*"nb3ET#uI&`"uhTcq'I1$O$SD*#Q(d@e9gb\32iBmX6od7s57*FMI$As0(*XfRWHr=3EM*b!mBSGWkEub$d#\Ve\
%n)8Qc&l=p9aG(k>RRAuicOi"*9R!BKpF86iBt/$&EtAuu2ETaG'\L!Ecg^"SDV[]]KT0auc@/mo,@4JiFlZg^HRq"T<l>AbDC%#_
%';^tlgKZ*&(<f&:`mJT'aE@uJ\N;R@NfJ&m6Ea/L\dr#D"gqS:S6c46S>e%(ZRgAANM_],6MYqk1enSuMt"(n3B\?\0B_$VktE.U
%@i`fS:-2kdi$bJg1hVj:GT>?k_lF/IbQ?MY?+XL&_?"tHiTru`7qqP[]qL/l?D&ZV^MVO:"2*pj`t:;p41)u32oGVJL6*UoW>RU-
%Esn]FFiEHY4JLB.PhBH&K*UpFk*;kok@p^'\t4n[jIM$=G0sNSH<G(:^j4cF?u/;XpWHGUJV&+#e)\-CJN4a*2q\l_oiN"+#\'LP
%N)(W>Ha<AVlN-."LHKC(HdHt%ll7ZkN2GFO_#%id05#sJb@`Y+A+0J!S`0m?B>`XoZ`/*<=.u9HB69>4fkkU/YBds.0bEQD9lAQB
%F?\Ko)3Y3P"%NUKRS7kHf^(XI#(+(o"If/rn-+U:iDHkO`'FUl)2CQI3h?k9ZLROBL='?gC]c?bGBe3I?Hih?"H-rY.XYkrI=-7.
%rN%V39P`t9)g#&1U0nIp1(,JQdU[bjE2=:kP!O(8JY4%fFm4_EAnh9<1rYnA@HdAm7[6?R(_a%?k*.#giAH"!?D$B<8UqbMnEB(\
%!m358E+-WEA8*8RA1q0T>0!9<U+HV?`c:8/&$riQ8I2WiY*]>g5)k-HR9KYs:Cj*f_Y-]ks,7?tVDd33Ql(hD;BWu2Ikh&Uf88bt
%MuYgO&CjIM9[kg<r`u7Q$1+B7Nm6HmJMH@t3^!1?B`Jet#*?@["31(9_\8aj)C@YjI2,hOCr!_*a)jOA<p!_Oc)p<i?jIZG)C#0j
%mU/7&.8H!,RB/%_eidXRF"=<jK4\Y2fN+qYG1)&uWM/qQSQ5=Un*lYd+*F*g*e2;MXuAsiO`c2.NN)t>!D>K42":RajRZ3:J9<$0
%1tGRo;TrSq1JU+oph&auHPGu=R/7Y$YH2WJmnp)a'k'Y#q8[EPK0cG$f:,P+#o2Jf1!%3(>"s2@lm:5J:;YZI66O&j/>[6-6`_6$
%TQ&`&q@C*Ab&b3a:_TsM5b+3X*Mh7I?%^G55Lc]Y8Xm(*7&e1(io"Q#nT[Ekmnc_;V6&3U9GABdol0#sd\gM7=[ALYU^;eAe`uW1
%l.Iee^fd$TE/eq5hk\VS1*!s7\g0-HZ5@IY%nnp>?qWkOD&XIH!tQJ7aI/*d\cc4/9)KftS/jn)A6S[8%F&C&bo8t!k-mjA0#^XF
%:lkrB;[HgP#a0!h":<D[!_?c05d-LGkM][*!"D^-1dhm?_TpU?4W5&;ej1Q^"ELc&Zds.(K+q=_#?O$<B2(]HfqH8=(%jM!VOZk:
%3jNaB#RUPD)\KTCfeDZs4HP:.=[a!p#7D!2%O)Qh`:5:SMSOVH28R5Jaap^TUKe_/kB>ejIEH"4aS51#6''V_1I`L1en?5ap@l`r
%n.;72`^^Y$]BC6>P_:t$.>Io`W1$=lBGS!AU`:-!V-P3couqOk*aF@I&riejggip=\@Jpc.c5#ZNjFV8Kd(*c:;].Z7*Z*Vf6J-I
%`7)5G..kAs6N]h17_^.7!f(QK<\gXtOb5W&-)#,gH@b5eD/99aEB6rKQ57eR'mCt2A0He$@2UFdC4O]fbRs5-#gQ/1[59Z[Q>-:n
%_iJbJ`KWG\Y:A3W`Aq#t_N8<NAEM5#i5u-K1M-fo/D^m]\T=t*;\9.A3Tji<5FjBVPkh$+Ou`dA)shX:ljf3bbgW<@S8A1>?IB)1
%AQtg)k,#r+=*4Y[T<mnoU(`Hp;,A:s)BR-_Cnqof*"!;tjDhFViIYff9JO?3Y6KA#gL_ff3">gH@Ua]6&Hc1!d2EuM]`uM75FTX;
%)0!=5.gEP9P#$%<Qn(58:H2:CBW$ESQp7V1%s_eXrOTMbe5RY]G044OPDCb`$BP?2h@C2Nka@rW[ZrjoSOQV7Ec^7qmM06aACdGg
%X,k_3QFT\iZuI"oZZi$R6q%O.HEIfYg(?,#'k&gjG(U!8i+57:AXAjj&JuQK#Z:Q@_Bj2Eie7EVDn*Y_L"O$SO=hc6(U79nH,YX8
%#j8:8CL/?'Q)MrARhdaL-6`9I@DeU!\qrP=.B7uq.O70Y@FhBE(Xdr6'6Zh[oK$5hmV5_#"PMfp]U?j5EZ"\5+P;m<A^(8Jemr/g
%Eoe#o@T^kiGilk:6aErdjLDqE\;Ah@9qE?()IN$UWPj?FkWY,,1Ef'gqi@]ndQKA":BEoJ9NH>E\2Od)*0pL.:K5ig$A90!:=DLs
%E\g[;/O&MtAN<ooI8B,S@cUWmGP!.SZ;O[ieW'nY<r<t_]b<"$7"rU!oEPjZWb]N]i]#W)2'g$#@8%6LQcGYU1VbC@RXjgjC-e^/
%0W^[<nZ#8Q;/gGTJ-1@n;K^hB_,[*I;8"bP+t7kG?)prMh.<s*l)bVF)[DrjaGBg9B+%^/Eb+IJJn"tYI)tkH!!0'k"s71E<nJ]Y
%012P_W'mGGK8QF*:s"?ORd%^O-cX1KF&tneI'd7CD/g=M=&ZL\?iF1\,K#SOPT,bN#X#gtODl_<Mh6V.hE*OKk!BM7nR&Q9i]I3o
%`%6Hi?.btAUE:GfaJ!am&O\u5<&&IR,hf["3=\#=-L(>H0BF?@7=H*t)^%1<jj27f-#CY7PIWM-NDRdcA;J1d>80B`26:<)EPPPV
%J(8ehW!R*!V2R)OP8ioRe;6m8Qt'`(U]hta"OO`3diK\pCXBtLpOnA#^D*r<N5%HFH@Y*F7Q0,XV@S=]cPf:9.)@''>sUtF1a'^S
%*QA\2o-N>-KI!n$:=d&ek%YZW8dVnXUI:5IU2g?(K\GL#Ag1AXAY_%A/^<('e^P2jU1`jjFWd4<ocm4p[K26N,U&"FJ>FbD:<pK>
%;^c=\V!r!3Zie9a13P)HCB$^sBi9O+\-26`A)Up)H^jh[ic,*//,T;mUSH)LfAm*c.>$SPJ\5\5P9RulVK3di"_2on[.Pg&.m1Jg
%LiBIY-BH$^'l-aP<ff,AI1?r.cY`hI'P!2$'Sce\Ef_J',?H@fgaI3a"`ON28Z+?SLRNe"k(f(KP,B:n@W4Z&k7g7;mWE=e5&sp`
%aNE8:B@4=TRgtt`9iXdtpP:G(2chglUP"+"8+Yg0TGA_VrA-e/1/AEJHU5UL,D_<AM-IlDJ<a\P^?OX;Y(Du*7>dl,ZmLhPlK,N]
%I>)]S&ZQp(Zt_/aTi*@/(pm4L:HJ9.p,X4]n=4K9BKX6[;$B_1M*7cY3n?k)PplRgPSCf]6fG@+U!O$el#j(@c_7cuqcW'06$r-t
%l-U;=G@m(A>$N=<7HJdNH_UMWdE#o8Lm#I]W+e-2>!+::0lX[6LCW8nl0+l7"YYD"FG>iqYQJ+"(7"ZDTN?GmXh&9i.7LHV,*BLp
%)X0\54o!XL8p?omG5Ws,06CG9kAj:c3,l))Q2Q>*41#[dk(>7G4VY-CTE.$-_O4^.:@t>cKX?X$s(GL_l[kA3"3t3Ga6?M>L.c<*
%I&L&X6X0W3X:OI,oi:`FI1-4KLH&<KSUr>Z"TRG)TIc)r,tin[nH"^`m]PQlXD->/#i@)-N4LdHbG(r+QFRL%=l\#-9,CHj&p>@Z
%D0a@)VA^hbm&spT3u)_=M]=eEYa^PEn2r:s%ufTioGM5PGPnSAdk;jPZ[#i>R;7B_MFsh6l>6j$)*/<qV3O,AW_I>!2HRnBN\HpD
%MJW5($nS=OWMQ)oOUb=edK\%WPrS4`)$1a%G[H\mWsVs+LWf*s$QQ8hi'1hOS\`2h!+s/S=n+aH2">kmj4Ws6`Ue%6oQmSML6!<.
%/0O.KB;1;N@-X]K:1^[A7,@XRZt*d=0<*.M0bG5I(=Z2J6pb=5=/W;s,nk\<osX-lZc*N(*lY'o9Nj00_ce$<Q)-hoN=Z]7Ldt3#
%D4m>3Y+U<eR6=ZO>!OL0(^cKTZ%Sg&JlY(Z4`RP8)u*OEAhe!BH@uPR*CXT#MTVr@mkCOlUA3S1@$-#^5Ul6^H%64'*Z#;M%ZD,J
%JV2#E[1Yt8KKM.P\Wc=k7qkm'8%<.*ra6A4aiCA,W"mROC]-peXOV$(Y_F4Jdo4P'A-o(9o8!kYL#PW[L8K$HD\:>Y\q=mZb1b<#
%,?\c]7&Qr\Y>9qn"<jk4]!moTF_HS5:VqCZo$mlRc@F?:E/08CGZOIB6C'6A730riQCpX3!7;J0GXLP$n+43<.-U\;+rg\Y.k#C=
%g7ZH43pH.05X,1KKI7I#06KofZ,dL\-I$J-KI;X$PhOb'SjWgb55(B59UA\13ScK_QOI!RiGCR9GtAU(4$VLL:Q!H6/KQpu91L,E
%E]td4n_[a&Lo_uRM*S$.[-&`&Ynd5#/aiuQ0XShTX6%:_,m1Y\nCTJeH-)/lcAot9lLPW5?o(%&WR'lQ#2SY1oG;S@Pgq2nohKsB
%@OA,7i*hrtIsd'c`9GV6h+7qBPlKgBf0$-:QiQ6hQ%M)naFF?U%+2'G_a=e'&u.4EN7j<rjeX^iSHItRbtIG!JoZ2//:/0)Os+S/
%T$s@9C[80p#/(6:#Y/jWK6!K9T"W'I2l)5Do-opWW8&"=>^"iq.n.?9iphD/E\:LTj(lj6>iOd^,Oh=`VR!$9d0)#29*W*gl(pJj
%7.HCL+n>3bAd]XdVli"m@Sk]t>b&u$bFT1'>Z+@78M^p/bb,GKfsTKRHWaK2ijalV-usHD2H;QfQICI<a]%6FrNRa7GfUEtK>="m
%HRc;(L4i)XG(&GCQQ2--N<JB6I]eh)<j)&=d[?lrJQYj?4%B0Ta]$?V/F-';;J]NKV.2NcdEggJ/]V4ik*Fi"FK-!3o"^Eb/QqGB
%WStFpaqW</\b".1Bc&'hc/h3:NJE1q(7?op9RZY6-`n#$9TUJC_]<5"f.E9Uj--RXO`\?Kg#YdU2h/r,b3^7Upm5BAJJ.eXlVPeT
%cFqC&GYj8MHnQW#Ypq;cW&2#U3$UL(oa(I15s"G!$c&@?f+oYBI._auYj)454Y(\WNh(^$>mM48gB1D.^!]5dF&]Ub\Kbo(20\CI
%-=g"2SLYQ]gq#Q@N"t:aA[L?o/M0]G3][McV-n2,8<rGH&2i^<;kmGp"tTMHjcLdr3&sImO>l]kb6*VVEZA'=bkca\8.ul/5oten
%K%b7$Qaj"`jj#dT1fY@P8kS[4D6,GJe!HT!aBrPAkAeHi9>kWpFlU>ght*_piP\d.'<GG.ggYIKQ82='mho=^68`JZgb+)5m7VX1
%=PH1.LrnX9olCJOX@Oj?%l&*NB:l#Uj?bOr4_*.9@f4ELY2D]/K.s@krM[`hU\9clVcY'n/!Wk4KFXMlQYa+.gq6=::.mOOplr=4
%0TuAs$dX./&_^4cQa@$0j/sH])QklbAf)lSdHnHc8=k9XGN\q9.91*.<pGtoq<ZG+X-A0,<IRCUdpq#m"ji^o[4[SBV0K!T//#!)
%YQ!KUX@aY7_VreAEf9#te<=0B/Du4_DH3V/0tan=\Z4-5bLG3F0%5HZ^XB1<9A55,HBm[Vd2qkZ4DN&"S75oYPoE+SRsTliqkhV$
%a3&K&Quc'/;Pl,&P-!.G204[DQBeasX<c'KVBqKppIduIQ$`Mo,_(hBX*uH;B%^Xj<JJ*kgp^65`Mlm"T_YgTRCPCU_.5'WJMA>L
%)sLCo6VP%oI&iLZljeFt+@b$l_pY,rPq+&.3)ZojZmtD"S1A5m9W!ZUUamg@<bZbj?$1Z5a*!dmUo7l#Dg0p#intGlhGoo2'%i%B
%b&Z*phjIQ:@O`sce12(0CJibkAF<H(?0b;.=,IM)+ZTAAgK,Y_fiP2Pd@SgjdTe5J"#BmK"a>fnX'c!pkN>Zgb*IUDm<qZ`<1/?g
%V5ZJ!^`4n:Vcls,,V4GENjNG-jnaia0@I)nSMG]V4=lhGKY\lB9;,!H6VNmc'-fE<]ojUFhUg.B+;c1-1gm/cBecfi4;Y96Gk^tr
%(U6+\7f)B.'@BXq6VTg@>)"7AULMjq.Tck]Z)r.@Oc`+9>%]$-$WH]C=^9r0XD]FE3p.Ko4!1n`"lGBIff9%E99/UM#;f,A<ftfL
%c6=_7EnYK='n)G_0mki55-9d(g_:!uMjcc11Kg-[V2-NP;T+\kUAf0@:o'WVlc`^#,c<&nd@N_K>Af:JD^*lRmpSuZ+Y+lE[kDig
%+WKs-rnU,OBihMG(n6Dkjr-4eg+[Lo>@i\BSU6N%,-k?Ohg-XOoha`U,%J\9(W)[4MRE6G&2isJJ>AE<d5t8UMc[$iOjMUJ\)Sq1
%alRLtTtZ\c4La*.*SiS6b8+YKlZU0.(?W'rZTR'-;7c3Q/nLV[-@CTAFa:b0_'i4!ZkD0+'cCQ)cD19Ja>NS5:?qb7XL&FoE(Ut4
%Q4fT]=`2n0o-#2.fgF=q+u5'ol#jV)ou!>Tf.N]O(/NM4SS\s'jRjt)70s<&!6Df%dT'f5%eti[+1r$Rm*arC4ck"MMf33BN/*]M
%ke343kF;1@C*%11RH?4R,C#W^DgMqImaf2feJ@^)QtThq)>7l\h/)0loMe5;X[3O96AGg_>n:u.gr_Va0FNsk+tVDiE(,`mA_0?\
%4RoqC[<;eM>d>Pj@11N&/Im:\4RX1*RV")oGc6q=`0&q]FZ#DKPL`-dhrm,YIM_9GCs+G'HMC.1pN>F*hu0]%M@(N[J1<$m.1o!m
%/^^]`*YdTL&[2=$UY=DS>t%G@[hE1tg&Cs&U]!<8NQABd"XkF,,@q'Fk:?o1Jp"a$n/R2Qhbt/nF3$eTOr$1EcK^p0@a$PMZnrah
%+OJ1"c\qWT%UhWE(K]]ZF">Atep79I$a]`?gqC!gPC.%VFhG*c^9@0)X(rr[hii=0Bh.MN&T'=p,SRbljPHGOU1o#/-;f@ef)LPJ
%(\aOq(Qj:+q(=ZV7jPb"TW>"i)3+eQJ#5Y4X(@E-drILL;f-rb4<#3$\l0f'`?oqp:L[1)7ljJPXD!<NL(q$U]K>[IDW`cqS;5V9
%+MqAr.k,4W4Qfi0p:S,76mimn=%[<`p:1g4Nf#7>Qa^'2![sYq0(03]<H^N/MKk)1_"L1!I$n%0PcqA:diK0TQP?EOFAF&q\eU<=
%ZFTdKFjdI`ZrU2oc;-n&RUWaW7%TmR39#R3N-[n7iD,k,-p&g/D1ZrSB[%s@A*42oEeZL`q^V_mbjA%MQMDp0OA%sRX]Rh8XHM.3
%<FE/A=P'kR^crJ9#uRP7%5#b9eMG:r-,e+ZHf/<T7[(MN6M?@!\tbKVfaj\/X5\`YAOBg!B..l6TU)@+6NY)aZ-FS7J4fO?+s]Yi
%)lZ-^7'Uie#n6UK6Ec7R'-;CpWP[f#7?J$O[ZFLs,%"1QB2RI$1K9W2HPm72,*H.61\:]J)];X5MRnfR^dn3[cKhIp1DK-L#bSEm
%:Y.9]VT2GA&FPf;'J=C733-Rerb"t1hf:4274%nsI.:!#pdi45%sVE.RX<nFKbHdrO/l+r,+OH'*R,ch18"Pu+f_7hML\@40X;pV
%pX/SFL]SHsRdQ3-%I7<^lMh?5_J=6'nUi5A1InCf_c?lYg5X,b$]l5G*h^QIbQh]ihh^$^1sgqS\s0GRFJ*`9iK5EIqK_)ieOS+c
%&f\)+p[/U\QpU>^=&Vn0%*\oHl-\'iUYlEA@ddqKs/1/=p^<i;'/QA0bqd`>=[LdN91fbL&J8Z@3'sDho'+fs-f%u0M1T$K&e&)k
%]&[-+W"6X.6ndD$6u='u(Q+>G#PQ^W3sdu@h<PKtL`_g'$#\QU*s#4kj<\F6qgt;6eSA2cY]!Mf0fQ'#'m_!DJaBa#rN*fJ+\F(4
%_Wqp[Qk</d\7slE99(US,`"mO$$5H&lS25@0EAmF"]m*eR"o[2S=^m0!Im,iH%m3!ZdVPn$'mFLfkCp31;W\f;c!PR_NAGP#*Fjs
%GYKJhbHq)9,X`@b2_MQHA2q(>AP4N:CCHhuR13OTdg0U")ZZCeAt".4*]?o2,KD@2,IR`Mc3)j`-f`1,\'n=:^.35`@F.RrPe/k,
%1$j'$1#uRdEf1f/"f+51QI29lG7`mC/.F9=1hGM%%Slp$i+Gc\3K?3neccd_>!p;f'+#EcaAIO1@Ff12L<Rk-%Ef,&]5*Wr"\+Q@
%4cHV$1/,Qq&u%[@Q'"oa$o]CA7rl%3.^BZKpH6M<pbM4Y^Q]N`,B/*"_^b?e=&;@[ERmjcl'?$bi9kQ#P&5&>r's#F*s'Ac(i'pn
%2%*c]Vk\E1TQ)8Kj4u#TgN,aq5u^QoRY7NCqGErM-0kcNUF\qZ`AF0&lI$ROT=5q3$dD!83#2KcO#`"Dr"6''DAp4*9I]lF;Sog)
%J0NFu-M-dA&jO?5H9`\oVIQ=pTS3R%?RiR]]S[N:@YrkRWl)e_#2J22)5S9oOMhk2H<9u5<OepiXCp>V0EIK/+dL-&<li8tF@UkB
%;9h+aKo;dKBXMbR*o`QS!`B4J%2N@EduF)((P=,Z;Sr$[<T;7U(<*i5af\^&c!$W5$rh9g$6=gT(W3(iWS@*M)o*u[>D$eB[3GfX
%9"0c!M7u'=?46XM1doeKJZU:i*d?49M\$Gf'WXV;okJ#e_J]e`HJ]Ob4(o.%OS`-7(+_8+2fXJT#,[r\=PH+FXr%40N,d2mcDY:(
%N#gIhXb/";<-2`tUtMRl'_/Ro$\:EC-pYF!hTR>f%`k#9'6/D_:T+g8c7V>?`]@Z&pHNt+#ckjA8sDW3'4O.ldT&`;)>2;u6Jd;D
%^7j45VD"("'??)i@`bsP?a"'0_.[@,1FO9]Y,FZKONkdY7']\3?RZ=C5o(aH=S7Xg8_i-m",FT_[p!kg<`!BFF5g`Td#;+%!efkY
%^01)$J>]10S-ZlS1/EX2q/s7nSBtAV$Je'I0.sLl!r_FKB9c6m8n^U@\DLk@\"GD5\R=LGWbs"%+d6mlhHoQY-13elP"i#':9SBD
%R?3)bfc+]8HK\J3Arp8qh:mR,"`D/JBJ#@H-CRH,d/(90Zd3oeb3m/?5tRcfqt,2I_`,=mYEL-aB)n^&.'=sf+VM29^e"3*os+UJ
%MF7)PFFf"T*<AoWS\PRnmUAT(&Nq7BFUa86K:Y2VV5Q1o[Uf:U5S0N`4^<jG\""P3G`2LS)Te'B;3J;sg[f*eifr5I3b8*Oop4@/
%lYEq!^3o^R0/Yih.dis=X,$tb\4:"b'50IEmDD(unn4/WNe$=dDK0k/AU>\Qko!RXIQ_5QIB)IE^D-T\Jp=sN\]OPP^W"rcY"*@O
%o^_C]`n4Y$WR("=B.:u\/EXEQL6_:L6kFj04UfRJ"2YuDXns>/pqc17rc4=DnuP<7\M'LN<4"f/aW>s1(>gdV*k?^GbI@Ldd??u,
%6\=MHP<=g`S4#97'?jq/aucn'_Lo-TKKsN7BHY8l'+hM/Qa3?+)jD*IH7J9Ud#j]KC&Z5`WuVgM<T_9ma=468`/k%?/4\qQ1J]+Q
%6W6+4U\\T-JO_+PLH[1%,V5oL/Q7-+1@F<Ca2Y,O+?OA^]!Nqps"I2D_u*.t58'oXh/@b0>5Ih'QX+E1A.`_tfbSIn-F9`A>J?nQ
%k:&=/(<)`P\m0n@oM3SuDeInd-f;'H0uSbU#+e@$4D%cZ`oD!L"fBJtqA<S(WdgKUe2N;Re$9h@]oY8+MGj'fOq]Qe\8$k)A>0oL
%f)o#ss"na,KDZNZj?!^57'JWY6uK$Y^4^)/"`6V#([3o8_@4$eAQ^Ie4[^."#KiTJfo_/U^q"9&`?uoDU)TB'ZL.n%P5ooJO@H5D
%c&J:T"SDm,>"Wf=*43m;bJ.ShOI)o)m'@:`j&OV9Y[.j3nK;84N`q^3:1s`7NStdK?!:`-="$+)S,?:Y#RaNLeIo4mi#hKr/9A-)
%JXbFsX,%`0/*W_)q(qb)^5Vh'`s_[@1MWs%DZ=P;iVk,p;i4UL8.l;G0mqBARY<r'%FN)O-"]?B2UZWg3<mtfe$YRUj0WaKk%NV2
%1mL+6(Wdfg0#C;;eZ;bl#e%JZWA?k8L9a-CAnP3Pe]u$16]Mie$B8BK7%\;a'ijJ!$\@WdbWR;jcPo/BM0Z`*i*<U+qBLNnTI^G?
%G`D*=`0Wte*q(`H7"Am>Z/U9L.m%A\L6tH=94ZT^4AXL[RB_0?d/gA;b\H=T`>kdYM%kJR<2/iCLNlQ&<UG4!bmhp78:k?q`M':t
%oSg+%L('!W+)=='J*ZeN''Vt<\%A+1lN#;6g4V(=4ObIU?!,pm^tcnnV0)u92TD5S<HoN(jPCXecQt\Rj3Fp-Y,"`#(RQD^F)q^j
%TfO"],DG+>a[@biBG2`!3H!mP3on&IFT_BM%=SqY,V]XuQ^AOhLb1.GaH!RJ5!!lFN#.#\c=$oG<7d"0M;lD1_\l,c^gCIm$>'45
%K1[Qo'(N![micCSEha7YoI0[uBA-m9]9*OE09+lB7;W]dN:An+1C\?A[topA0Y`P873N/g2;rW/-n1R6,r-j2Y1HY<M%<:=bWQF*
%_[Ls]5".]PlL)5(dS7C07pqF:K]i%a`?ge@*E&bXk2V^lobm_eM48>U88n%c5HZBjDW^oP%j(!6ReNZQkM/j\rUMW988"Sn5'j"I
%"qpRWmD-Os+g::qkhWNLa(H&=p[N^nm:P4irnrpa*22!OdM<"]pEMWMrp.&gIaS%TpBSB\qh(p$?>fL.;)Hf*U=B_n+NO^3I62bE
%lsXRnpi[bJ8)A.Gp2[c83Z#QVG%lfohYkN"p,Fn<GeN>>aSUTr^]!>LO7GTBV"3Ja\*i8.></P<NE^`@+l+T]M1)jFoO55_+"p(S
%=\4[8]Ofi@h8F)MD3%qkE;T<V^MY]N?[@4KrQ*T/s7@N>pV6ZN"Xg8Ln=8D8_q/7Dqr)J-qW<":q_-iUqounRq<Qr:mc2pVIK/u4
%rlIV)l,.H>o,n#-Em;(Cr:Ic(cSp@Qg/fH8GA48T*qskcJ+M!9pcbi"H"naVpm;$4H=fqJrFc,UDgq`b++2c3mM5chS$2k^qlg"k
%rI=\3T>1@$rfk1tme`mis8KWK^Am>rDu]^LIeES&IJ)Fjs5$-CbBL_Y+8PnYdFYU0q&ab(gGf0+ofrH7X+.t7^A?;[TE"8-hB/sZ
%8j(r#G@,dmqes7Kdsq>]o++"XB=Cc`Xd5je*Ga1N2XC:a/D5sh-Cp?iCd0k%ELabt,M+BXrVCu9@oJdp@_;7@k0!(R[qu*;>C=3L
%rQ+kg?GHF^.CHkEG+^(L)Z\W4roJ5]1i].O]BnM<Q?\t7gEY<!]t`?GT]aghRXM\f/C]aXO\>EClaQY<dIkTJK3l:j-Q1l-]pY!.
%mle>ZK(S#7Ms8mB8\KKo8!d%/+V%n9`MZ2)=JdQO-'H0'^klA#>3UjM9P<lJ;o@gZc0=I15Z^=(kbGM[->K=kiu1N)J9D6-^(?X;
%3G[CYY"K#)2u.NrXK0\,MK8`=5NHN@hS))l;,t!LpLH`N`n$OE+_F![>ce:W&70rDFb\p4LN*,=<[fCoF\E;%ha>^'cLss+B4ghA
%5^]SB+NY)PLlf:58QI'FHqQIjg!AHMa'`o&rB#O?"hKq*8SgtHPoK8rm"iP`c4RPhKSG($?+o.)GZYr7G7!Eii`\nX`")=f+sIn]
%7?!K9"fYjF%a"pd!?"2f[+rW+$<^)`B4A9hPpDiX7;8c5MYTk8HPZVkE>g*Z2e&`GUE]fiA<B>[>FWV%5i>;k>=`_!PQKJ5P-ptA
%"dIjmJ%hn&6L69[ij$2qXTC60%l'^k2K+AE_"`&aPJ;"DVp).Dlc,c7Hm;"o&UDcL)Kfou9U8,tguD)k5ie#u5$`T'I&&g2GB%ic
%j/Z9FjcCMVqZ4Qe<'63IFbrDM`DW\KB.)B%C`ONVNQ8^KnEnQ-LTUI3F;,;HLb>_7?7g>D;<\BBk-a%.PtO@kAcT;/F:[;r-[dA`
%"PeebkW1h`N>Y=U\=Qc$rTqYUO;W:):LY??m2[q%T!DLu&mJS6ob(X`bk\l0+6"j49meV+k#0sSTWJhMdnGEGDKh*)j/'U7I?]R2
%N3^nWciYUq0/YnZ*T=OO:M#7#dM_=t5o'fmO<GD9#K=tJS0[-gJl;+,*iH$H^IW0sI(9Ys,M'5ZJ/*&%e);X0?+*Id^3jhXCp>Hg
%p]P"Gin)iBYcYo+KG:d+1Mj5V(-`=:l7uHsHreFR.[.jJl#V6s<BYIe^:h:?IiLQ/^$<ocE@2?R4FI-uk]+Nf6*7$jaTu>^7IgE.
%p+F%EA4^t$]Rg%m3U$j$B_[&F4d6!^+<UYuTSZ-)+^&Ik?o3RPM$!^jcF9+-T6'F[.TRl@B5oNYO1Xk9D0mg<7Wp(e;J9cP)3)Y9
%4n`7XO\H9P[F5XmbMu?"3I2-HStTg5j^aDFdr%%c6%B,U?UokrR;1Bs/MPY/E-PBpgMk/ZM.ek;7&*69_qs2cc<>jej4]*_;+&*m
%9P3qiI-_+kPZDoIaV2.1TVS=^;R6-hbYU)u'q-&`[Qo7`P!1)G]0T9K$Hn:B6/jt_PQf--'pN`S&a9StfN>0a1#$35"''K/-6-#C
%E_Q\29dcn-98!lpS.aF:Cu<:gDAm0rhZ]:qLm%l.@%X)W4.oO\<>6\DOW)KA,VlDY"1H'8hr6MO\t$ma+fLC$jJc-rj:!u^3s55k
%CXACkod3]pK8g?+NY>CaqW<1_1\$,d_g@'V0sOg.3mFu/D+V?d\J9#8!_lFn\nGWu5h-L&b8MX/QO[[\=OmUHFS/nP,&UaX=9+sO
%`UC5g8!G,$\?FR_6A)>kiKb,12b"*pL]g;QdBQoV94%g^;HYG:6K+7P"Z$q!Nr"_l:tN@I!`lU8;<#m=.\N0W\0aTnFFG"1n[g$'
%kfH89Qf+to_#q\jmZ<lK3's>gf?N`pi`&f!XijqXdWq"CJKjo/&@j6g.N,RS>G+o'(+?fQ(m;rprR2EF\$JF7`/"6$'g``\cpE[f
%#aYuh9%'cUOZQcjK$`uXrnP]4>X7HdRn+fAeO;tT6X"?+e.cg+FPQ40_,dGiQibMmjiCWE\n9T#'WD#bO[=iddk.PM>r;WEd$jA?
%2Ns=)D.iAP<nK;;Y+<cMc!`H9QG>3&D]@BN<KY#&9rL._]2D7E0k8X=@aM0M#GqW`4)8#u3f2jq`U3*D5Ciu2>.GqEcr#UBV\pd1
%[enS0q1O_VMu&p>;&G$e)0kg4hso,eD'D"NLQ?S%[k-hj%T-MG3%2ju]=ALm)roOOPo(8OUAX<>MMG8*6,iF@;U$(-9P/i5JqfUm
%-MqZsM^F<&UU7$5k*;T5Uk=]dbQZ#+q^OlR6a=$Y:MJX=f)o$0!t_37A&6'4?rjr"AK7`&`.I2JVn8Z&]^)"cod!CV@m*R7`P's7
%$,^QT#Z+Gq=!eR_5buo"=^lOgS#aeT%iCAO>spT5KsXpd0inNa%s&>XN)ZAC<#&0]5G'H6XNCR4E!s9jnZeP:NVM?K4DUI**/KX^
%ZIZ$bQ;F@B.k)N8BHFWQ^GR(`1e>>:?^:-lo^f*o!C?9VPF2h-luu+gXX,8^FRu-8hHrZn2(okFBnjarC1b9A(o@L5[QM5l=2D`A
%Ec&V\pM%&K1G/)-VuE2XYU3G)eJElH["[_iV3_(R!\pT0M&S(SW89lUc23m;)1^oKKVQAU92&&/Q6'urQ`6^*RkacaA_(j>274S8
%9>Co*E[q`p*=E$JM/to(R,d$9'TqT+]_*;`OBV@)`JuYXZeBo\q>B+-,qB"m,,[/"LkHKlWmb^VRRM09>Ioh9e<2<)@ej0A@_NV^
%1]jJ_HJpXW3Y[F]f]P0i[%JA@L8=WKO_=nb!R6#I',>p9h89D<[Q\6e>m!![AZ?5eGG^fp(lj=[Vf-%ZQmE\/DWW<NiP/cdn"-Wb
%[4TPWY!h1)UF_k_.D!nC;jnX"?)!\@jmt/$*3*2-a14d<F,:Np.,'LZ)AdOrSf3a+6"b'8;C#N[B9cCJ;,%rF^G8S%R>L7G21kqX
%?-<Y`^\A[HIHY3%XR9:]R:d1CQi"$b"]7YYh*q(Wc.D<$P]Ri;]^:Vc<CfitllYMZbY6iY#qhnf0`=(Ta#bL?Zr&bs';USgY*I5_
%kSl_4-[=j8UhsY-R+=VCL&K<:G@-&*:%U__rP?lqPkPRkr?UD;[cOkD9_7\L'j/uE93$6]$Uh?Bdc(ZFD'eEQMd3*6lH&-*#Slnc
%B;U(gD2t(_Nc7>=I@#B.\W+AT'FUE$i>A8DP3`ZT+c8W%@W=-`8LfX\:<BQ78BXOV=\7"d\n'@0XHHIG6Ck7rr?['Cfil:jJ[etU
%Cg/5)A='>&$WBF:^O33La&)*.`'BlpKpVIP_VTV*h]XjYS4?HfDY]$s&[&aYT)<=BJl*[]\r;JUA#o86?%W$S;muk#piV$:!A8SZ
%1]A4=K]aisJ/8=@hWIo/]5\Q9>?nte%fG^@#RrO^WC5`pGnZ1tGmTV?D6nA"BaKGMFZ<f\[g9\S$0nh()SeW)oQ)PEK[W4.mWon"
%bc$IB;2G:qTf?5=5TfF+FcE4R9\]dm%[$O7CoWh=?#>KeB),GEV]hM&'8MiI7BFJ9j.c`AQo891H+h&G*!kh"W[@'fWp#/phIt--
%*4'g_Z:TVI&TQRO;@VOmec68ZKV)BrIFcX!.#cE.>0gEj:fp#b&b3)7j!LuN6it17C;!,^PX\:Hhk]<qS;H6$P/0::_CHfj`=,EF
%6//g%OD[A>XH%/SBL*XsU&n==A&H<+*[U5RO%r9-c.P1j+ja82=<a21;HK%Z5%&aI[%&_j`IRG=V>.Khhj45A?2AZNQr=:[^AHFK
%pSJ_fSdLhMQ"-[p<_aTHJ5HS.llL98nK<-4bhP6WN/V1<HemAQ#e_[,U?(jc@rK)W+)HBtF=[327g`mDIl#5fE0_JD7:l/#p5.F*
%46l$KKUlJDn$gYh4W+Fh%+i=Q^8BsNbe!3p;ZJ@AAEK[M>'lCcX*D6QU@ED,C4G85mgEQ`l6fpc6?G#rbf``H6MihSUgm(Q$(RPg
%D'mb%E'eF.*GP[M\7>"iBU8@OS9;#$8V37ZDAW[4gsN7AiFFjM9%H^P1'3W?ZYH(6&2ui&0%&sOV5"bJJ)$1GNqH/cF57Pp/AiuC
%oJr+n]gL3l,A3mreVR5F00`Rk?[oT@*KRgQ1H^\d:DV#+A,%YRp;9Q'%NaWe%\;\u:'ulM.:ih;MpRX_8MXTtqYD,T!NJo^8BDI,
%/hX(R-7fiL4m6U;""+FT"d)2uOq^Mlitq)C.`-%sMrMm-5;slM1>BI8]cdQMS[UoDRe1m;lO+>L#NAB/SO4$$LTHXI;N`B)UiFlK
%E3VTfbC1P"T3D:`TuaU/^Wkr>79$";i0GjrY'N2bQ]^!J(L=lV.H*gA>5XlfRMdqsAs2f=CV5J;g4;-5AZKfiIS8r'J[Dtm84r"D
%G5#BK;0W!ddWq7@ZC-MaoKdeXV=Z?ZCP`hSQ@-s9Wis>5m>$>hm:Xb/i^,N]T`>M8LMPDnMiaJNGs=^alpt3;`:oMSRa=?e0M^5/
%;3YmT#uOt<pi^f*Q70rmp.U!hJiUh4/)JPkE\BKc""F.<D:L1MPQ@^idt//pWo?8qH-\#KG%+cr,had86U'MDQ`PbP[a4`)S&1%k
%kq0WeKQ\9G&L1lb_V62+'\N`#*dPA:^Z)fM#LUa"%W>8BpMW:Z8c(W\J&abQPgY6>^eH&II!!@3)MDQl7P#Q06t&_::9>2RL(CqS
%j3bZ:@M%(n^3=Dt-\.jdcR6Bj9]d7Nk\?e*[RR3B<E!-(X_Vf?N9,\s%K`iBY]2-Q*:!3Di!_TP9Kkb=eMK"r&=Mr>U0+XbW*Y)e
%7:Xc('p,L8o[bDn:rHs6mBS?L3uime+31]i%pU`?%p8],fZ1h@rNU-C7rR2M6E7ul/:HndVe]^TWf>(Lk$<t(W"Bmqk`d_@h'QNG
%^O2KA?iN#q2Kj92IiN$C<R[$N0"AQTn!6F7:.c*%[?T<<G4j?jVl%O$[&VbU#j#k.$>hOQ]Ekqq6WeteJMD1-J;#<?>V.LqdqIit
%s41KD+b#nmUFZ&'Q>(?A_X!U:K3T7kX';=)l?fs_KjV6%MgZ@i6b%aAS(SJt/T966bceNj!(_u/>Ye1"QJYWmN*%*pY2o?"8Z(_n
%=T]FDeB7HWUgT=ckYu/'1"1c4?ejFL7/8SAEY7;aWCEA_L=.cAWf=N4UtX.*(lsZ4k3LfO=9L;V(=Xbk)A<O]B3D.J_P(=3BbdPN
%bTg<7j6<l)_pcV4VjG2#l_k?BDq6c"*/k$1BFReA]@m=q)l=CR$6$cfCbu%T3U@?EC!M]iSW,hNT]E>oR$mI"akJNV>'0l2EYO*M
%Kf'k5#;-5#\JG'[0p4>k_AUQ9Y42.3TioCX"J9@(`&QlJ!9([`dkYDrootsOOh6u1>C,S.mDSD?@RVQk2'nG=NM\+#]g\r'4</Dl
%?>8c2!8l^<#3JZBcc*KjTX[NrT%+h0RQBGHW3[U6HHtuWL%+d"M1fJfWj^kt16O(@V;H`Hm2t;EY[c^8a5^Sj^K\;)O!UV8>nOq8
%6uA#RO((LgUja4l-(YLjgnGj`)Ys9E[>(;2,2<6=3Z(?`FKE[/dJ2b\$9"b9EpKgeTX./BXeCD_@&]BU"bs%a/mG&hd"S4X-1>-u
%$Na419c$:>BJhPP?9V4Lb:-f%pth-a!VIkmZ=q@VeQjoQd^dm+9d:C0Gm<4F_E(VjidOsIU]+\JI[A#@O!I3sQT1s,b@H/D%UU#8
%1`gR-+L/K$P"%QM)mEFW7]tr0o6ts5QCiFVRX1?%a:Ei+IX/Gu(bk<MY^'uA>)!51"G:qFn]54N2f6bP0J6JWljV%:=>bn>eQATH
%D*n[\m/gfglr2`a1@Vi0(*\-AhA<]6O3a-BJnVU>CBdM=Hd1QS1W/2q8N!j1(M38>I4eP9VXaSakibQe]>SjmJlO!f8JDT`e%:H$
%`E2e9Pb0>dDd#81/m:1tCn<lBj=/JE^+1<$h<2,T/lJV\g*g7nmPDhH7tiuDST(4A/ho]uZSXg<CB"nL]OIFthDH1'=u`UPP:l/k
%@kF$8>/AdQd]phS4),cY;a>R)l;sQ0%KTKpba7!>;kFggqFd>a!W+p%\lN%Op=J)s!G'*,0\h]K>I&LKH"$6ojokK2r>(=-aT:Oq
%(b;?@6^`+K7;FF5foC:g\G>F'RbhB_i:Dl&dEM$dK+"e2c$73B<J3YNVSO>u#n:Aag2A&pO-u/._Nll<i1An'$fTY$Bo*D!q;SX'
%"1snXnO(B(ag&?lFWh+i%%t:I02^885[&1C@t&]NYS@5I,&nh$./G)f1Q$r_R;GIAU<FpKjqt^!`jgBK\1jK8[9jXC1uRK*VaW2H
%[gWp)k,DUUi5r,\d5A,j5'^$L>NTWk4SG`aUnC_>**HR,C+>KRrnB7hN(S+dGB<*"B81+*EO+041-qbgH4>LXFKQeL%pbs#^PM'-
%$'H_@_Rh)1Bo<l^M7*86+,/UbinPJLO9c1ej;P3W?75Kb')523jPQbrBMm7](80[^mhQgVE_CO/"m^+$&MI!SVVr+\X>gL?mL-D:
%QVOcMoe-kPZa"&-p(JtG.cEucro[l&_OI5),jHONC<6/#Umi4ep,>H]5sorD#K.2sM8C/h09GW2)i&+_FiEYQb/c>qG!Q0q1$NML
%*"i98@rLb9b*Q_*j@\Po0d9Zkkf>KmTA$Hdp`kK*7<9("UmGM>T:VYsJSifH6bBWl.und'd$+l<0p?!=+)=`1/U1>4+a%u=B]Xp`
%jlbc`;K1kt4kDqb6s&l4;FFp\NcU$Yo3:2^<XQn/Cg+'LSBJSa,r15G\0Xm8'6_kg(Jh#Z/\1uukAKok,O-S40"AQ&m4Uir/VU%6
%%88TUq'^P.eA"1cIlD4$4l+:IT-tZ:PC]V$*Q):6YH-."?Fo/?&QY7to*TIM!@X9GlXkU$EE0@U"c?Y*F%[dsEIgr$5pMF]?&T+R
%URL528;/]3@F&iH9(*`h?XtU9dLeXD3NaRL[V]hQWnqU.!^"6`K8,sGG:KX7<Xe`>f8E]q!ilHAkYOp(hGoFP[tO2?74cW<.Z'aP
%GmS=bM-G<\j9mYhooN(FE#.jsCIj6pg,IJT:&mPma>P@2iJ^`W-P_+#YCiR"dTI[^nCO^/>Id&I3-F\D_b$SOMi>J=#t\*a`PTgI
%h@Ylj<5j)dhoUE6Z;(B$6?TX_<_3l2c!q\4[hM8aARG#%?utsK7<H=o]1_A[Eli(T@hfmC?APnjBW`l*AKF2:0pu^p;kJBc6KR_U
%O&<D6efSc5-SU00BodnC5iV%eTKXt1^W$s?nr8]i`&4l0omiY<0<,t*2t@N2Q_ERq.8C&AQPtPWEk2O`L'4he:EY&;V2onganN"Y
%F;a5^(]#>+`;R>SIP2Ik4Z6bT^g,Y0gHHVG$L6Ns"5E\GZ3A.@NIc5:/+iHIS$,<.6j[$@!(S<oI<nU::<$TPSk^5<Xa:-fXBUFk
%F<<N&N"C:?hKC.KFVg0i=6UfD4`B(J0lR<2]M5f"75!2>]+6Vq6\1b$H9a05FGO*q`Fj";*ad35j?X`OQTOJ%_i6`U+.O5o\k_n]
%q>>qm'RC<H`(&*iZ)'ZK^A":g">8-so"9GdILEjQH^-"_RX.>fQ\g/&\<?'\?KuRs+pl3k7P.<3!<<bKaQ]c6a1W`r'!+8A^lXt@
%&G.IdKZ#eBUAU?tkh/KEag,j#g3,?pP2H8^n[pad%U<O7-)3#X71@k>\HlJkJrh:s*d"S!FpVmbM-=%r-ad&g'XXIa?=]$-fQIm\
%SK8TYjB*U)3$.;_6F?6DC7JG;8#gj0hB+\f^Ef?^WdA4ql;<gXJ1Ke;8<:qhc56]@%flZ3ok.Yu7.:8cUL5G*/VK,h1kX6-FLJaT
%A5RdNE&+h"C.T-G'JjN/RCWhhg/%FO<3ChQ79p+W#X->?CKEl"7l'W`0@*rN?!H=?N4gnbo"*A_$Y%$S8Jq^VCgh(;*_/S[^a89o
%lDq;);[ot5rBUW.1hN8#S0<qfVPiDrkqKXQM(]O.6f<+(!CoQ+4q]*h^c33^0@dA!erj!('N)8%geOD`VrU/>fY'HKNE`^0$!/Hd
%?9?G-2-#e)_Tn:^Vo!Ug^%GXW1U'DDQ"B>aQ/Xb'P\+[PLE:q]QP73hV_7qLFC1PKG+?-ZI?EW.G'8P*YS1anUjZUF^!0R^('Si4
%9gGhVb=][h#k,\1fLo7E;17F1f_oN8)LF$C-OHM`.j^3PQ-)Zi,R.'Zl=Qh`7W0qcg83N\7k0=UQ1T&Z%Z8ib8h"gdD+$j-9B14k
%]9XmMgK*JqbM<,Z,D6WmBb>Wum1Kb0^c=u4BeouZr,%T\:6*AsTZtF#Xp[)ibbjYq<@NFW=CL@D?6NTdX^Hu&Sg>gC&Zd4$I$2R/
%FTpBehljV0q2-Mf>3Li)+-g3a3#t)#6eO<]9u86fU@C(gO_<g@L>,e*o=a8&P1&ZG0u^]@BsO32Bik7VeZQXA3`d8+RAt=0.7kc.
%*VLdIaZ'<!*B(,soK,=Q4H-'1$M=pl^"2#6lDUWI%#m+OlW,pAQPK&Zjh9>=_rq6+27hF*:+A["=[j#E1qR]6L[Gk3EPDPWG17_O
%p*J*F%DcJC=;eEO[AC>)#"mc$ffe-0,L-MF<N2P\[U!N_J>=gT-uOYj4-knE<"jLZLlY?tZ4PR%iX=9SO527Apb=aeG/WUKnK"Cb
%R'*_,UICp&/-6"q[l[BjLMscP85q)LKW<Rd7.0!M`!Wiu#slOiSbJ@F.:"*-LTY[V3C.=D_OpMIf,lH<^E^5[f5&;Hl[sD.r#Bd3
%K-hU/5a-&a"(/7;"6uUt5R/qj>ZL)]f"58_8$1(I$bZ<*QbQt6;UcV`a(I0b&@Fu39n$oW2\$[)34=iTY,nOp:8:MsZAL<7d1PsU
%,)LUJmn1WA)'8rrA7137C]W6FUPr#cBcPPF$rcK8J0UCP,*J1/:-'+aEXDC>]]0i,U_V_YeX2kQ+Qtl1@&<_QP>f_sRj>U+S%s#c
%33jF)8biO5=]%ka@o,dg748CUdSA)TI"YLhIaSL!Q`9.JO^qdCRA-.shn,Gh%5b]J,rgU:nJ`'l6:,Uo!GdNm3,`9`jUAua[tGJt
%>gALO&DYl"oC#?7lgOLl!8(+k_bZJMr9bB*Bbdoun0u'R.L)R?l-Z_36W.0sMU8RXW]3)r]_[M#`CZFtIlh%)3E;!W@!t&/Y,.0W
%VI)hHZd^'iZ"hC@(/)>a_rM@9e\Fcg%8;!QB(m:gV0DJCK]a3EA_c/*.`hQ4!g!6?D05m$?'l0d90@phhHKp@n6eGgX&HD)=fbsI
%UitGdG1URdlCbRfs.Y5+`iSo&V7T9;5Rh\cb#8TEM`=,Am^)0m4\<?5&J$Z%kE+h5d8QF!OZ1%$&?13&QsiFeCe)]!+0t$0[*r(;
%9='e*a#mbi=%!s'l09fYJfg:1Vm8T6lB66WW(TrgJ-IsfB'4!,i<?MbE$.sJM>q&:82e(NH/`e8)03a`UmEkMo*du(]G1CVUpIJ[
%dP.D!5_'ieOW"%!eGVopR5.BGNj62g.Y_ogn0B^Qa*f^J:+%2^(Emt;jZ6FQ9%tNES:fPRZ/[bT*c5ka3:$,9oW.^k*)Gol#*0*)
%_,,0mIGC-,2Xue?G:M442!rs/eLD8&_`;mJH]]br@$$`:ASt(M;NNmDJ;c<*P,7P43Y,M@&lXCXS-\U]Eit)0Pi?Rh8RaCc9#<Z#
%?kr1"HK0@Vm:Dq'W-VnXWJd./)6;A)cWYpbk#_"-=/*Kb6CTl=-!,=\a./>))&?-]hAC*+!PpcC[RPTK8r*G0l)gBeL6OXbBf_Mu
%.Y\4]VcLM(2^D7cGDDc)`L0^mT2F.ASkrD?@jbsMW@L&\S\n$V@H,OmWnTC,7,a!q@uaitkZ00RJ7;1*V7)hW0Ot_ECB:GP*:JC/
%e\KqGA6IO6#h>0K&NEU=ST6'7f/-Sr*fgrB)J?bh$aV(0;oC0)S\j&C]/BQ7J\^Mm7d+fjY3mcu[()?,)Nf[71=s^R_15&>ChqU,
%[2;3MP':d@E:^SXQDrWc(TMu]S5S!/cP+8G1Aa7QQ/@g7qp!Z[%M0("Y(sT3Rno%TWJMLhR;Ah\[6-FYVY+//4p*/i;R$3:Js-ae
%"%@U:,:&GIn118<r5=neNXesg?!M,R.#R#kfSY`lg#WE#'LoD8PO1L>\EiW0LV,WlfipcO@Y:jkiX-A<VeUH(4Bo)c7::Vua_7[a
%+t>]7L#I(hqLjsVG/:ne;OS]H/Xi5a,85HAUH,^GnG86*SL5&=>!Bo8'bGSRFXK6ba\68nV.?ct`mo+bq7&p!X6'\UL4kAO9EB:0
%5Vg5,_hqK@!$Pc_Js8p"NgMI6*sB"&n!EdL6Ie"PVDL*[3Yd]@Q)&<N7FX*Y<N/(kZP*fNq0WP\:U*ft4\ABPb=5Y#bE9d^DC2Z0
%fmJ1;\\hJtHA4oXbKh,r0P+,(aVQO%CID4WckeStVBG1+0(&63s8(URgH>DVX8RTW)lXN/Y*:#7mKcZ,g*+tDaIO'pKBBkX:PY7V
%M<+aiOCIAQ8q8*0;4jL7.Z.4745rSa3iD59?@0rO6Lb.]KSh&[=4L72qN;RVM;tbeNm.Y0cm2JQAZEdAoB[p.#J&_LC;-U&7ddSn
%=C&C.;$0J2^nhk,2@RcdJW\IsI"r?5\Vqg5>9Qf,O?G@l4[]rP:5HT.P-E63p.>dKKuB+@]<k!&6S+6q-S=7I$8bPNTP@tTbua=S
%aa%Sa:G&414(T)H7%-tL,5Yu5qs:_S9^#@doG,.CD&L%NIE=alO1\8b[Kqq!4@LKaB,Sn].%n-k`J@)UX4k-`CRAOQN1%7FLgZF_
%8Ss0-``%4menQoTfr</Up$sZ5]p,9O#5N]W-UmX)FaZ+hKJV>)HEjpbPIrRKO1XI?OO[kk%-`VUQaL%[n6tK_D>@,-=>u-`<STLb
%EoWC2$`Q5i5+\cr9/TE-MsR*FM,E:[,J3]A@2l7m.CNo4W()H,hnV\EoNaKC<a/<9;#OYkU>;C_P.j^;RI!1;#F9^b"P.>l+e\eN
%C@t;_8E8Od1od?A^Y34AY$c*nB+aHi!0[KFOn;MJ&d`quX9Fq;/,gRo\5nR\`/:W3>=4,S@B&(1Fun-cVUKUkpkB.C(Fen96U"bE
%&OmiT+'RaNet"BJgn-0L2<N):o2B/>NQ)5:d&?nl<IqGe6ti:!GuZmt6>/!,p1,dhe`8/d",;a(^g9Mc#TtCLNpiA=!Ai@<_DuTG
%8[[spTj7,L80r[j]YDS,qe\h46&ZE?Z>EjE!d.De.9)u.paklLQ4S;8)L7sZBSEq'X6MlW(</YBg:-i/]3\Ja^^e*$)9d'7`]JG7
%6>4L;,h_5,NR$:k?5>G3qLas<d'LVIPR-*hSStMT[^K#uH\VFRZV-5]BDC);(<tg\fC1\F)+.EqI?;)Orn!bNOhtOMao(JshAr6W
%(EmIlY`S!kg!c8AU&!N9h[uE:2/3^JQ;A[LE6J2'dc:!/3-n-"L%R<T4FH9,YXjGCRh["^iI*4^.>a+/6C9'hk3`jO:XaD,>tq1h
%:6U8Kh+SjgaES/hlX-P]_R8:Aii$hf?./`!Bk$Gkr%Ljc&@@c?M83Y<_\nX4magruG(()G\NO>_.A."SYtD7<c4CC,Dj12roODY6
%:W>c1;abq/O[l8/N[71<lZnof`UAsn5M[a5"q*H@LoHpN69CM`8^Hdo!I>GRTFo2XN2CVIdu$WP8Ao*(FgCFKR\@c*-U`Bn;2!HU
%c4OB@qju!lpc*\kMhltu8R<e7V_8]uj0TnmN!64,0[GO\i@Pe/,u?9Ciko]/46Rieo%DW<!7*lR*K*ngj6$c5A'qF:SGGUoa`l6]
%]#CkPgl%iP'FY[Q^B21ul$/IsA>J+PB\1T)Xu"CZ$XJ^IL`!f./Hg-bqp(C4YoTBq69pBfr'MO*i^o(%D=n]"ghK*tW1gk6cj^n`
%@9qd^nF_QXp9Q:)?QLr_@m!frC+P(-l]RV%M&pmo$:RM';e_(G(AT*6<VeQ`.)Ao[+*f=e0,A+]^>F3Z,-rO='JEK/1.52UB3c'K
%`4(r57i0\1_D&rhZ?:I]4Y&qrq^U`#.o,0EqMp>lkpY](^K0U\RH3lN&IT,u=%/;B[Drj[dq':LSd9[/=_`ghmN)R]pX_-kd?O3-
%niAd\KN8Y>ba4*U%*l,(rkg@:8d4_u$lY7k4VhaY;JOh\b3r5BKqrnjolFVHUp@UrSJsm0ck&g0]aKp.XphbG^Ig*+:q_eLX6A1)
%g9+RB>Spk@!aI`0=7-^"G95eY2iq*ghh_?[b/#Q=`D]Q*OVnr-F_W%KO5IF2QL\H`brYVPHCp=l4mBbcCu#^f(:X><>?YC0&t.eA
%K*_.>,!K,%U>rKX#(cEk63DWMjX7`b9#Lsjnq1YA6p1HZ-\JMO_W+%:>sNj2;0_)<9]E$[+fFDQGRG*A^0RTsY'8!Z:W_5dFK$.c
%`@sVXd`?@TQ3PoZ7$4C76*k%J("r:!lkPZjegdCOW%.F\MG_%rk5.REr40PQT<G3XEil47k+t\L6rK3]6(rqLITdP-)&']I)ej?h
%\^V[o4%.;sk9Z7i7"AUb^>jq^8orSQK6IBI7!M6N&`2@oUV3+]#Dr*`_1Fqi4l1"N*T)fCr"`2JIlXSL>ePsK2@g@b-rCT@$\3WN
%+M6,6Wa1M9Xhqcmf=Rs(gCV&Zj\OLKPVWST$W^dt?c"Kg.u$`MWF!###Ub\B&GepiOR?fqZmeT%$[93Y,^0%k!7;:>4sU15G^'n7
%g&hfa/Ym9E6)7WT4]f2\g@s`n;\CITkrKF3CBu#r?^#H9Sp)ZD7M?2-\`icf#-6bMnCXC]/cc[u#MqBIYEUIqaKUM1iFRi%`pp6.
%e6f7Dq<ck<7BOIBNpG0p/g5VD-g1G/\=AJ!;SulgomMgaN>h%cFXo``o:K9bAZF=C.?;+6Pl?.',%NXU]5TuV&Dr"W$N=hFk\^T]
%+M;H6WO9:eetN1:YtIF`aZ#VC>fY1io\%!gI6kMM(DKZQpb@<MY:7t_Wp_6ucd9m,JdKIV&Jt?0qo%!W32eogl1H8VO`(bDCe&)4
%6/k?2\>T'3^$(qR<07%W/Y#]:nEipUhGj6P!5U-'q=$B3Q]T!DIt?+2Z6>+)?NM^oQ=8H'T1G7s].SKpq*k$<c.j>di3Vfp'?"#H
%?8NG;[<1#5+>G(3!6$@P\2#]`EML,i]NqDY^q6DW8A<(NmlK*HU*K78+)YQ4f;QG8PnJ=_["l6Eh^,Sh63cY_WjU%j7ZkV9YfXnZ
%6`3K]eOK.p!6nk#7Z:a="H$rNi"diTH6I>tO4?JWcJK9/h]3Gp6tg:tP#MK+ko&:0`UW[KHFe!<?c<^Me8Kqm#]["jYU_/aeFEIZ
%LeY"8q`9G7>PKY#S)?"'PYhkX#Jk#Zo**"b6.5SZ]??>igdp=#aQ,L.=,A\n=3:?JHqBVTii"6Q7nP1X%t,Wi2P@4XDC*aH[6mK=
%30NC:2ah^6_25BrKucjS9n%)/G@)T8+R2k6kWe7"9KLOBE)50VTH_a+>f.#>&=flE(d@VAoh$e[q<+f_F-a'1RHT-&:)[X"'mX/`
%[Fj+KGF'b3`mN%Bk1eDcB/k%0>0IOaNp_N#R=7#YR'ThM]%gZ1Eb6bLobXW)><Zn2pJ?c-#2p</"8n0qAnA0l;^aD8V%ie"r!V5t
%6\*a$r`-B0r2^`oYnY`e4pkD>f$cG#Wr>iI3Z(8F0OL.A]j?q4Zto;Z&cHnc`;]pbMl$%tb78PSodO=o$Jm:70r;OK4#fdLL0?na
%O5`3S1E?C!4Yof'-RjsB)U@FU.Ml\=.2/Ws67]2Td_/_:<pDTjqLYeD4:-^&E8WuS2O=bRC:cX#72_+N9ViNr%PG$GPUKG#^s1GD
%6*;J$Idki</Ig5B5eKD0I0h*4O*A3Z*RSnE/;-OD:lH\qBpES%k]X<9[8d)6(Lgf+!Re.4T6o5N-1<uHR7+(Fd"Td^glF`i'ZGJH
%!.;A%KnkF_R1qh0Ji^,/?rX7jXJ$PaTLiYE9s)`D@4c0D`8\Y$.PBZ\<J=B=0>gHc!^C2ijd-N'WdKE(+2`3"@Ai*i&.+jDAjQ^m
%E(^RF@#TagJl*+9m\rd9kR&So60Y`>`okF-\Gb*NTES-jg&eIb<-LF`Yo.Xi<5M1W+Vc8KO]`E30d>#a04>NS53s,]po?905m_:A
%7f%-S/?M/@bb5i:[M/ANcd`r+99k,S]*naKcBTD%OQcW97CDtBN&X'<V&uhLL2J:<X[FAL6"JW#Y%kuRnTGLcU8o4!PC,_s<q1?T
%O'"_jW2@1`2TPR;,jj#5%V\3&[dmppLNoiK?(@[knlWs[3,gApR:ACTcF4;ZXDE?oe%!mN7\MJmE2J84P,b>KQ6L@/N('G($n?2s
%O4c'\5XgeGot[T+_COjGOJn)cU>;"'Ar'X_6!Ha(?$90RT:f5@$+k#F,1jjB<&8Q]/!]ME;/Si&M9ZSGU2D-TY,J]Z7856ROr6b/
%[7#%EF_coD/unjs#/?u",'GRaodYg#jJ"0'O]G%!%8sIN+``ub.ACjE,g*]+h`?Ln,E7kq+rVKZWaZ[!"SQ!F'?WG$BUYXrWR"@/
%-:*A=83Or<_M*l185pTjXld.D]sKn+n]IROiochWEig@/V9CJ<,EX_*1;g=a%2abM]O1'b0dsLs.ESSef,UJ[QNT!X=*9=A(`p'2
%,XQK*5:WO8Xgg`"*!EEu=R$dk;f7t6kXQgXQ`(Gr;&6/SSc2(-n'Hbc7&r2A?<F:>#;$LpB'NTrmQdqoa4m8b99!0M@"G=JK0mFo
%[R=sO\)p:`T:DTf\2<5_:OUlC5C\1Oi;,*l)U#J#^K'Ps?_fGP`&NCJDAKCds.0p1GppqAqD\j5+=<_.,K_b`>.XKEHWCKGW0q2N
%QgShjG23iO]EiW&PW)cZ03*:0E^27^mOc93W3&=QnC"#,O(2fg#pAW>]\14oPfdG1gL0*`26*GJg+H*1,qGdh'%FtHhPDnQq'`aX
%V2qF;/'8:.)jYhm##iGTD//`r.e]a`eTMsKFXBZ[7Is&tpfpE.XS[-G<!fH.R7;UjW48(+,bjJlO@?+Bm;\2MkUE.hVaXUu,XN>!
%fL+4gd5\DBPZZDh8J/?_2/S"/PG@2nG(>>X-E:sR53@q?mkthj`3-IHb&NELCgr`,6`7=^*#M'ZQ#3S+@5<bZ(^7K<Ul%`3AVT7S
%f-;CpSKTL_M,Kr(As@4,qnjKM]0gmoV9X$i>>$P`,3?=P-u@4ge?!oeemSfC:lbk3s'HjdIH7sTX3l]ZKXi;\f]ai'g)+$W]HRa>
%,5]'>PY<@Y4%$`Jg2?90"ftr[R-J/P+q..:F/<5PGW2@7802A?W8L+(!fkluHcc2O@0k/Q6=l-99=IBU_QDof'm7UOoJk/IhP?c?
%hsU$%TR]\8^Dfj[%K`;k/CV"<:-tU^dK"GW2*&a3fu7B"l-#g)TRe'0/N-Hd2)]00'##[3?DZ8l<Vt-.S8-+D%3k(037n%BOdmLN
%FH,K.929&VPBbAo(SnCeb4%pdF3=ksJ^a8^iJ^E?ZQjM#<V;YV")t9U"SC&T-L5/[4Y0DI_"?,i9h,"ihh`Ta]INM)C-]IhWp1!m
%?V3n':Cf<SHX'+F>Li,YS1[FTND`_-Mu!NMgKba^`>uDNA*UN[Ym]iPZ*t8""9>ib.EX[EQ#/biK76Nkli,)*NU_MthKUZ5KJTQ/
%_%\gW3-:lVgattU"qD9.Z!.;"PSf=mqX$DV@6i5VL:mWG;<:73@7Q*O"_#jM*%],m68uLF8Y'32#Nt#c(IF#57GP238Qd5pOjq)C
%p/n[dErE0Y@"MFBfO1oq*66B!Sr4L87dN(?nZoe31N#Q5:W=rr6E7V4S$aN&=dn;K.naC,1^ns$8Lc+RcT_]RL/[Vp#lY6hXrH_J
%c2KPVM\Xos98LjRcC6jLfaq^"6qRk!;(o/l:nG9t%QpW!9+DQUB@^\08tMa52klS%c@VBulbIm18p,]@"OBU!RXSt<EoO(Ad2?q'
%3%TS5@6P!2T$Y<DQsjuAbum`bCl=CMoEiS[DsSAV@3Y_\m52$".kiM_$=21I*_NetXjD"oY@Aa\1hqsUr4=g[$Pn%r*P+$0CY[R1
%U5JeV9cbnp_#7ClP,l.!H;`[1ee^^O!3h^>Wna0UL0eeJ2mEZf@HfY5CQQSo<lS@nEL$eB7*.u0Rod*]ial-BZJ@E*E?!t]GM(?D
%_D:0t9XAHd/X4^K,=fYU:--.2YX\-EMWMFpbdY-K)74[YZdYJ[[QXP,*8op:'*VW/?g\oO.iNMHoen5''QumAOJ\`(gsH=g+TT*8
%lolUfU(=GAZ5BsI_=Kke%VjMRlNI`0>a"4[U!;,tDfn8`m9`,aRg!Xb:190BLr-S9E<O6iFDis`[\VOi85,H;k*i\M2!9^RXBE!U
%1e0$MBg"IBN3h,m6'Or.(Vp]NQYc#.[(*f-HGYZdBbOc:oE\=VDmaB2<X$ol>Z%tM3ZSs3E1'#&U+MrH9_%^1[;&pGXrUAta'(4m
%SPDqsN%UjDHe]u?[FOp.aE^K\[!Scf\;DLW+uHk$_]?$bd=bba9,3G\$^d[Ad9JFI.CCSUn_>O:kD7il_WO(ieWq?!U9G:iG8Ma\
%HqSO9%<.-bm79JGmg?o*ZdMLd"q-$'m*oH:!@hH^nr0ZKC-CGHnLD.Ukt$YfgX/^WlIliYl51[Q.g2')N^78@(KP5:0JZm(UGt3d
%D*s$0HAX+d@D/'[&eS;EAk!<Z9SWWjs,H5en-G-j/_-GT2S^<M/\H?u]q$TLQEeb35h+:E6N^o.0Xaj>r)"K/2\&d`38FS,B%sf[
%i*`8#9JFdD47oJQjT>hAVTZW=$>+V(OE?qB2DMTN(3=!&f<)t4b$@QXbg_=#7H1O@"qFgq&cNZJ#`7p_ER$)6q[@C?@q30I_icCC
%c&0,D1n=15aH.n![Fham]eY#r`iVcRT(qhYdkW'h:K=CM3'oT#qp*E:3MhWj_--?qgkC`e>Ri.jf;8?Q$(bf32^6CSpscd6IH?Jb
%ZJI%jA=FLZD/R(O-CBfS]CE1SDRrlZ+Q*P<KkY[P,EO-j,u.D*"-nOJ+..o&D?TM"RRGCIMf_)pdX!Z&+AsPFOE9t]aG22I&>hn3
%3e+P/dk_n>TaO:%,YGS&=)":9()[Hr0%fp1&6rROYO3!\&7eqK]Jte'e)@UhG'!o86c`CS.Q/,Gh,gr(j]I+$B:+^5jB]oW;=M1#
%>X<8WeDCl-.RI7-gYDETYod,6Z:i)d]ke0?N4Ld7fo6)4bd@!J=pUCd+YF@V<cQ+i<;5!/Wj#&TV9&NKDh.;=NcE8tV)%$MgCNG(
%Fk7#[-S"d1a2Ba0,p.<$#gA_&NoQO<mS_*T*q>A8mBdPe#Y#2"cpa6d/0JQo_^cH3`9J8M[lcU[bK>nRH&a5N,HO+h,*Inrdq^o6
%8'rJMdX!q!i.dc5mRU4Jgj]YoN3G!+q?f?Mia#h<TS-XT.7V^[T*D$<V01MEn"F\7AlO6&/kUs7,AP?&4VXm,9\r$^j/=U`,BYTh
%4\]+.YZ5]@HHIuc>jjs*#%aHMNIKPR%7d3:YhCpWl3MGTqPu_hAEhZf44'*G2%>pnDcL`2djuYuhBT6fZQ+qC,)nqqTOd%NFLiGZ
%mOrpFA.;gqOaXdEA6bVH8X/14ZAloSSM.iT&FT5#[S\ue%h2CS-X<M=]PsH!Bk`:J[V+0.fThPWnk=ZAc94j`p,.6[AOCn"Gs=H\
%:2!'A=.5]BSpnflmo*PgLs4*n;6_Bo2Nis6Mi,]EEsm:hraWlbCD"H$Vp-87GLMG;TWNQXO\\hskYe$%DakmOS)`9V+!E+6B?@KV
%2P7h9*3'tiAj)9'^H)0G+RVX[^n;8W;p*$UKeoft,B:hZQaO:YFSN,-#u[nRHNYGU2&qZ5o\2Y8_TR1sm68onVWb6DH5oQ_Y$4(6
%,!e0rJ<(F(Db1[gj[#?74R=Ce8<F<&UkD:=E`TtS26Sie3I>@!1/sq)!E-85H-0_H_2OtAhubbmj,HJa/;o-T9E1n9p(p/`Wj<7A
%F'TC63EKZ!8i1KdWa3suBXGG(?Ph@MQ2&BNG%Yrt4g\>XgXDNfYQ'pA,ZuH\gt'!8mPts,?tOq`->#<-f0@khZ6B`)J[*eI"ND1R
%+!DLX4l_t=T81NGAjceDmoa34`?C$de^K&l0!2F$Yh]nVN6&B*GYud,[BSD*Uo6FYb8_#b*ase+U<oW.[4#:4ff$&8Uq6$=&S]:S
%!),o];4b_=SY7oifrK"[e^LR$W?/'2luSD$Z\^!eSerBgker;,)c-8E6!R$&Bp5Y$q57feMDn4_d\""O)RFk:isR)(niG;Cf#5m@
%G5-n<h9`=ga5%IU[@NX^7BOm2M;m+=SY`6_XE6RWF;uaF>""5S3j.0hs-fts&=)9L45OK3-SR]`=@D6LE8mNZH0Zrl+[j.uj_!Bj
%CZO)T3QW-r:(.k3V[r`2FU2gYk`'qE36NSD1)a$d;t,Z,VG3fC7THSDrQ[#@edGB,V@*L=dB2[.hK=<d[+U]u<f>+!4YDS+H5ZJg
%1\C8T6,0hO0iQ9iOK-:r/`"9,S<BU^>@aoCZQe,>+akj$LP%U0Tf^1-2:f>idX`-K`OV9$"BQFYV`k$eeP1(<M'lBDU)e#<gu`VF
%;lWgZG/Rime5:";g^``fIJ(8qUu*_/DG9PG]6ZR#6d>qale@d,8!!q,gj4e$"tVnkZ<LV]7Z:>FG=m1"\;-OD:^7d!F[A:9gu"Z=
%rI7%2;>d;#-.oLd,GtpGq`TW#,8J'>dVn79O$F*-+s.bGQC9_V-$@An1t+Yb6C"q*l%'_2#EWLWbuC^W2gYOrC?>@)D-)M/iBAE\
%H\d\JI:CpEm-[G[U)s_`2V3dkE>Z#6h?JgA:VLNh3T?;i!R#!UfrS6!Ll>0a6[1H!9nl8mKKaGVOucqOa;oM\7!h\8eNYm^hP:>;
%5R;SC`g"sQ5LJ3Rl3kjE$(EYc0bTm!MCr#[ChJ4<^u!nr4P^VRLtqN,I>".=d4AYrr`U1q$ks"58XqE-KSP#')CQC5+5,QG&Gt6_
%&%LZQE>tb'?2q*r[;U57`fVM\\4l4F^q3"pFa\[?L-Jm"C2mfQo5ZHIQ[0@?VHC.&T"Q`i4'C_+iOU#LatN)!e@qG_E25u(fC!T7
%C.[o.2]][DM&WpNWCb[J`#.AV*dEf>C1:0>JuE;?S>T@3]Sp^Vgb1NIFa&fC9<>9C8asneA6k4M(q_l@,VdI'":_D">@C\*i3UAq
%K)Jo])$`rHBN7jT#SsrOHP'NpNY=_:CZYP!Z-^hhao;q>.$ULk!cFAnjojZ+<ke)6F---c;B9#?Gs':4JKA3+NtD[HYMRU!&onr]
%=;&N<\b69q!;'\gLW+h\\!DB:gm19jEA`eMe!<)&*V'D-mZ@V-ke=O6$[<22H4-!GgZMrc=="Y?-9+9ulW^Q+-Gg\E7BqKU#aqpq
%?;Dbg]@Ul!:DYIo0'/?-.6bi0G/DS_D,Q<=gu-RSlYLS,.BOY\C:k?,:gfTWDnoqC:H_tcR2Hd/L9-k'6.pu)q^Ba>S7+LdP")nj
%;OW$Pl/DbL"_h+f)BC+d,qHga0C`V("2=F"K<d18r>4D9.<c:(bNb+A/<[T/Wj.pP%Kt;b.?eP$XH2l'YMJW9UYEX#1g-!P1fWH!
%UU<3Q-PrM"0+3r61B/&!^M5;#k>Y!T@n:AhWguqWEfGFuC:*OLB(F<A8(#1B89;b,OjkXP!/Tc2FiKjXJu"i@GF13uLW4r.1,\kf
%e>OUQ\\NhAhP97B=qcm81i2Nha;K&PQ$I;e5S0pg[DdI8_M;6\5?b-QIm[%'-lk`Z=YXKnUae;qTd2EeY>f]gOZAo>n<]h"7M[,I
%).mGdW:NjVEC]\bY>SR2%#*gZ>(qtOmTr6QGZCl5KYgql;q7`%VS$L5;,CDd,X*)GGa0asP$sM"e'*8Je0nhFYH?dV<ErCp/m3Qk
%^5>K-2Hn4M.t0cg4cA;(D3lc9C2[VT5,Q*6B)[4b8=9c7s4(9o=26G,CPMOUMHN+0SLbG(Z\q4DdpC9Hkimr9h'SFk-cdufZ,Dmj
%PDsilCd:QfHa2k7neU6Rc2-`h%di"C'NH<Vi+Ye]q'?"$c0"BG7,r!OK"R:Kn2+S(Qi!PWX+oB(^Y6WUV(4J"[%,,0=R$,)S%`"a
%k.XQ0i+M&CHJ7]SnD!/U2=*U2\7G.'!2p[i@I)WAJGtrVn@La_e6A?JVr'f'+Q^A1h?i^5V;U4c(r[N#`1R#=>h5sj3^lGn7$I3(
%4cO8,olRP4%/e].eb-?VJ%i5RGP'n><^pmFqU:fsVTSChZKp$PaY@prk8.'O.4V+,R65nN]C]\TZ#U"+GT'G\2%T=rC/I8>=Q?GR
%7cg#'psX>[/k:`@Vh#)=;/u(a9<`&drWF4P'_V@+jjgR<Q6s>l2[cu]moQ!YH=`O4$SCj)BXpafjB'6cAp-eASZoEm$s,I4N:-4<
%GFj5h[sK;#T8#AV78NN'(6?8-ZEZ>MT99[q24kA0R%a&Z:U$sGh^^V_l<Pf3^$D^4dPG,'FB+uP<n5E`:P7A"9`OATYQL.#I6'p#
%/"rtLr2;ned9<aAejq"2Vb`&gB\,33%<38pT@\MQAU:'Ep&)NErdZS%n$8u\?,DFM=+`<XigFR@?lfKu>0^^j91Ot44KRX>!g>dj
%kqjc\U?CRT0@#ubVfc4(B`,dlbU'S/''ksrVn$O^;/Ql)l)/ite@rBTU:=O9SC!,#Ff>'%9'S@!PMm#8`,2$EVJi8I$a6k#j_uC!
%S%YjT!I9#o`hOl@nnCB7Mp**JFrg>EOYqQUjYS5<ejeg!Lkka$dEG*`?O<L\jE1#S_UuPJ%Y3!IqWMFFaOO*<JQp#7W0q'.jO/fh
%\W,^"+-W&ghiV?[cLEfPYbe@'A8/*_l@c5B#f,HclFG2NZEPUFOj59KULj9,R**f7kC]`rK7r[3rgRW"gfED?h0>EQ1,<:D;^kA.
%Sh`&%Ff<@(dmiFceIk%tfb"ZChCN!lL06SnNP1jf?;^Ff3q7YKS4l$ACO@2s>T2\\6DdBC(W1Ye6IOc8qs<V<mK]hdl?mRg(-RT,
%gJE;<e%aX:rk7)LE_!!gj'2&W(@tXf\^IrFT=c[/NYhsW+LG!Od`6af7-hCo6_CW&lkd#MlhQ]mS@&&b=7foLNB=]ae`]9L9/t>)
%;s<5N8%;Can,2M/l7V#W!jhfEbm!`/jeQXX+8A!rh<s/Pep;C:?$3PT-9<ZgcPWr#>q`;@@`XU-T0<^f,k*@YgQ.bbN,58.4jRo5
%5T3;!G4e$"P^/#$2h$YBof+UALQ)=;5RtD@*P?6c<q\?^LM&r//q&'CaA>EM$6!T`+$9)d3?f%!Nlr9%I`?/H@K1BQ@3]Y\prA@A
%3G;/W@-1%`;__q\AjQeOTW.5FWKjs8qZM;8X05;I[/Sg74'p(?h+(FFBht]tBWA!!NZ,]"UI`kSST5Ciqn,eZhAHM&CDo\#0%6UF
%=mj>HHeVfB>%D7D3\m<452M-BPqmY8^ahERk@u^bI*BkWci%Sj*nZ3U;:dr'PMjX,%dQAOj,?UtZ(c2SD&G';<3ImN87<f!#`tN9
%;0.u.iAta8q_lbHS*-/RkH`>KUp_=GUQ^0Mr>*hT<nEpq=FUgl]hHViq>:"InW9@Wl!Nnp=GiRBXoNdURK:l)BnNIZ(:gKdQrFX)
%$Fe)+!r)B?MN*Kq-4/2RLf(;hS.p0@D1M*oQ\*GHI73XX1hCrGFF=+&=cJMWXT49+[.8W]k0B7][4C/rUMK3`L)D0WE2pKh`U/nW
%\HD@W=e'BunlX*JX*:Hi4PHZqljAr0VcON3$ep:pW`1m!+VVK!lfsHXc3pFt+*$mpI#tkVTum$i5qX.a*K%>AkN%Le!$PiA<,,?P
%k43V;"R?*b.q@%Y*\W@6c.U_+=gt:H#l(%GILKFDQ%JJgbT>c!Ca<J>M@HV5r\*;.fRlJHaXB,Y0)K*kn_>#W&PRff=Z4o1N8o(g
%cU`Ld4:[hrKM@'ZUc[b8@0l;TWjZ]WHTqfgn>CX'Q1:05058rcRFRq1q,?8?]7s%F6^g7A:YiAn'o)qbK'AW+P!&!6K\Rpl=K9(I
%=^Xr*2m9cQHp+c@o>S1Q+"U`InpVd9FIYtqXPOc=b_,VHcEq:fMdB+Nd7tNoegYUl50YTJ@^EK,J.38IXno-.KFG6P(U>9W$<N!@
%a)ZBW01ED8f'dGm"e6,];pb5?e2R#S,HHjW`<!_"-G'`WPrQQ<Yh;:YXrU`dh1AiSI&RZU7_%P]/AYLWZ[)Y-Z>kob\YMHnrjRMY
%N*\)4]7jXLQ/d!Cha!aYX-GKiC$EU='W!JcW_H=KhAdZsb_R8J[@Sh6_:*B7Ne)roDBj"Gau-?O0VC,?#h:Ee1o]%K%8]9Q[UWQI
%Cc-kE.CGWc'mI0R@b1hR`btK@V(`!ZKqUS?:27/he-%6PjP,[n#Le%G<.J#C$@I4ogti]DM*\gU9]42OY$(\jQRRg!n/hFI`A5+Y
%Bi*U.XX0c[9IWF6C-!D[p'^=chst.K?%0Y:?a\ZM2aSOdpS6c@-usk+L'+nL=q#oX(j<Fhhu.\$!aDIe=<<%^]4kS#lIE%<Jb>YS
%Q\sKW-BbGkF,DYd$BEO2qdeoC+H4C<L]H&/$OKjEeU)(P/bSp@*\!k>!^^6`eR<ZbRQ-<SZ/;9)"t8g"?8>HhKM;+!^Sk8d&FS+9
%@rDtM(<E%:8LW+_=-=u&C]B;bE2q6=l2q<Z-3Y2=18<8Sf@2BXbGDR,/WOl6@X:,rQQHXD*N[F'*N4LX,Cldt\^<.EN+8^+g![r/
%d+,H$IPh9k>Xff'37g01*b`KW[G&hQ$6:[`B\[2b!Yd5+?Tr4QlV(4j*>?ZLXlq4@+]&Gu$b('hZtd@Y&`(=p/D*jamX$*^V,UJ;
%U0@c3WoN\Z_k%e=YbS(DI)NRFCrcuHXl3Nsa2ugTp%`=?I_BsCmrCA'D^hW^/5XU)0SBB#()MPa9PFTrqT'Vn(^hbQF?c#F&BVL]
%bh,g2rY=uQl9;<*A;5PJQV/<++t:'K:fJ6FH)gh^4@E__3`"1Pl?j2+_l7)4J!>Do>s[:q)6iZK`tN?JojjT^Y!Z,CZc!V(keCV*
%'rKL'GOO*Gbi81;neRYf(-)CH)K)>1ht*8^Re>ei_rUGP"e2te[R\]<\dJ38[Ocsdj=dO\F]Uo=!T*;;'mI+/E'MD^@3MuRCKe,6
%5HfT]-alODr_6H<20!tc%G&!j27<h@j]^u&N+"T5q87VK`'LE#3*TOZfQX/;!j0&j[s7.B&bf=D5\i`b8skI'q,]:T(h)]>Xc,l2
%.:LV(Ws?el%or>Yf+XS8C/F2F>9$#M\$kGA.;dfV-L/NB$bMZ,95lIPDt(fS5I1l+]PK6qp[sYH/7";H^Sb[/eZ</aA4:m]&3c=]
%CArn_A)q%u$0:'p'f.^_";]jll0AkXo\6EAQ8*BRUm]+a_g$&bQVn'=:6KVHaR>*>_eG5npb`gVEPd:D"l3I.!_q&$8&=J:F$ik!
%>#sq[Pns4+6X=!."e"krTrVLD>&2#9n]MrQ]JM#]:fBIn\?/C<k1>bIcA.Lk<Cb-R>pC#&&Zj.qqBL/jEG%%'lZPh%Ll9K]=Rmk:
%T`tr3`G24QU^@pLo;USCqqd#s"=,cRE6+DP;)d7<JioP+jT_dS'dl;k',<YV!>_<Hg6s!Qk&-r']IFXk=CienMJ)&"jM1#4't*g8
%N/r6f[ii[`WA5F\[O?<Y^-'D$?;#0JXF"B_*=\8+<FQ\?s1iBjTN9$o)n;<,*ZKWM6XpP5CEA@kW^eh-1qB*[7RV$UC$n4CIDRA*
%U8;QmRBe0#[h7<YUb/PF]Q8[D'jM^"(el"uFL;R`LSfOJRY[W#W6;8"3BnV(hnfb<4aC,rj=;&]\b66\e*nh"'aR"l9],Y.Hd<2V
%4.K!=O*-rKm1V.aOtZ9.l]E7A?G\eU%_SI%n6b>Le&;:C8D%jf:)!ic&XV1!e_<t4q_6!T3I?Ua8Y<BO7MLYZ:cfFL;fNOZ'j==q
%?a@\S3,BQ]@h]d)HCm%WXtT%:g@UY*Z&1567u1pAN-">=a\%-fVkpmojbkXt-Vr":r)*D@;bKMJZ1(qB@IH=5j?Q^S:5Tru?[_W)
%pBnrZn.A3]'bN%DfXC37b*G42f9t3j#-Dn%rqob.AltqolMEtsR'WEW1>H"X8AA.)7c-QO?!g[MNY!Y3JV^857+&mT15LTq@F<9A
%"S^X[<DAK(qBn@S]m9\Pf4?jngd;P\!0iGbK-%C$nGMVdpPP:@f_8WHLpjRhJ69E?(->D^02lGUQCJ^b3jkB*9grF%_]Odi]FsBL
%!Ie+PX^/7\iHiUk,?8mhT"N7<G>19sAUX]93sEW9ltS!Y."`8A5\aCQUA?ni5FA+9^BSea-Qt']kO0RRC8I"a'Pn5t]?2=E;9GIX
%I\P+=(T#R2Y")K9=NSDgnY%]NM6PUTm8jjBdB?9;"d,^K\5`FM8pLVTe5)u+Dg0*<o3_h^7erqGdtF*E]>G*<.6Z-A]R*<&fqK]-
%dbnO-g?*dH//%tJB5b8gXrA^,q:d/Nm`siN6FMIYVEP)!lXj0BSi1**U[\8**o8:2n&n:Pqk*oY+9(MSqHq;Cp$_qR5CE@WJ,AhE
%^3k23ronq4e%bhVs7jd0rmQAro3_Le+9(BZrq'Rtr6(`3oj:;.rqZSCr7<V%ns;T@g]-kPrpo5Zrp;rLQi@R&2r-Fjdm*g.s6Y=3
%a+*ma!F.l=#6~>
%AI9_PrivateDataEnd
